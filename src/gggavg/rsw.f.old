c  Arrays YOBS and YERR are physically 1-D for maximum flexibility,
c  but conceptually they are effectively 2-D arrays YOBS(nrow,nwin)
c  and are treated as such in the averaging_with XXX_bias subroutines
      implicit none
      integer idot,irow,j,jtg,k,ktg,lnbc,fnbc,fbc,i1,
     & npp,lrl,totnit,ntc,mlabel,mval,jval,navg,iav,
     &lr,lunm,lunr,lunc,lunv,lunw,luno,mwin,nwin,iwin,kwin,iwas,
     &mrow,nauxcol,nlhead,nmiss,iyrwas,doywas,
     & ncol,kcol,jcol,icol,cwas,
     &nrow,nss,nit,mit,iyr,doy,istat,nfound,loc,lwas
      parameter (lunr=12)      ! input file (.xsw)
      parameter (lunw=15)      ! output file (.xav)
      parameter (luno=16)      ! outlier file (.xsw)
      parameter (mwin=600)     ! Total number of columns/windows
      parameter (mrow=160000)  ! Max number of output records/spectra
      parameter (mval=3200000) ! Max number of values (NROW * NCOL)
      parameter (nauxcol=19)   ! Number of auxiliary parameters/columns
      parameter (mlabel=18000) ! Max Number of column lable characters

      character ans*1,apf*2,cdum*20,avglabel*1200,
     & gfit_version*48,gsetup_version*48,col_string*500,
     & csformat*80,collabel*(mlabel),swfile*80,avfile*80,col1*1,
     & spname_rl*21,specname_col*21,runlog*72,sign(mrow)*1,
     & spectrum(mrow)*20,tabel*80,clab(2*mwin+nauxcol)*17,
     & colfile*40,collate_version*48,gggavg_version*48,
     & window(mwin)*10,spname_rlwas*21

      real*8 airmass,asza,cl,tilt,zlo,fcen,width,zobs,rmin,rmax,
     & fqshift,graw,obslat,obslon,opd,ovcol,rmsfit,
     & r8was,r8year,r8ydiff,year(mrow),
     & trms,lasf,wavtkr,sia,sis,aipl

      real*4
     & ymiss,rew(mrow),cew(mwin),tew,error_sigma,
     & yaux(nauxcol,mrow),
     & yobs(mval),yerr(mval),
     & ybar(mrow),eybar(mrow),
     & bias(mwin),ebias(mwin)

      real*8 zpdtim,tout,pout,hout,tins,pins,hins,fovi,fovo,amal,
     & snr,zenoff,zoff,sg,zpdwas,max_delta_t,delta_t,zmin
      integer bytepw,ifirst,ilast,possp

      gggavg_version=' GGGAVG    Version 1.0.0   2008-09-28    GCT'
c  swfile='/home/toon/pa/lm/paIn_1.0lm.vsw'
      swfile='/home/toon/m4rat/m4rat.lsw'
      avfile='/home/toon/m4rat/m4rat.lav'

c  Write out all analyzed abundances to the .?sw disk file
      open(lunr,file=swfile,status='old')
      open(lunw,file=avfile,status='unknown')
      read(lunr,'(i2,i4,i6)') nlhead,ncol,nrow
      nwin=(ncol-nauxcol)/2
      read(lunr,'(a)') collate_version
      read(lunr,'(a)') gfit_version
      read(lunr,'(a)') gsetup_version
      read(lunr,'(8x,1016(e12.4))') (ymiss,j=1,ncol)
      read(lunr,'(a)') collabel
      do irow=1,mrow
         read(lunr,'(a1,f13.8,18f13.5,800(e12.4))',end=99)
     &   sign(irow),year(irow),(yaux(k,irow),k=2,nauxcol),
     $   (yobs(irow+nrow*(k-1)),yerr(irow+nrow*(k-1)),k=1,nwin)
      end do  !  irow=1,mrow
99    close(lunr)
      if(nrow.ne.irow-1) stop 'NROW mismatch'
c
c
      open(luno,file='outliers',status='unknown')

      call substr(collabel,clab,2*mwin+nauxcol,nss)
      if(nss.ne.ncol) stop 'NSS .NE. NCOL'
      write(*,*)nrow,nwin,nss
      loc=index(clab(nauxcol+1),'_')
      i1=index(collabel,clab(nauxcol+1)(:loc-1))
      avglabel=collabel(:i1-1)
      icol=nauxcol+1
      cwas=icol
      lwas=index(clab(cwas),'_')
      if(lwas.eq.0) lwas=index(clab(cwas),'-')
      kwin=1
      navg=1
      iwas=1
c      write(*,*)iwas,' '//clab(nauxcol+2)

      do iwin=2,nwin
         icol=icol+2
         loc=index(clab(icol),'_')
         if(loc.eq.0) loc=index(clab(icol),'-')
c         write(*,*)iwin,' '//clab(icol)
         if(clab(cwas)(:lwas-1).ne.clab(icol)(:loc-1)) then  ! new gas
            avglabel=avglabel(:i1)//
     &      clab(cwas)(:lwas-1)//'  '//clab(cwas)(:lwas-1)//'_error'
            i1=i1+26
            write(*,*)iwas,iwin-1,navg,' '//clab(cwas)(:lwas-1)
            call average_with_mul_bias (ymiss,nrow,navg,
     &      yobs(1+nrow*(iwas-1)),yerr(1+nrow*(iwas-1)),
     &      ybar,eybar,bias,ebias,rew,cew,tew)
c
c  Look for outliers
            do irow=1,nrow
              do jcol=iwas,iwas+navg-1
                if(yerr(irow+nrow*(jcol-1)).ne.ymiss) then
                error_sigma=(yobs(irow+nrow*(jcol-1))-ybar(irow)*
     &          bias(jcol))/tew/yerr(irow+nrow*(jcol-1))
                if(abs(error_sigma).gt.5.)
     &          write(luno,'(a12,f9.5,a22,i6,a11,a10)')' Deviation =',
     &          error_sigma,' sigma for spectrum # ',
     &          nint(yaux(4,irow)),' in window ',clab(nauxcol+2*jcol-1)
                endif
              end do
            end do
            call vmov(ybar,1,yobs(1+nrow*(kwin-1)),1,nrow)
            call vmov(eybar,1,yerr(1+nrow*(kwin-1)),1,nrow)
            do iav=1,navg
               write(33,'(a10,3f10.5)') clab(nauxcol+2*(iwas+iav-1)-1),
     &         bias(iav),ebias(iav),cew(iav)
            end do
            write(33,*)
            navg=1
            kwin=kwin+1  ! index of window/column to write averages
            iwas=iwin    ! First window of current gas
         else        ! Another window of the current gas
            navg=navg+1  ! number of windows in current average
         endif
         cwas=icol

         lwas=loc
      end do   !  do iwin=2,nwin
      write(*,*)iwas,iwin-1,navg,' '//clab(cwas)(:lwas-1)
      avglabel=avglabel(:i1)//
     &clab(cwas)(:lwas-1)//'  '//clab(cwas)(:lwas-1)//'_error'
      call average_with_mul_bias (ymiss,nrow,navg,
     & yobs(1+nrow*(iwas-1)),yerr(1+nrow*(iwas-1)),
     & ybar,eybar,bias,ebias,rew,cew,tew)
      call vmov(ybar,1,yobs(1+nrow*(kwin-1)),1,nrow)
      call vmov(eybar,1,yerr(1+nrow*(kwin-1)),1,nrow)
      do iav=1,navg
         write(33,'(a10,3f10.5)')clab(nauxcol+2*(iwas+iav-1)-1),
     &   bias(iav),ebias(iav),cew(iav)
      end do
c
c  Write averaged values to file
      kcol=nauxcol+2*kwin
      open (lunw,file=avfile,status='unknown')
      write(lunw,'(i2,i4,i6)') nlhead+1,kcol,nrow
      write(lunw,'(a)') gggavg_version
      write(lunw,'(a)') collate_version
      write(lunw,'(a)') gfit_version
      write(lunw,'(a)') gsetup_version
      write(lunw,'(8x,219(1pe12.4))') (ymiss,j=1,kcol)
      write(lunw,'(a)') avglabel(:lnbc(avglabel))
      do irow=1,nrow
         write(lunw,'(a1,f13.8,18f13.5,200(1pe12.4))')
     &   sign(irow),(yaux(k,irow),k=1,nauxcol),
     &   (yobs(irow+nrow*(k-1)),yerr(irow+nrow*(k-1)),k=1,kwin)
      end do
      close(lunw)
      close(luno)
      stop
      end

      include 'average_with_mul_bias.f'
      include 'average_with_add_bias.f'
      include '/home/toon/ggg/src/comn/substr.f'
      include '/home/toon/ggg/src/comn/lnbc.f'
      include '/home/toon/ggg/src/comn/fnbc.f'
      include '/home/toon/ggg/src/comn/fbc.f'
      include '/home/toon/ggg/src/comn/vsubs.f'
