c  Program linefinder.f
c
c  Reads a spectral residuals (spt) file created by GFIT
c  and computes the zero crossings of the 3'rd derivative
c  to identify the locations of the (missing) absorption
c  lines. The intensities of the missing lines is computed
c  from the absorption depths at the missing line locations
c  and knowledge of the slant column and spectral resolution.
c
c  Assumes that the original fitting was done with strong
c  smoothing (e.g. N3) to remove ringing (which otherwise
c  might be mis-interpreted as weak equally-spaced lines).
c
c  Program reads slant column from the spt/z* file header
c  and uses this to comute minumum line depth of interest.
c  Since EW of line is S.X and the width of the lines is
c  limited by the spectral resolution, resn, since generally
c  low pressure spectra are used for the purpose generating
c  a linelist. So S.X = resn.depth
c  So the line intensity is S=resn.depth/X = sfac*depth
c  where X is the slant column read from the spt file.
c
c  Program may require running multiple times if absorptions
c  contain multiple unresolved lines.

      implicit none

      integer*4
     & lunr_spt, ! LUN to read spectral fits from
     & lunw,     ! LUN to write ascii spectra to
     & i,j,kgas,kiso,
     & nlhead,ncol,
     & lr,lv,
     & lnbc,     ! function Last Non-Black Character
     & iend,     ! Endianess of host computer
     & mpts, npts,   ! Number of spectral values
c     & mterm, nterm, ! Number of polynomial terms to fit continuum
     & nlines

      parameter (lunr_spt=15,lunw=16)
      parameter (mpts=1280*1024)
      real*4 resid(mpts),deriv1(mpts),deriv3(mpts),
     & frx,yyx,tm,tc,thresh
c     & x(mpts),y(mpts),wt(mpts),jac(mpts,mterm),wk(mterm),c(mterm)

      real*8 rms1d,rms3d,tranmax,sfac,depth,dum,slcol,
     & freq,abhw,sbhw,eprime,tdpbhw,pshift,resn,
     & graw, nus, nue      ! selected frequency range of interest

      character
     & dl*1,
     & sllformat*23,
     & gggdir*(128),  
     & sss*93,
     & version*48,
     & sptfile*80,
     & outfile*18,
     & llfmtw*59

c      kgas=65   !  CHF3
c      kiso=1    !  Real linelist (not pseudo)

c      kgas=19    !  OCS
c      kiso=6     !  Real linelist (not pseudo)
c      abhw=0.085
c      sbhw=0.160

c       kgas=56   !  CH3OH
c       kiso=1    !
c       abhw=0.10
c       sbhw=0.40
c       eprime=400.
c       tdpbhw=0.7 
c       pshift=-0.003

c       kgas=70   !  C3H8
c       kiso=1    !  Real linelist (not pseudo)
c       abhw=0.12
c       sbhw=0.17
c       eprime= 400.
c       tdpbhw=0.65
c       pshift=-0.003

c       kgas=73   !  C6H6
c       kiso=1    !
c       abhw=0.10
c       sbhw=0.20
c       eprime=400.
c       tdpbhw=0.7 
c       pshift=-0.003

c       kgas=5   !  CO
c       kiso=1    !
c       abhw=0.058
c       sbhw=0.065
c       eprime=400.
c       tdpbhw=0.75
c       pshift=-0.004

c       kgas=11  !  15NH3
c       kiso=2    
c       abhw=0.085
c       sbhw=0.40
c       eprime=400.
c       tdpbhw=0.75
c       pshift=-0.004

c       kgas=25  !  HO2NO2
c       kiso=1    
c       abhw=0.1
c       sbhw=0.3
c       eprime=333.3333
c       tdpbhw=0.70
c       pshift=-0.002

c      kgas=6  ! CH4
c      kiso=1    
c      abhw=0.06
c      sbhw=0.07
c      eprime=333.3333
c      tdpbhw=0.70
c      pshift=-0.009

       kgas=11  !  15NH3
       kiso=1    
       abhw=0.085
       sbhw=0.40
       eprime=300.
       tdpbhw=0.75
       pshift=-0.006

       kgas=2  !   13CO2
       kiso=2    
       abhw=0.055
       sbhw=0.70
       eprime=300.
       tdpbhw=0.70
       pshift=-0.004

      tranmax=1.002 ! Jeremy Harrison's C2H6 spectra
      tranmax=0.997 ! Keeyoon Sung's  C3H8 spectra
      tranmax=0.980 ! KP OCS spectra
      tranmax=0.99  ! solar
      tranmax=0.999 ! Jeremy Harrison's CH3OH spectra
      tranmax=0.999 ! HO2NO2
      tranmax=0.980 ! CH4
      tranmax=0.995 ! NH3 residuals

      thresh = 0.020

      version=
     & ' Linefinder     Version 1.49   2018-09-25   GCT'
      lv=index(version,'Version ')
      write(6,*) version
      call getendian(iend)  ! Find endian-ness of host computer

      llfmtw=
     & '(i2,i1,f12.6,1pe10.3,e10.3,0pf5.4,f5.4,f10.4,f4.2,f8.6,a93)'
      sss=' generated by linefinder V'//version(lv+8:lv+12)

      sllformat='(i3,f13.6,6f9.5,4x,a33)'
c  Interrogate environmental variable GGGPATH to find location
c  of root partition (e.g. "/home/toon/ggg/" ).
      call get_ggg_environment(gggdir, dl)
      lr=lnbc(gggdir)     ! length of root string (e.g. 14)
c
      if (iargc() == 1) then
         call getarg(1, sptfile)
      else
         write(*,*)'Enter path to spt file'
         read(*,'(a)') sptfile
      endif

c  OPEN SPTFILE containing residuals
      open(lunr_spt,file=sptfile,status='old')
      read(lunr_spt,*) nlhead,ncol
      read(lunr_spt,*) nus,nue,npts,dum,dum,dum,dum,dum,dum,dum,slcol
      do j=3,nlhead
         read(lunr_spt,*) 
      end do
      write(*,*) 'slant column = ',slcol 
c  Check that buffer will be large enough
      if(npts.gt.mpts) stop 'Increase parameter MPTS'
      if(npts.lt.5) stop 'NPTS < 5'

      graw=(nue-nus)/(npts-1)
      resn=2.*graw
      sfac=resn/slcol
      do j=1,npts
         read(lunr_spt,*)freq,tm,tc
         resid(j)=tm-tc
      end do
      close(lunr_spt)

c  Compute 1'st and 3'rd derivative spectra
c  and their rms deviations
      deriv1(1)=0.0
      deriv1(2)=(resid(3)-resid(1))/2
      deriv3(1)=0.0
      deriv3(2)=0.0
      rms1d=0.0
      rms3d=0.0
      do i=3,npts-2
         deriv1(i)=(resid(i+1)-resid(i-1))/2
         deriv3(i)=resid(i-1)-resid(i+1)-(resid(i-2)-resid(i+2))/2
         rms1d=rms1d+deriv1(i)**2
         rms3d=rms3d+deriv3(i)**2
      end do
      deriv3(npts-1)=0.0
      deriv3(npts)=0.0
      deriv1(npts-1)=(resid(npts)-resid(npts-2))/2
      deriv1(npts)=0.0
      rms1d=sqrt(rms1d/(npts-4))
      rms3d=sqrt(rms3d/(npts-4))
      write(*,*) 'RMS 1D, 3D =',rms1d,rms3d

c  Generate name of output file (lf_1234_2345.161)
      if(nue.lt.999.0) then
         write(outfile,'(a3,i3.3,a1,i3.3,a4)')
     &   'lf_',nint(nus),'_',nint(nue),'.161'
      elseif(nue.lt.9999.0) then
         write(outfile,'(a3,i4.4,a1,i4.4,a4)')
     &   'lf_',nint(nus),'_',nint(nue),'.161'
      elseif(nue.lt.99999.0) then
         write(outfile,'(a3,i5.5,a1,i5.5,a4)')
     &   'lf_',nint(nus),'_',nint(nue),'.161'
      else
         write(outfile,'(a3,i6.6,a1,i6.6,a4)')
     &   'lf_',nus,'_',nint(nue),'.161'
      endif

c  Find the +ve zero crossings of 3'rd derivative
      open(33,file=outfile,status='unknown')
c      open(35,file=outfile(:lnbc(outfile)-4)//'.108',status='unknown')
      open(34,file='lf.out',status='unknown')
      write(34,*) 2,10
      write(34,*) 'f frx s y  d1i  d1p rms1d  d3i  d3p rms3d'
      nlines=0
      do i=1,npts
         if(deriv3(i)*deriv3(i+1).le.0.0*rms3d) then   ! zero crossing of 3'rd derivative
            write(67,*)nus+graw*(i-0.5),deriv3(i),deriv3(i+1),'ZC1'
            if(deriv3(i+1)-deriv3(i).lt.-0.0*rms3d) then  ! sufficiently negative-going zero crossing
               write(67,*)nus+graw*(i-0.5),deriv3(i),deriv3(i+1),'ZC2'
               if(deriv1(i+1)-deriv1(i).gt. 0.1*rms1d) then  ! increasing slope (+ve curvature)
                  write(67,*)nus+graw*(i-.5),deriv1(i),deriv1(i+1),'ZC3'
                  frx=deriv3(i)/(deriv3(i)-deriv3(i+1))
                  yyx=1+(1-frx)*resid(i)+frx*resid(i+1)
                  depth=-log(yyx/tranmax)
                  if(depth.gt. thresh) then
                     nlines=nlines+1
                     freq=nus+graw*(i+frx-1)
                     write(34,'(f11.5,2f8.4,7(1pe11.3))') freq,frx,
     &               depth,yyx,deriv1(i),deriv1(i+1),rms1d,deriv3(i),
     &               deriv3(i+1),rms3d
c                     abhw=0.038+0.036*exp(-abs(freq-4255)/50)
c                     sbhw=0.042+0.040*exp(-abs(freq-4255)/50)
                     write(33,llfmtw) kgas,kiso,1.0000000d0*freq,
     &               0.011*sfac*depth/4,0.0, abhw, sbhw, eprime,
     &               tdpbhw, pshift, sss 
                     write(67,*)nus+graw*(i-0.5),depth,'ZC4'
                  endif
               endif
            endif
         endif
      enddo
      close(33)
      close(34)
      write(*,*)'Number of lines=', nlines

c  Write ASCI derivative spectrum (for diagnostic purposes only)
      open(lunw,file='./lf_derivatives.out',status='unknown')
      write(lunw,*)2,4
      write(lunw,*)' f  r  d1  d3 '
      do i=1,npts
         write(lunw,'(f12.6,3(1pe12.4))') nus+graw*(i-1),
     &   resid(i),deriv1(i)/rms1d,deriv3(i)/rms3d
      end do
      close(lunw)

      stop
      end
