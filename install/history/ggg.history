  GGG spectral fitting program.

GFIT                Version 4.4.10  11-Oct-2009    GCT '
  Abandonned the do_retrieval2.f subroutine. This was intended
  to allow a fast, approximate FOV integration (for ACE), but it
  turned out to use a lot of memory (array slpd) and not be
  accurate enough.

apply_airmass_correction     Version 1.1.2   2009-11-07   GCT
apply_insitu_correction      Version 1.2.2   2009-11-07   GCT
  These programs now write the appropriate correction coefficients
  from the corrections.dat file into the output file headers.
  This is done separately by each program, even though the
  coefficients all come from the same file.  The writing of the
  correction coefficients into the header is done at the time
  when they are used, avoidindg problems if corrections.dat file is
  changed between the times that the airmass_ and insitu_correction
  programs are executed.

collate_results              Version 1.2.1   2009-11-07   GCT
  I converted the missing data value (9.9999E+29) from a vector
  to a scalar. So now, you have to use the same value for every
  column.  So we're lost the *flexibility* of having different
  missing values for different data columns, a feature that was
  never exploited, to the best of my knowledge.

GSETUP  Version 2.7.13   03-Oct-2009    GCT 
  Had to modify the code to allow MkIV spectra with names like
  phg89289.NNN to pick up the right model file (i.e. tm20091016.mod)
  This required calling the julian and the caldat subroutines which
  therefore had to be added to the Makefile.

modmaker6.1  03-Oct-2009  GCT
  Re-organized the if-statements that check that the .nc files
  downloaded from the NCEP/NCAR website contain sufficient levels.
  The error messages are now more specific in stating which NCEP
  file contains insufficient levels.

  Also, I was noticing from fits to ground-based MkIV spectra
  acquired during MOHAVE2009 that there was often too much H2O
  in the 10-14 km altitude range. So I modified the code that
  extrapolates the H2O vmr profiles above the highest NCEP
  level (300 mbar):
  1) I made H2O decrease faster above 300 mbar level by using a
      P(k)/P(k-1)**(5.5-P[k]/100) exponent instead of
      P(k)/P(k-1)**2.5
     This has the effect of making the extrapolated H2O decrease
     faster and faster with increasing altitude
  2) If the H2O partial pressure (vmr * pressure) exceeds the
     saturation vapor pressure over ice, it is set to the SVP
     Note that any super-saturation in the low-altitude levels
     (300-1000 mbar) covered by the NCEP H2O, is left unmodified.
  3) If the current pressure level is in the stratosphere 
     (i.e. P < Tropopause Pressure) then use the stratospheric vmr
  
  Also cahnged the functional of the stratospheric H2O from
       strat_h2o=9.7e-06-2.5E-06*alog10(10.0+Lev_AT[k])
     to
       strat_h2o=7.5E-06*exp(-0.25*zz^2)+0.5E-09*exp(+4.0*zz)
  

GFIT   Version 4.4.9   11-Oct-2009    GCT '
  HITRAN 2008 now contains a 4'th isotopolog of CH4, the
  doubly-substituted 13CH3D, aka 312.

  Notwithstanding the fact that the abundance of the 312 isotopolog
  is down by 2 orders of magnitude from CH3D and 5 orders of magnitude
  from the parent, I have to modify the isotopolog.dat file in order
  to be able to use HITRAN2008. Otherwise the 312 lines will be
  attributed to the 0'th isotopolog of the next gas (O2 CIA).

  This is a nuisanse because it means that all pre-existing .mav files
  will be rendered non-functional by this change. And we're never going
  to see any of the new 312 lines, except in isotopically enriched lab
  spectra.
 
abscoi.f    2009-10-10   GCT
  Fabiano found a bug in my implementation of CO2-broadening. The line
       if(kgas.ne.2) pbhw=pbhw+0.15*abhw*vmr(2,i)
  should be
       if(kgas.ne.2) pbhw=pbhw+0.15*abhw*vmr(specindex(2)+1,i)
  because the first index of the VMR array is the specie, not the gas.
  This is only important for Venus and Mars and therefore shouldn't
  make any difference for Earth spectra.

  Also, moved the statements:
        if(abhw.le.0.0) abhw=0.1
        if(sbhw.le.0.0) sbhw=abhw
  out of the loop over levels to earlier in the code. This avoids
  needless re-evaluation of these statements inside the loop.

write_official_output_file   Version 1.2.1   2009-10-07   GCT
  Added two additional lines to the xx_qc.dat files that allow the user
  the option of:
 1) writing or not writing data records with a non-zero error flag.
 2) writing or not writing the spectrum names (assuming that it is
   present in the .aia file).
  This makes the program more flexible.

  Also updated the other post-processing programs (collate_results,
  average results, apply_airmass_correction, apply_insitu_correction)
  to handle the 38 character spectrum names.

GFIT   Version 4.4.8   03-Oct-2009    GCT
  Increased the maximum number of target gases from 12 to 16
  and setting mtg=16 in gfit.f, spectrum_loop.f, and do_retrievalN.f
  Also had to make mode to write_spt.f to allow longer strings
  and more columns to be written to the .spt file.

  Also increased the length ofthe character string 'winfo' in
  gfit.f from 128 to 160 to allow for the longer list of target gases.

  Had to modify pfit.pro to accommodate the larger number of columns
  in the .spt files.
 
STRIP
  The output files now retain the full field width of the input file,
  rather than truncating to 101 CPL as proviously. This makes the
  .NNN extension to the output filenames consistent with their content.

VLL    Version 2.1.0    O2-Oct-2009    GCT 
  Changed program to accommodate the HITRAN08.162 linelist.
  Also, produces output including full comment/quantum string
  rather than truncating to 100 characters.

GFIT   Version 4.4.7   01-Oct-2009    GCT
  HITRAN 2008 contains 42 gases now, versus 39 in HITRAN 2004.
  This requires a change to hitran_to_atmos_gas_numbering.f
  to accommodate the 3 new gases :
     & 44,   !  40      CH3Br
     & 59,   !  41      CH3CN
     & 31/   !  42      CF4

GSETUP  Version 2.7.11   26-Sep-2009    GCT 
  Added back the statement
  znew=1.0E+38
  to the subroutine readvmrFC.f
  Thanks to Vanessa for pointing out that it had gone AWOL.

 avg_ker   Version 1.2.0    2009-08-31   GCT
 Added the ZO (zero offset) option to the calculation of the kernels.
 This option required corresponding changes to the GFIT code (fm.f),
 and so is not backward-compatible.

 GFIT   Version 4.4.5   11-Aug-2009    GCT '
In abscoi.f, changed
      nuoff=10.D0*dsqrt(2+dble(grid)*ncp*dble(p(2)))
to
      nuoff=10.D0*dsqrt(2+dble(grid)*ncp*dble(vmax(p,1,nlev)))
This makes the sunroutine more general, e.g. if there is only
one level for which absorption coefficients need be calculated,
or if p(2) isn't the level with the highest pressure.

 GFIT   Version 4.4.4   29-Jul-2009    GCT '
Changed write_col.f to include LRMAX in the argument list.
This is the length of the longest spectrum name found in the
runlog. This parameter is then used to format of the write
statement in the .col file to minimize white-space while still
keeping the columns lined up.
Previously, write_col used the actual length of each spectrum
name, which resulted in a difficult-to-read .col file when the
spectral names were of unequal length.
Also used LRMAX in the formatting of the column labels.

 WRITE_OFFICIAL_OUTPUT_FILE  Version 1.1.2  20090701  GCT
 We decided to put SIA back into the runlog, and hence back into
the xx_qc.dat file.  This was laborious because each row of the
file is labelled by an integer at the beginning. So when you insert
or delete a row from the xx_qc.dat file, all the subsequent rows
have to be renumbered.

So I decided to remove the two-digit integer from the beginning of each row.
Computers are good at counting and can figure out which row it is without
being told. This makes it easy to add/delete parameters.


 CREATE_RUNLOG    Version 8.6.1    25-Jun-2009   GCT
I now determine the number of column labels by calling the
substr subroutine, rather than hard-wiring the value in
the write statement of the runlog output file.

A similar change should be made to create_sunrun_from_xxxx


All                 2009-06-25    GCT
  Made several changes to the runlog format:
  1) Re-instated SIA (due to popular demand)
  2) Increased the lengths of SIA and FVSI from 6 to 7 (Vanessa Sherlock)
  3) Increased POSSP from I8 to I9 (Nick Deutscher)
  4) Increased IFIRST & ILAST from I8 to I9 (GCT)
  5) Increased SPECNAME from 35 to 38 characters (David Griffith)

The first two of these changes will require corresponding changes to the sunrun format.

This required modifying many programs and subroutines including:
   create_sunrun_from_xxx
   write_sunrun
   read_sunrun
   read_opus_header
   create_runlog
   gsetup
   read_runlog
   write_runlog
   collate_results

This also increased NAUXCOL, the number of auxiliary variables in the .vsw and .vav files from 22 to 23.


         2009-05-04    GCT
  Changed the name of the LUN variable from LUNV to LUN_SPT
to make it more descriptive and consistent with the calling subroutine.

read_opus_header.f         2009-04-04    GCT
Changed
>              call getopusparval(luns,bpointer,'PIM',iend,mrs,i2val,rs)
to
<              call getopusparval(luns,bpointer,'PIM',iend,mrs,i2val,rs)
<              if(rs.eq.0)then
<                call getopusparval(luns,bpointer,'PRS',iend,mrs,i2val,rs)
<              endif
This is because Bruker have apparently changed the name of the variable
representing the internal pressure from PIM to PRS.  In order to support
both old and new OPUS data.  Thanks to Dave Griffith for pointing this out.


write_sunrun.f             2009-03-27
Changed the format used to write FVSI to the sunrun from
1x,f5.4 to f6.4
Without this, the change made to write_runlog.f on 2009-03-04
is useless.

 collate_results            Version 1.1.3    2009-03-18    GCT
  Removed a STOP statement that was designed to alert the user to
  serious problems (rmsfit<0.0), but which were causing crashes
  on a few bad spectra, preventing analysis of subsequent good
  spectra.

  Did a similar thing to newdec.f (removed stop statement).

  Also removed all the extraneous occultation/window names
  from the *.men files.


 GFIT                Version 4.4.1      14-Mar-2009     GCT  
Reversed the following two code fragments to allow
a more precise frequency choice for simulated spectra.
--------------------------------------------------------------
        if(kspflag.lt.2) graw=graw*riair(lasf,tins,pins,hins)/
     &  riair(frqcen,tins,pins,hins)
c        graw=graw*(1.D0+(amal**2+fovi**2)/16)  ! FOV correction

c  If MIT > 0, check that requested spectrum is on disk,
c  and that it covers the specified spectral interval.
        kspflag=0
        call gindfile(dplist,runlab,specpath)
        if(lnbc(specpath).eq.0) kspflag=2
        if(debug) write(*,*)kspflag,'  '//runlab,specpath
--------------------------------------------------------------
 The problem with the code above was that the vacuum-to-air
 correction was performed even if the spectrum was missing
 (kspecflag=2). This caused spurious discrepancies between
 the frequency limits in the .ggg file and the runlog.
 Byy reversing the code fragments, the kspecflasg=2 was
 set earlier, preventing the vacuum-to-air correction for
 synthetic spectra.

 
 apply_insitu_correction      Version 1.1.2   2009-03-09   GCT
 Changed the code fragment:
        if (nchar .eq. 1) then
         output_fmt='(a35,f14.8,NNf13.5,200(1pe12.4))'
         write(output_fmt(12:13),'(i2.2)') naux
      else
         output_fmt='(f14.8,NNf13.5,200(1pe12.4))'
         write(output_fmt(8:9),'(i2.2)') naux
      endif
to
      if (nchar .eq. 1) then
         output_fmt='(a35,f14.8,NNf13.5,200(1pe12.4))'
         write(output_fmt(12:13),'(i2.2)') naux-1
      else
         output_fmt='(f14.8,NNf13.5,200(1pe12.4))'
         write(output_fmt(8:9),'(i2.2)') naux-1
      endif

Otherwise the first XGAS value is written in an F-format
rather that an E-format, with a resulting loss of precision.


BIN2ASC                   Version 1.4.1    08-Mar-2009    GCT
   Modified code to be consistent with the new runlog format.
   [Forgot to do this in the Jan 31, 2009 revision].


GSETUP Version 2.7.5       6 Mar 2009    GCT
  Added code at the end to automatically create a file
  (post_processing.sh) that runs:
    - collate_results
    - average_results
    - apply_airmass_correction
    - apply_insitu_correction
    - write_official_output_file

 This new code also creates the input files needed by
 each of these programs. There are named with a leading 
 dot/period (i.e., hidden) so as not to add clutter to
 the working directory.

 Also, simplified the ~/ggg/install directory by removing
 the input_files/ sub-directory and putting the files that
 were there as hidden files in the install/ directory.
 Note that 4/6 of these files are now automatically
 created by GSETUP. This change is purely organizational.


write_runlog.f             2009-03-04
Changed the format used to write FVSI to the runlog from
1x,f5.4 to f6.4
This doesn't actually change the runlog format, but it
does allows -ve FVSI values to be inserted into the runlog
and used to denote missing data.
Note that read_runlog.f was already using the f6.4 format
and so is unaffected by this change.

To support this, added the if-statement
  if(yrow(kfvsi).lt.0.0) yrow(kfvsi)=0.0  ! Don't let missing data affect UY
to derive_airmass_correction.f and derive_insitu_correction.f


error_scale_factor           Version 1.1.2   2009-03-03   GCT
Fixed a couple of bugs fixed in error_scale_factor.f
that were causing the derived error scale factors to
be too small. Thanks to Nick & Vanessa for pointing
these out.

2009-03-02
Vanessa Sherlock modified all 8 post-processing programs:
  collate_results.f
  average_results.f
  derive_airmass_correction.f
  apply_airmass_correction.f
  error_scale_factor.f
  derive_insitu_correction.f
  apply_insitu_correction.f
  write_official_output_file.f

She did this to facilitate the inclusion of spectrum names
in the output files and to support errors flags.

There is also a new subroutine (generate_qc_flag.f) that
resides in the ~/ggg/src/collate_results/ sub-directory.

These new capabilities are activated by setting the statements
      append_qcflag=.false.
      append_spectrum_name=.false.
in collate_results.f from .false. to .true.
By default, these new capabilities are not activated,
to maintain compatibility with previous GGG versions.


 write_official_output_file   Version 1.1.0   2009-02-23   GCT
Added some code to count the number of error flags of each 
type and to output this info to the screen.


 apply_airmass_correction     Version 1.1.0   2009-02-23   GCT

Replaced the line
   fu=sqrt((yrow(k+1)/yrow(k))**2+(yrow(ko2+1)/yrow(ko2))**2)
by
   if(k.eq.ko2) then
     fu=yrow(k+1)/yrow(k)  ! fractional uncertainty
   else
     fu=sqrt((yrow(k+1)/yrow(k))**2+(yrow(ko2+1)/yrow(ko2))**2)
   endif

Otherwise the O2 error bars are added to themselves, resulting
in a factor 1.414 enlargement. Thanks to Vanessa for pointing
this out.

Also, since fu is always +ve (being the SQRT) it is necessary
to ABS the uncertainties. Otherwise the uncertainties will ne
set to -ve values whenever the XGAS values are -ve.

 GFIT                Version 4.4.0      21-Feb-2009     GCT 
Removed the call to subroutine zenaz to compute the doppler
shift. Instead, used the OSDS parameter from the new runlog.
Also removed all the if-statements that used to hardwire
the doppler shifts of selected spectra (in the solar runlog)
to specific values. These values can now be hardwired in the
runlog itself, rather than the source code.

 write_official_output_file   Version 1.0.8   2009-02-18   GCT
A new program that takes the airmass- and insitu-corrected
data file (runlog.vav.ada.aia) and re-writes a subset of this
info in a more user-friendly format with header information.
The output information is controlled by the file
~/ggg/tccon/pa_qc.dat a portion of which is shown below
Additional site-dependent header info is obtained from the file
~/ggg/tccon/pa_oof_header.dat

The table below lists the acceptable range of parameters in the .vav.ada.aia files
In the event that the data fall out of range, the error flag points
to the #-value of the variable that was furthest out of range.
 # Variable  Output  Scale  Format   Unit     Vmin     Vmax     Description
 1 "year"        1  1.0E+00 "f7.0" "      "   2004.0   2016.5   Year (e.g. (2009)
 2 "day"         1  1.0E+00 "f6.0" "      "   0        366      Day of the year (1-366)
 3 "hour"        1  1.0E+00 "f8.3" "      "  -12.0     36.0     Fractional UT Hour
 4 "run"         0  1.0E+00 "f6.0" "      "   0        9999     Not output
 5 "lat"         0  1.0E+00 "f8.2" "(deg) "   45.8     46.0     Latitude (deg.)
 6 "long"        0  1.0E+00 "f9.2" "(deg) "  -91      -90       Longitude (deg.)
 7 "zobs"        0  1.0E+00 "f7.2" "(km)  "   0.44     0.45     Geometric Altitude (km)
 8 "zmin"        0  1.0E+00 "f7.2" "(km)  "  -0.0     +0.9      Pressure Altitude (km)
 9 "asza"        1  1.0E+00 "f7.2" "(deg) "   0.0      84.0     Solar Zenith Angle (deg)
10 "azim"        1  1.0E+00 "f8.2" "(deg) "  -180      360      Solar Azimuth Angle (deg)
11 "osds"        0  1.0E+00 "f7.3" "(ppm) "  -9        9        Observer-Sun Doppler Stretch (ppm)
12 "opd"         0  1.0E+00 "f7.2" "(cm)  "   40.0     50.0     Optical path Difference (cm)
13 "fovi"        0  1.0E+00 "f6.3" "(rad) "   0.0      0.005    Internal Field Of View (rad)
14 "graw"        0  1.0E+00 "f7.4" "(cm-1)"   0.0      0.016    Spectral Point Spacing (cm-1)
15 "tins"        0  1.0E+00 "f6.1" "(C)   "   25.0     35.0     Internal Temperature (C)
16 "pins"        0  1.0E+00 "f7.1" "(mbar)"   0.0      1030.0   Internal Pressure (hPa)
17 "tout"        1  1.0E+00 "f6.1" "(C)   "  -35.      40.      External Temperature (C)
18 "pout"        1  1.0E+00 "f7.1" "(hPa) "   940.     1030.    External  pressure (hPa)
19 "hout"        1  1.0E+00 "f6.1" "(%RH) "   0        110.     External Humidity (%)


 MOD_MAKER6.PRO     17 Feb 2009
We were having memory problems when running with
an entire year of global data. The larger input
files were over 500MB each and so several GB of
memory was needed by mod_maker5.  So I reduced the
memory footprint by a factor ~7 by reorganizing
the main program around a single, re-usable data
array (Global_Data) rather than having separate
arrays for each parameter (AT, GH, TP, SH).  This
required that the interpolation to the lat/long
of the site happen immediately after reading in the
global data rather than later. I also removed some
of the intermediate global arrays (Geopotential_Hgt,
Specific_Humidity).

mod_maker6 should now execute with input files as large
as 523MB (a year of global AT data) on a computer with
only 2GB of memory.


 GFIT     Version 4.3.2   4-Feb-2009   GCT 
Added the capability of retrieving O2 under the
labels "ao2" or "bo2".  This means that the O2
determined from the 1.27 micron band (o2), the
A-band (ao2), and the B-band (bo2) will not be
averaged, they are kept separate in the .vav
file and in subsequent files.
This is analagous to using "tco2" to keep the
temperature-sensitive and insensitive windows
separate so that they are not averaged together.

Feb 4, 2009
added a 4'th parameter (NAUX) to the first header line
of the .vsw .vav. .ada, .aia files. This means that naux
doesn't have to be hard-wired inside the programs that
use these files (collate, average, ada, aia), instead
it is read from the header line. This makes the programs
more flexible.

Added statements to create_sunrun that write warnings
if a .gnd file contains lamp spectra, or if a .lab
contains solar spectra. 

apply_airmass_correction.f  Feb 4, 2009 GCT
added an if-statement that detected the condition that the
O2 column is zero, and issues a warning.  This can happen,
for example, if vacuum lamp runs are analyzed for O2. 
This is a problem because the gas coloumn are divided by
the O2 columns to comput Xgas, which causes Inf's in the
.ada output file, which then causes apply_insitu_correction
to crash.

January 31, 2009
Major revision to the format and content of the sunruns
and runlogs. Added wind speed and direction, azimuth angle,
the Observer-Sun Doppler Stretch, and replaced SIS & SIA by
their ratio FVSI.

This required modifying many programs and subroutines including:
   create_sunrun_from_xxx
   write_sunrun
   read_sunrun
   read_opus_header
   create_runlog
   gsetup
   read_runlog
   write_runlog
   collate_resultS

This also required an increase in NAUX, the number of
auxiliary variables in the .vsw and .vav files from 19 to 22.

This change is not backward compatible -- your old runlogs wont work.


  collate_results    Version 1.0.4    2009-01-29    GCT
 Added the statement
       specname_gwas='x'
 Otherwise .col files containing a single scan would
 not increment irow, causing an array-bound violation.

 Also, collate_results now produces an additional output
 file called collate_results.nts (NTS = Negative Time Step)
 This is hopefully of size zero. If not, it means that your
 runlog is not chronologically sorted. This is not necessarily
 a problem, but it can indicate some kind of an issue. 

 GSETUP           Version 2.7.4      30 Jan 2008    GCT 
Uses the wlimit function to prevent slant paths of *****
being written in the .ray file when ground-based spectra
have SZA exceeding 93 deg.
Of course, these spectra have serious problems (probably
mis-identified lamp runs) and should be fixed/deleted.
But meanwhile we don't want them to crash GFIT and stop
us from analyzing subsequent good solar spectra.

Created four new programs evaluate airmass-dependent and
airmass-independent (insitu) corrections to the XGAS values,
and apply these corrections. The programs are named.
   derive_airmass_correction.f
    apply_airmass_correction.f
    derive_insitu_correction.f
     apply_insitu_correction.f

Also wrote a program to output a subset of the .vav.ada.aia
file in a nicer format with error flags.
  write_official_output_file.f

GFIT     Version 4.3.1  23-Jan-2009   GCT 
Improved the way that the checksum files are implemented.
In the previous versions, the checksum files always had
the same name -- checksums.out.  Which was fine if you
only ran one GFIT job at a time. But multi-processor
batch jobs running multiple GFIT jobs from the same sub-
directory, allow the possibility of one GFIT job trying
to open and write to a checksum file that is currently
being read. 

To avoid this, GFIT now uses the getpid function to return
the Linux/Unix Process ID number (this is what you see in
the first column when you do the "top" command). This will
be different for different GFIT jobs on the same computer.
So building the PID into the name of the temporary file
containing the md5sums (e.g., check_md5sums_022789.tmp)
makes it unique, eliminating the risk of two GFIT jobs
trying to access that same checksum file simultaneously.
Thanks to Debra for figuring out how to fix this.

Since the checksum files now have an unique name, they
don't overwrite each other.  So GFIT now deletes the
checksum file upon closing, so the sub-directory doesn't
get cluttered with hundreds of the darned things.


collate_results  Version 1.0.3  2008-12-24  GCT'
Noticed that some observation days with only one spectrum were
being dropped. This happens whenever the extension (e.g. '.000")
matched that of the next spectrum. Fixed this with a more thorough
if-statement which checks the dates as well as the extension.

And since GGG is not longer supporting Windows OS, I Replaced
      do k=lr,1,-1
         if(ichar(runlog(k:k)) .eq. 92) go to 101  ! backslash
         if(ichar(runlog(k:k)) .eq. 47) go to 101  ! forward slash
      end do
101   outfile=runlog(k+1:lr-3)//ans//'sw'

with

      outfile=runlog(lloc(runlog,'/')+1:lr-3)//ans//'sw'

I also renamed some of the lun variables, e.g. lunc --> lun_col


 GFIT     Version 4.3.0  22-Dec-2008   GCT
Two changes to solar_pseudo_trans_spec.f
1) Increased parameter margin from 20 cm-1 to 90 cm-1
2) Decreased parameter acc from 0.0001 to 0.00004
These changes are in response to small discontinuities
in the residuals due to truncation of solar lines.
These residuals were only seen when fitting noise-free
synthetic spectra.

tccon_ingaas.gnd    2008-12-05
Changed the default apodization for the cell HCl lines
from 1 to 0 in the file ggg/windows/gnd/tccon_ingaas.gnd

GSETUP, CREATE_RUNLOG   04-Dec-2008
Ran into several problems trying to get the GGG code
installing and executing under Cygwin, a Linux-like
environment under windows.
1) The executables generated by the G77 compiler had .exe
  extensions to their names. 
  To fix this I added the following statement to master.bat
  rename .exe "" ../bin/*.exe
2) Renamed the file master.bat to master.sh
otherwise, under Cygwin, the contents are
first interpreted as DOS commands rather than Unix.
("rename" is a valid DOS command)
3) Under Cygwin, the result of the  getenv('LOGNAME',user)
command is the same as under windows. So the GGG code
assumes a windows/DOS envoronment and starts acting
accordingly (e.g. using \ as the delimiter rather than /)
I therefore made the decision to drop the capability
of running GGG in a DOS/windows environment. 

If you want to run it on your laptop, you'll have to
install Cygwin (which may cause a loss in speed).
This simplifies several of the programs such as GSETUP,
CREATE_SUNRUN, which used to contain if-statements like:
c  Platform specification:    DG000909
      call getenv('LOGNAME',user)
      if(user.eq.'        ')then ! It's not a Unix/Linux machine
         platform=2               !0=Sun, 1=PC-Linux, 2=PC-Win32
         dl=char(92)              !Back-slash  ('\')
         root='g:'//dl            !DG Jan03
         user='PC-Win'
      else                       ! It's a Unix/Linux machine
         platform=0               !0=Sun, 1=PC-Linux, 2=PC-Win32
         dl='/'
         call getenv('GGGPATH',root)
         root=root(:lnbc(root))//dl
c         root='/home/toon/ggg/'
      endif
      lrt=lnbc(root)       !Length of root



GFIT, GSETUP, CREATE_RUNLOG   21-Nov-2008
 Due to various requests for longer spectrum names (e.g. GDS,
Wollongong) I have increased the number of allowed characters to 35.

I have previously partially completed this task to be able to
handled time-stamped GDP spectra using GDS-supplied runlogs,
but I had never inplemented this end-to-end.

tccon_ingaas.gnd  Nov 13, 2008

Added 5 new HDO windows to tccon_ingaas.gnd
 4054.60   3.30  15 1 1 0  cl  ct  fs  so    : hdo  h2o  ch4
 4116.10   8.00  15 1 1 0  cl  ct  fs  so    : hdo  h2o  ch4
 4212.45   1.90  15 1 1 0  cl  ct  fs  so    : hdo  h2o  ch4
 4232.50  11.00  15 1 1 0  cl  ct  fs  so    : hdo  h2o  ch4  co
:4261.70   9.10  15 1 1 0  cl  ct  fs  so    : hdo  h2o  ch4  co
These were based largely on Nick Deutcher's windows.
The last of these five windows gives results that are
systemarically 6% lower than the others and with a worse
Chi-squared/N. I therefore commented it out.

GSETUP Version 2.7.2      22 Oct 2008    GCT 
Various minor tweaks, to try to be more specific about the
logical unit numbers. This followed a problem that David
Griffith reported whereby his runlog was overwritten by
error messages (due to lun_rlg not being initialized.
 - added missing parameter statement (lun_rlg=21)
 - defined lun_mod=22, lun_vmr=23 (instead of using
   a hardwired value of 19)
 - added lun_mod as an argument to readmodFC.f
 - changed lunt inside write_mav to 19

Also removed a few obselete statement labels.

2008-10-14  GCT   spectrum_loop.f
   Added 4 more gases to the isotopologs.dat and the
.vmr files:  NF3, ClOOCl, ClClO2, ClOClO.
These are gases that Voltaire was placing upper limits
on using MkIV balloon spectra.
Increased parameter MGAS in abscoi.f from 64 to 68.

2008-10-13  GCT   spectrum_loop.f
   Instead of the MSPT parameter being hardwired to 2000
inside spectrum_loop.f, it now tries to read this value
from the SPT line of the .ggg file. For example,
/home/toon/ggg/spt/z   2500
sets MSPT=2500.  This gives the user the ability to
change this value.  If no value is provided, it will
use the default value of 2000.
Reminder: MSPT is the maximum number of SPT files
that will be written to disk.

2008-10-09  GCT   JETSPE.F
   Changed jetspe.f, spectrum_loop.f and newspect.pro 
allow the use of spectra that are sorted in increasing
wavelength rather than increasing frequency. I believe
that the former is the default on Brukers. This involved
extensive modifications to jetspe.f in particular.
I removed the option of jetspe returning a partial
spectrum. It now returns a failure status if the
requested interval is not fully present in the disk file.

This was tested by copying a Bruker spectrum and
writing its contents backwards. Then changing the
original runlog such that:
  delwav=-delwav
  ifirst=-ilast
  ilast=-ifirst

2008-10-08  GCT
   Removed the LLSIZE line from the .ggg files.
This was an anachronism from the days when we had
a separate file containing the linelist sizes.
This makes the header of the .ggg and .col files
one line shorter.  Changed gsetup/gfit to skip
this line.
   Important: this means that the new GFIT is
incompatible with old .ggg files.

2008-10-07  GCT
   GFIT now computes MD5SUM's of all input files
and writes them to the .col file header. This will
hopefully make it easier, when comparing .col files
to figure out where any differences are coming from.
Very often, the linelist linked to atm.101 in one
person's directory is different from another's.
The checksum tells us whether the linelists are
the same or different, despite having the same name.

Had to change the format of the read statements in
collate_results to handle the fact that most of the
header lines no have 32 extra characters at the
beginning (the 32-character checksum plus two spaces)

Unfortunately, I don't have a Fortran subroutine to
compute the checksums, so I had to use a system call
to do this and redirect its output to a temporary file,
checksums.out, which was then re-read for the checksum
values.  This is clumsy but it seems to work.

Another drawback of the system call is that on some
computers you have to explicitly link to the library
containing the system call functions if your compiler 
is not set up to do this automatically.
For GFORTRAN this is the -static option
For Absoft F90, this is the lU77 option

Alternatively you can add the line:
export LD_LIBRARY_PATH=/usr/local/gfortran/lib:$LD_LIBRARY_PATH
to "/etc/profile". This has the advantage of keeping
the executable small.

2008-09-30  GCT
Made several changes to the Makefiles in order to
make it easier to switch compilers.

I have defined a symbolic link:
~/ggg/install/.ggg_compiler
It is linked to one of three files
~/ggg/install/.g77
~/ggg/install/.gfortran
~/ggg/install/.f90

When you install the GGG code, the default compiler is g77.
If you want to change this to something else, you simply 
redefine the symbolic link to point to the file representing
the compiler that you want to use. This way, you don't have
to edit 20 Makefiles because each one now contains an include
statement that includes the content of .ggg_compiler.
This content includes, for example
   FC = g77
   FCFLAGS = -c -O -fbounds-check -Wall -W
   LDFLAGS =


COLLATE_RESULTS & AVERAGE_RESULTS
 Split GGGAVG into two programs:
collate.f  reads the .col files and runlog and writes
the info in a big spreadsheet file named runlog.xsw

average_results.f  takes the file runlog.xsw as input,
averages the windows belonging to the same gas, and
writes the results to a file runlog.xav.  It also
produces an output files
wincomp.runlog.xav
outliers.runlog.zav

There were two reasons for this major change
1) ggavg.f was getting too complicated
2) gggavg needed too much memory.

The latter problem was solved by making the 
largest arrays, YOBS and YERR, one-dimensional
in the main program (but 2-D in the subroutines.
This way it can handle MkIV balloon spectra where
the number of windows/columns is large (400) but
the number of spectra/rows (1200) is small.  And
it can handle the TCCON case where the number of
spectra is huge (160000) but the number of windows
is small (20). To handle both these cases without
recompilation using statically defined 2-D arrays
would require 
  400 x 160000 x 4 bytes x 2 arrays = 512 MBytes
which is beyond the memory capability of older computers.

.vmr files       19 Sep 2008  GCT
   Reduced the mars dust vmr from 1.0E-18 to 1.E-25
in gnd_summr.vmr after noticing significant dust
absorption up to 5000 cm-1 (where it abruptly stops)
in high-airmass ground-based spectral calculations.

Also, changed all the 0.000E+00 values to 1.000E-25
in the tropics.vmr to avoid any possibility of
zero-divide problems.  The gnd_summr.vmr file
was already ok in this respect.

Various          12 Sep 2008   GCT
Formatted all free-format write statements in
gfit.f, write_mav.f, gsetup.f, gggavg.f
These were causing a different style of output with the
G77 and GFORTRAN compilers.  For example, the statement
write(lunx,*) headlen,ncol
would produce
 21 48             using the G77 compiler and
      21      48   with GFORTRAN
This caused the output files to appear different
when doing a diff, even when their content was
identical.

master.bat                 23 Aug 2008  GCT
  Reorganized this file to eliminate the sub-batch files.
Now, the one file does everything (deleting the .o files,
running all of the Makefiles, running create_runlog,
gsetup, multiggg.bat, and gggavg, and then looking for
differences)

Makefile                   22 Aug, 2008   GCT
  Made two improvements:
 1) The Makefiles now reference all the .f and .o files by their
  full paths.  This means that the Makefile can now be executed
  from any directory, not just the one where the Makefile is
  located.  This simplifies the process of compiling all the
  source code during installation (i.e., master.bat).
 2) A Makefile is no longer needed in the src/comn/ directory
  since all the files are now referenced by their full paths.
  This removes the most common source of mistakes: inconsistencies
  between the source Makefile and the one in src/comn/.

gnd_summer_20080821        21 Aug 2008    GCT
 Changed the a priori profiles of CH4, HF, and N2O to better
 conform to recent MkIV balloon profiles and to ACE data.

SUMMARIZE_LINELIST 1.1.0    18 Aug 2008    GCT
  Removed hard-wired paths (e.g. /home/toon/ggg/)
  Wrote output info to files rather than the screen.

BIN2ASC    Version 1.4.0    15-Aug-2008    GCT
  Added an extra decimal place to the frequencies
  in order to make Linefit happy (otherwise the
  rounding error causes the frequency point spacing
  to be too uneven.

CREATE_RUNLOG   Version 8.3.1   12-Aug-2008   GCT
  Now calls wlimit.f to prevent format overflows (****)
  when writing the OPD to the runlog. Otherwise, these
  cause GSETUP to crash.

GFIT      Version 4.1.3      10 Aug 2008   GCT
  Changed the column labels in the .col to be more
  consistent with the names of the retrieved parameters
  in the command line of the .ggg file
  Thus, Tilt becomes CT
     Sh becomes FS
     Zoff becomes ZO
  I also changed VF to VSF (VMR Scale Factor)

GGGAVG    Version 2.6.6   09-Aug-2008   GCT 
  Now produces a warning if the runlog times are not
  chronological, i.e. there is a -ve time interval.
  For example, this can serve as a warning of the
  InGaAs and Si spectra not being interleaved. 

  Also now writes two more diagnostics to the gggavg.rpt
  file for each window:
  1) The average number of iterations
  2) The % of spectra for which convergence was achieved

GFIT      Version 4.1.2       8 Aug 2008   GCT
  Converted wlimit.f to double precision to be able to
  handle formats with more than 7 sig figs, e.g. f9.4
  This prevents '*********' in the VF field of the .col

GFIT      Version 4.1.1      23 June 2008   GCT
  Simplified the noise addition capability.
  It now adds noise to the observed spectrum whereas
  previously it was added to the calculated transmittance.
  The advantage of the former is that you don't need an
  array to store the noise since it is only added once
  (rather than every iteration).  The disadvantage is
  that the observed spectral values are not guaranteed
  to lies between 0 and 1. There is an arbitrary scale
  factor: if you ad 0.01 of noise to a signal of 20000,
  it has much less impact than if you add 0.01 to 1.0.

  Made two changes to the format of the .col files:
  1) The Zmin is now written as f8.3 to allow
    tangent altitudes > 1000 km (Titan)
  2) The OVC has one additional sig fig to make OVC_air
   less susceptable to rounding error.

DIURNRET    Version 4.14.3   22-June-2008   GCT
   made minor changes to the weighting used to interpolate
   the auxiliary parameters (e.g. time) from tangent
   altitudes to level altitudes. The old weights became
   inacurate when the level spacing became very large (e.g. 30 km)

   Also, added code to write Jacobeans to file (runlog.jac)
   so that a stand-alone program can use them to compute the
   averaging kernels.

GINDFILE    April 19, 2008
As part of my crusade to remove user-dependent names
from the ggg code and its input files, I have modified
gindfiile to allow the user to define paths such as
   ~/ggg/spectra/
in the data_part.lst file, instead of
   /home/toon/ggg/spectra
This uses the $HOME environmental variable.

MODFFT.f
 Adopted Jean-Francois' latest version of this subroutine
which includes the following changes.
c  Revision 1.5  2004/05/14  JFB
c    Replaced leading tabs with spaces
c    Fixed indentation of variable declarations
c    Added "implicit none" to individual subroutines
c    Replaced two instances of "pii = 4.*datan(1.d0) with
c      "pii = real(4.d0*datan(1.d0))" to avoid ftnchek warnings
c    Removed unused label "90" in front of "call ord1 (m, b)"
c    Added parenthesis around "-p7", "-tr3", and "-t8" to avoid G77 warnings


GSETUP   Version 2.7.1   Feb 3, 2008   GCT
Made changes to gsetup, readmodFC, and readvmrFC to simplify the process
of fitting lamp spectra. Previously this was done by pretending that the
lamp spectra were ground-based solar spectra, and then hacking the .mav
and .ray files produced by gsetup until only one (two including the cell)
level was present. These files were also modified to change the T/P/vmr
and path length of the remaining level to the desired values.

But this process was error prone and difficult to explain to others. With
more people now wanting to fit lamp spectra, I decided to modify GSETUP
such that it creates the correct single-level .mav and .ray files. Hacking
is no longer required. This was implemented using if-statements to identify
the special nlev=1 case that represents lamp runs. It was actually easier
than I had expected -- I should have done it years ago.

Here are the instructions for fitting lamp spectra for the first time:
0) Create a file (e.g. lh20080123.lab) containing a list of the names of
   lamp spectra
1) Make sure that you have a ~/ggg/apriori/gfit_ap.lab
2) Make sure that you have a ~/ggg/sunruns/lab/ sub-directory
3) Check that lamp spectra are in a sub-directory listed in data_part.lst
4) Run create_sunrun_from_lauder
   This will create a file ~/ggg/sunruns/lab/lh20080123.lop
5) Check that aipl parameter is equal to the path length (km) inside the
   Bruker and that pout=0.0.
6) Make sure that you have a ~/ggg/runlogs/lab/ sub-directory
7) Run create_runlog
   This will create a file ~/ggg/runlogs/lab/lh20080123.lrl
8) Add ld20080123.lrl to the list in ~/ggg/runlogs/lab/runlogs.men
9) Copy the one-level model file lh20080123.mod to ~/ggg/models/lab/  and
   include it in the models.men file. Make sure that it correctly represents
   the T/P inside your Bruker.
10) Copy the one-level vmr file lh20080123.vmr to ~/ggg/vmrs/lab/ and
   include it in the vmrs.men file. Make sure that it correctly represents the
   vmrs inside your Bruker.
11) Copy the file one_level.lev to ~/ggg/levels/ and include it in the
   levels.men file.
12) Create a list of windows in ~/ggg/windows/lab/ and include it in the
   windows.men file.
13) Run ~/ggg/bin/gsetup choosing the "l" option. Ignore the TLPATH-related
   error messages. They are simply because TLPATH refuses to ray-trace a
   one-level atmosphere, which is fine (we don't need it to).
14) Run gfit (either directly or as a batch job using multiggg.bat)


ABSCOI.F   Dec 4 2007
 Reduced the size of the FRAC parameter in abscoi.f by a
 factor 4, from 0.0001 to 0.00025. This improves fits to
 the strong Doppler CO2 lines of the nu_3 CO2 band in the
 upper stratosphere where they are already highly saturated.
 The problem there is that although the pressure broadening
 is much smaller than the doppler broadening, the former
 nevertheless dominates in the line wings. So if the line
 is sufficiently strong, the pressure-broadened "wings"
 are easily discernable, even at 60 km altitude. 
 The down-side of this is that abscoi is slightly slower.

CREATE_RUNLOG   27 Nov 2007  GCT
  Realized that there were two subroutines: rdopushead.f and
read_opus_header.f, that did essentially the same thing: to
return the values of selected parameters from the OPUS header.
The former subroutine was used by create_runlog and the latter
by create_sunrun_from_xxxx.

I decided to merge these two subroutines into one.
This required adding several parameters to the
read_opus_header.f argument list (ms,foc,dfr,gfw,gbw,lfl,hfl).
While I was at it, I removed the parameter nscans from the
argument list, since it didn't appear to be used for anything.

I then had to modify all the create_sunrun_from_xxxx.f
source codes to use the modified argument list.

All source code   21 Oct 2007  GCT
 Several minor mods to enable compilation with the G95 compiler.
 These included
1)  Editing the Makefile to remove unrecognized compiler options
2)  Avoiding float(I*2) which is not allowed in g95 !

Also did several things to reduce the number of warnings such as
Replacing obselete Fortran code (e.g. in-line functions,
non-block do-loops, arithmetic if-statements)

Also made sure that 'implicit none' was present in every program
or subroutine.

CREATE_RUNLOG  Version 8.2.3    8 Oct 2007   GCT
 Vanessa noticed that the solar zenith angles prior to
 UT midnight were wrong. This was because I neglected to
 update the integer date when I changed the day number
 and the gmt time (to make all the spectra acquired on
 the local day have the same day number).
 This was fixed by changing
         call zenaz(object,oblat,oblon,obalt,iy,im,id,
     &   gmt/24.d0,asza,azim,eorv,ervc,tplat,tplon,tpalt)
 to
         call zenaz(object,oblat,oblon,obalt,iy,one,doy,
     &   gmt/24.d0,asza,azim,eorv,ervc,tplat,tplon,tpalt)

 At the same time, I noticed that there were several calls
 to the zenaz subroutine from inside rdsphead.f, in addition
 to the call from create-runlog.f. These calls were a hangover
 from the days when the asza could be read from the spectrum
 header, and not calculated. But since rdsphead no longer
 returns asza to create_runlog, it is pointless to be calling
 zenaz from inside rdsphead.f.  I deleted all calls to zenaz
 from inside rdsphead.f

CREATE_RUNLOG  Version 8.2.2    8 Oct 2007   GCT
 Initialized the variables GFW and GBW inside rdopushead.f
 Previously, GBW was not defined in FWD-only OPUS scans,
 and so the GBW variable was picking up random, non-zero
 values from memory, which messed up the ZPD time calculation.
 Thanks to Vanessa Sherlock for spotting this error.

CREATE_RUNLOG  Version 8.2.1    7 Oct 2007   GCT
 Vanessa Sherlock discovered that the gfortran compiler
 produces a "bad integer" error inside rdopushead.f when
 trying to do a free-format read of the velocity index
 from the string CVAL(:4) consisting of an "8" followed
 by 3 nulls. The G77 compiler has no problem.

 Strangely, if you do a formatted read (i2, i2, i3, or i4)
 it works with either compilier. I decided to clip the
 trailing nulls from the string before attempting the
 free-format read. So I replaced
                read(cval(:4),*) ivel ! read velocity code value
 by
                lc=lnbc(cval(:4))
                read(cval(:lc),*) ivel ! read velocity code value

GFIT  Version 3.0.6   30 Sep 2007   GCT
 The spectrum_loop.f subroutine now has two choices:
 to call do_retrieval.f which in turn calls fm.f
 to call do_retrieval2.f which in turn calls fm2.f
 This was done to help Brian Connor convert GFIT to
 a profile retrieval algorithm.

 The fm2 subroutine now returns the single-level partial differentials
 in a 3-D array (frequencies, levels, target gases) named SLPD. There
 is now some temporary code in do_retrieval2 that sums the SLPD values
 over levels to check that the resulting column partial differentials
 match those in the PD array, which they now do. So, as far as I can
 tell, the SLPD values produced by fm2.f are correct.

 I've also decided to treat the solar spectrum to its own vector SPTS,
 rather than hide it as the ntg+1'st column of SPXV. This will hopefully
 make the code somewhat clearer.

GFIT  Version 3.0.5   25 Sep 2007   GCT
  Decided that the AK.F and the FM.f subroutines were so
  similar that they should be merged. A new input argument
  (lun_ak) is now passed to FM. When lun_ak=0, fm.f works 
  as previously. But when lun_ak > 0 the subroutine works
  like AK.F and calculates single-level weighting functions.
  These are written to file, together with the other weighting
  functions.  The VAC and SPLOS arrays together with the NLEV
  variable are now passed to fm.f to allow calculation of the
  single-level weighting functions.

GFIT  Version 3.0.4    8 Sep 2007   GCT
  I decided that the gfit main program was still to large
  and so I carved out a new subroutine called spectrum_loop.f
  This is called twice by GFIT. The first time it skips
  the time-conmsuming things (reading the spectra, pre-computing
  absorption coefficients, fitting the spectra). But it does
  everything else (e.g. finding the spectra, checking their
  frequency limits, reading the .mav and .ray files. This
  checks that all the input files are present and correct
  before investing time to try to fit the spectra. The second
  call to spectrum_loop does the fitting.  This results in a
  much smaller GFIT main program (167 lines versus ~1000 previously).

GFIT  Version 3.0.3   17 Aug 2007   GCT
  To accommodate the 34-character spectrum names used by the GDS,
  I changed gfit.f, gsetup.f and read_runlog.f. 
  Basically, these changes involved changing a21 to a34 in
  format statements and changing *21 character declarations to *34.
  The only tricky part was making read_runlog able to read either
  runlog format (12-, 21- or 34-character spectrum names) seamlessly.

GFIT  Version 3.0.2   16 Aug 2007   GCT
  To further simplify do_retrieval, I carved out the subroutines:
     solar_gas_shift.f   ! computes the solar-gas shifts
     write_col.f         ! writes a record to the .col file
     wlimit.f            ! truncates a value to fit a specified format

GFIT  Version 3.0.1    4 Aug 2007   GCT
  To further simplify the gfit main program, I carved out
  another subroutine: compute_vertical_paths.f

GFIT  Version 3.0.0   31 Jul 2007   GCT
  A major revision to GFIT in which all the code in the
  main program associated with the retrieval method has
  been placed into a new subroutine (do_retrieval). This
  includes 
   - the iteration loop
   - calling the forward model
   - computing the residuals
   - solving the matrix equation that computes dx, the
     update to the state vextor
   - convergence criteria
   - computing the covariance matrix

This was a painful process because over the years, everything
in the main gfit program had become connected to everything else.
Extracting the retrieval-related code left a lot of variables
and arrays that were needed in the new subroutine and the main
program, at least initially. A lot of work was simply deciding
whether a particular variable/array was really needed in both
gfit.f and do_retrieval.f, and if not, eliminating it from the
wherever it was least essential, thus simplifying the interface
to do_retrieval. This untangling was very time consuming.

At each step in changing this code, I was re-ran a benchmark
case and checked that the results didn't change.


GSETUP Version 2.6.5      28 Jul 2007    GCT
   Modified readmenu.f so that 
  1) lun_men is in the argument list, not hardwired to 19
  2) readmenu.f writes string(1:ls) instead of string

GSETUP Version 2.6.4      8 Jun 2007    GCT
  Made several mods to better fit the ACE spectra, which extend
  up to 165 km tangent altitude.

  1) Extended the integer.orb file to 170 km (171 levels) and
  included the decrease in MMW above 85 km (=22.90 at 170 km)

  2) Increased parameter mlev from 151 to 171 in GFIT and ABSCOH.

  3) Extended the file gnd_summer.vmr to 170 km altitude.

  4) Edited setvmr.f to sharply decrease the CO2 profile above
  90 km altitude. falling by a factor 4 between 90 and 114 km
  altitude.  

 GGGAVG    Version 2.6.1    8-Jun-2007   GCT
  Added two additional auxiliary variables (hout, tins) to
  the output files, increasing naux from 17 to 19.

  Also added code to t_fit to trap data values for which
  yerr=0.0, which can happen when the ray path doesn't enter
  the atmosphere. 
 
 isotopologs.dat    15 April 2007   GCT
 Added a third SO2 isotope (33SO2) to allow the fitting of
 Lance Christiansen's SO2 lab spectra. Also added it to the
 standard vmr profiles.

CREATE_RUNLOG  GFIT  Version 8.2.1      25 Jan 2007    GCT
  Added the following code to prevent the UT day number
  incrementing for observations taken thru midnight UT,
  as often happens from ParkFalls and Darwin.

c  We want all observations to have the day number of local noon,
c  even though the UT day number may be different. The following
c  makes all spectra acquired on the same local day have the same
c  day number. To achieve this, the UT time must be allowed to go
c  -ve or to exceed 24.
         site_solar_noon=12-oblon/15  !  ut time of local noon
         if((gmt-site_solar_noon).gt.+12) then
             gmt=gmt-24.0
             doy=doy+1
         elseif((gmt-site_solar_noon).lt.-12) then
             gmt=gmt+24.0
             doy=doy-1
         endif

  This makes the DOY in the runlog consistent with the local date
  encoded into the spectrum name, which simplifies the extract_pth program.

  Of course, this makes no difference to the total time
  i.e., Year + (day + hour/24)/365.25


GSETUP Version 2.7.0              5 Jan 2007    GCT
  Made two changes to setvmr.f to make the CO2 more realistic.
  1) Included a 0.6%/year secular increase
  2) Included a seasonal-dependence to the age of air at the tropopause

GFIT Version 2.40.3               8 Dec 2006    GCT
  Included the following line in abscoh.f:
              if(abhw.le.0.0) abhw=0.1
  Since there are numerous lines of H2O, O3, CH3Cl that have abhw=0.0
  in both HITRAN_2004 and ATM.101

  Also included the code:
            if(kgas.ne.2) pbhw=pbhw+0.15*abhw*vmr(2,i)
  which adds an additional broadening contribution from CO2,
  which is assumed to be 1.15 times the air-broadening.
  This is only important for Venus and Mars.

GSETUP Version 2.6.4       6 Dec 2006    GCT
  Stopped appending user to the version string.
  This was causing meaningless differences between the benchmark
  files (user=toon) and the output files created by others.

  Also increased the lengths of the path character strings from 48 to 80
     & modname*80,         ! path to new model
     & newmodname*80,      ! path to new model
     & vmrname*80,         ! path to new vmr
     & newvmrname*80,      ! path to new vmr
     & menuinput*80,       ! path to xxx.men file
 
GFIT Version 2.40.2     5 Dec 2006    GCT
  Deleted the code in abscoh.f that converts the HITRAN gas numbers
  to ATMOS values, and replaced it by a call to hitran_to_atmos_gas_numbering
  which was already in src/comn/ because it was being used by VLL

create_runlog   Version 8.1.0    4-Dec-2006   GCT
  Commented out the code in create_runlog which warns that the
  chosen runlog already exists and requests overwrite confirmation
c      inquire(file=outfile,exist=flexst)
c      if(flexst) then
c          write(*,*) 'File already exists: '//outfile
c          write(*,*)' Overwrite (y/n) ?'
c          read(*,*) ans
c          if(ans.eq.'n' .or. ans.eq.'N') stop
c      endif

  I did this because the question is not predictable (sometimes 
  create_runlog asks, requiring a response, sometimes not).
  It is therefore an impediment to streamlining the execution
  of the code via batch files.

GFIT  Version 2.40.1    14 Nov 2006    GCT
  Changed isotopologs.dat to include the 9'th isotopolog of CO2 (838),
  which is present in the latest version of the linelist. This change
  does not require any changes to the .vmr files, which are isotope-
  independent, but it does mean that any pre-existing .mav files are
  now invalid.

GFIT  Version 2.40.0    10 Sep 2006    GCT
  Noticed that gfit would produce nan's when fitting the really
  high-altitude ACE spectra in windows without any absorptions lines.
  This was due to the frequency shift trying to fit the noise and
  occasionally taking on large -ve values which exceeded the
  capabilities of the newdec subroutine. 

  The solution was to make the FS limit more strict.
 Changed
       if(dabs(shift) .gt. 2*(resn+grid)) then
          shift=dsign(2*(resn+dble(grid)),shift)
 to
       if(dabs(shift) .gt. 1*(resn+grid)) then
          shift=dsign(1*(resn+dble(grid)),shift)

 The downside of this change is that gfit will be less able to
 handle spectra with large frequency shifts.

GFIT  Version 2.39.0    18 Aug 2006    GCT
  Replaced the statement
      tnulst=1.0e-12*sqrt(p(2))
  by
      tnulst=1.0e-12
  The former caused the absorption coefficients to depend on
  the highest pressure. So if you changed the pressure of the 
  lowest atmospheric level, the absorption coefficients at
  all the levels would change, even though the pressures at
  the other levels were unchanged.


GFIT  Version 2.38.3    21 Jun 2006    GCT
  gfit now writes spt fnd ak iles for the first MSPT=2500 spectra.
  This avoids filling the disk when the runlog contains 100,000
  spectra. There is no longer any need to include the string 'spt'
  into the command line of the .ggg file (this was unpopular).

GFIT  Version 2.38.2    21 Jun 2006    GCT
  abscoh.f now uses the F77 function file_size_in_bytes.f to
  determine the sizes of the linelistsr. This avoids using the
  system call fstat, which was an impediment to portability.

GFIT  Version 2.38.1    20 Jun 2006    GCT
  GFIT has two options for the frequency scale:
  1) The rest-frame of the earth (freq_flag=0)
  2) The rest-frame of the sun (freq_flag=1)
  Use the former if you want the telluric lines to
  appear in the right frequencies (i.e. those in the
  linelist), and you use the latter if you want the
  solar lines to appear at the right frequencies.
  You can't have both at the same time.

  Instead of freq_flag being hard-wired as a parameter inside
  gfit.f, it is now read from the .ggg file. This allows us to
  define the frequency reference frame in the windows file.

  Thus all the old windows files must be updated to include the
  extra 1 or 0.

GFIT  Version 2.38.0    30 May 2006    GCT
  Split the ggg/config sub-directory into three:
  1)  config/ contains only the data_part.lst file
  2)  apriori/ contains the gfit_ap.xxx files
  3)  isotopologs/  contains the isotopologs.dat files

  Made the neccessary changes to gsetup.

GFIT  Version 2.38.0    30 Apr 2006    GCT
  Implemented a new version of create_sunrun_from_parkfalls_ifs1.f
  containing the 0.7 mbar pressure correction for Park Falls
  plus the May 2004 temperature and humidity values (missing
  from the original .info files because the weather station
  wasn't fully installed).

GFIT  Version 2.38.0    26 Apr 2006    GCT
  Implemented a new version of setvmr.f (called by gsetup.f)
  This overwrites the CO2 profile read from the .vmr profile
  with a seasonally and altitudinally-varying CO2 profile.
  It does this if the ptrop variable (tropopause pressure)
  is greater than zero.

  This subroutine also overwrites the H2O profile with that
  from the NCEP based .mod file, if it exists. In a recent
  mod, the HDO profile is also replaced using a crude
  approximation to the isotopic fractionation, which is
  assumed to be 0.16*(8-log(Vh2o)).
  
GFIT  Version 2.37.0    24 Apr 2006    GCT
  Added a line to abscoh.f to compute additional pressure-
  broadening due to H2O-X collisions, which are assumed 
  to be 1.35 times more effective than Air-X collisions.

  Let's assume that Vx is the vmr of gas X, and that Vh2o is
  the vmr of H2O. The total line brodening is the sum of three terms:
  1) Air-broadening: = abhw*Vair
  2) Self-broadening:= sbhw*Vx
  3) H2O-broadening: = 1.35*abhw*Vh2o

  Since Vair = 1 - Vx - Vh2o
    pwhw = abhw*(1-Vx-Vh2o) + sbhw*Vx + 1.35*abhw*Vh2o
    pwhw = abhw + (sbhw-abhw)*Vx + 0.35*abhw*Vh2o

  Since abscoh.f already computes pbhw = abhw + (sbhw-abhw)*Vx
  we simply have to add the following statement to abscoh.f:

c  Add H2O-broadening, assumed to be double the air-broadening
     if(kgas.ne.1 .and. kgas.ne.49) pbhw = pbhw + 0.35*abhw*vmr(1,i)

  This change helps reduce the slight increase (0.25%) in retrieved O2
  with H2O observed in the Park Falls spectra.

GFIT  Version 2.36.0    14 Apr 2006    GCT
  Fixed a problem (no a bug!) that caused large frequency
  shifts (20-50 mK) in the early OPUS Bruker spectra.
  The basic problem is that the default laser frequency
  in the OPUS software (15798.1 cm-1) is wrong, and so
  are all the start/stop frequencies. The spectra acquired
  at Caltech before we realized and inseted the correct value
 (15798.0138 cm-1) therefore have shifts of up to 99 mK.

  Fortunately, Bruker have included the wrong laser frequency
  in their OPUS header, so we can do a correction by multiplying
  all frequencies in the OPUS headers by: v_laser_true/v_laser_opus
  where v_laser_true=15798.0138 cm-1
  and v_laser_opus is whatever value is in the OPUS header.
  Note that for the spectra that already have the correct
  laser frequency, v_laser_true / v_laser_opus=1, so this 
  will be a do-nothing operation. So this won't have any
  effect on the existing post-June-2004 Park Falls or
  Darwin spectra.

  This has been implemented by adding the line
        delwav=15798.0138d0*delwav/lasf  ! Some OPUS Bruker data has wrong laser freq
  to the file
        ~/ggg/src/create_runlog/rdsphead.f
  i.e.
        delwav=(stopf-startf)/(npoints-1)
        ifirst=nint(startf/delwav)
        ilast=nint(stopf/delwav)
        delwav=15798.0138d0*delwav/lasf  ! Some OPUS Bruker data has wrong laser freq

 2.35.6    11 Apr 2006    GCT
  Changed the runlog format to always force a space between
  the BPW and the ZLO variables. This affects the read_runlog
  and write_runlog subroutines that call them. This increases
  the length of each runlog record to 235 characters.

  Also edited readmodFC.f to allow for old runlogs (balloon)
  thar only have P, T (two numbers on some lines).

  Also, edited write_mav.f to fix a bug in the if-statement
  that reports gases missing from .vmr file.

GFIT  Version 2.35.5    24 Mar 2006    GCT
  Changed gfit.f and subroutine write_mav.f so that the winfo
  string is now passed down. If ' so ' is not present in winfo,
  write_mav doesn't bother writing the (featureless) solar
  spectrum to the .spt file. This has no effect on pfit.pro

GFIT  Version 2.35.4    21 Mar 2006    GCT
  Changed the format of the header line in gfit.f and pfit.pro
  from
     readf,unit,format='(2f12.6,i7,3f8.3,f7.4,f7.3,1x,i3,f4.1,1x,i3)
  to
     readf,unit,format='(2f14.6,i7,3f8.3,f7.4,f7.3,1x,i3,f4.1,1x,i3)
  to prevent the start and end frequencies running together
  for frequencies > 10000 cm-1

GFIT  Version 2.35.3    21 Mar 2006    GCT
  David Griffith found a bug in the write_mav.f
  subroutine by which if the .vmr file failed to provide
  a vmr profile for a gas in the isotopologs.dat file,
  a warning message would be issued. The program would
  then write vmr(gasindex(j),i) into the .mav file with
  gasindex(j)=0 which is an array-bound-violation for i=1

  Decided to stop the program whenever this happens.
  and force the user to add the missing vmr profiles,
  rather than setting the missing vmrs all to zero.


GFIT  Version 2.35.3    14 Mar 2006    GCT
  Replaced the create_sunrun_from_opus/ sub-directory
  with two separate subdirectories
      create_sunrun_from_parkfalls/
      create_sunrun_from_darwin/
  This allows site/instrument-specific corrections 
  (e.g. pressure offsets) to be performed separately.

GFIT  Version 2.35.2    14 Mar 2006    GCT
  Removed remaining instances of "/home/toon/ggg"
  from create_sunrun and create_runlog directories.
  Also edited ggg/src/comn/Makefile to put ALL at the
  beginning and to include all the proper .o files.

GFIT  Version 2.35.1    14 Mar 2006    GCT
  Changed the format with which the zero level offset
  is written by write_runlog from "f5.3" to "1x,f4.3".
  This forces a space between the POSSP and ZLO values.
  Although this makes no difference to gfit or the other
  Fortran programs that read the runlog, it seems to
  help newspect.pro, which has problems with the merged
  POSSP/ZLO values, despite performing a formatted read.

GFIT  Version 2.35.0    12 Mar 2006    GCT
  Fixed a bug in gfit.f (identified by Nick Deutcher) by which
  NaN's were calculated for the airmass, vertical column in
  situations where the pressure altitudes were negative (i.e.
  below sea-level.  This had never been noticed before
  because all the other sites are well above sea-level.

  For example, on October 25 2005, the NCEP model for Darwin said that
  the 1000 mbar level was at 0.073 km altitude. This means that for
  all those spectra whose surface pressure is greater than 1008.2
  mbar, a negative pressure altitude was derived. [The geometrical
  altitude of the Darwin FTS is 0.030 km]

  A pressure altitude error of more than 30 m is not unusual. But
  at the other sites it does not go -ve because they are higher.
  The fix is extremely simple:
  Search gfit.f for the following loop and change the 2 to a 3.
      do klev=2,nlev
         if(z(klev).gt.zmin) go to 777
      end do

GFIT  Version 2.34.0     9 Mar 2006    GCT
  Implemented Rebecca's code for reading the NCEP H2O profiles
  from the .mod file. This affects gsetup and associated
  subroutines (setvmr.f & readmodFC.f). This greatly reduces
  the variability in VF_O2 compared with using a climatological
  H2O profile especially for Park Falls where the H2O can vary
  enormously.  To maintain backward compatibility with existing
  models that don't have the extra H2O column, the readmodFC
  counts the number of data values on each line of the .mod
  file. If it is 5 the 5'th is assumed to be H2O. If it is 4,
  the H2O from the .mod file is set to zero. The H2O vmr from
  the .vmr file is only overwritten if the H2O from the .mod
  file is > 0 

GFIT  Version 2.33.0     8 Mar 2006    GCT
  Changed abscoh.f to comment out all the code that used to
  do the O2 super-Lorentzian lineshape and the sub-branch
  strength corrections in the 1.27 micron band. Rebecca's
  new O2 linelist should now account for these.

GFIT  Version 2.32.0    28 Feb 2006    GCT
  Changed the format of the .ray file in two respects:
1) Added the variable "bend" the angle through which the
  ray was deviated by refraction. This necessitated 
  changes to both gsetup and gfit
2) Added an additional sig fig to the slant paths.
  so that you now get 1.0007 instead of 1.001.
  This affects only gsetup and diurnret (gfit does an unformatted read).

GFIT  Version 2.31.0    26 Feb 2006    GCT
  Fixed a minor bug in tlpath by which the slant path at the
  highest level was noisy. This was because the ray wasn't
  correctly terminated after passing through the TOA. In
  practice this makes very little difference.
  Also decided to terminate the ray-tracing at each level
  to make the slant-path vary more smoothly with altitude
  and zenith angle. This fixes the discontinuity that
  Zhonghua saw at 60 deg in 2004.

GFIT  Version 2.30.0    26 Feb 2006    GCT
  Refined subroutine slpath so that all the height parameters
  are altitudes above the surface, not radii. I figured that
  this would have less rounding error because many of the
  operations inside slpath involve subtracting similar altitudes.
  This requires an additional parameter (Radius Of Curvature)
  to be passed to slpath. Because of this, I decided to
  rename it tlpath.

GFIT  Version 2.29.1    29 Jan 2006    GCT
  Noticed that diurnret.f was producing NANs whenever the
  slant column errors exceeded 1.0e+38, which can happen if
  you try to fit a highly abundant gas in a completely
  blacked out window. This is because the
  G77 compiler immediately sets these values to INF on read.
  Worked around this problem by reading the slant columns
  and their uncertainties into double precision arrays.
  The matrix inversion, however, can still be single-precision
  because the slant columns are divided by the slant column
  errors before use.  Note that this problem never happened
  under Sun Fortran because of its "extended precision" feature.

GFIT  Version 2.29.0    29 Jan 2006    GCT
  Noticed some INFs in the .col files when fitting highly
  saturated windows in the simulated, noise-free, mars
  spectra. This was due to both the first and last point
  in the "measured" spectrum being zero, which caused the
  intial continuum level to be set to zero, from which it
  never recovered.  Fixed this by setting the initial CL=1 if CL<1


GFIT  Version 2.28.1     6 Jan 2006    GCT
  Noticed an occasional NaN for the calculated S-G shift.
  Tracked this down to the division by "cntuum", which can
  occasionally = 0

  Fixed this by multiplying all the terms by cntuum.
  The new section of code in gfit.f looks like this:

c This section of code added by GCT 050113 to calculate solar shift
c Compute solar and gas shifts. Modified 20060106.
       tns=0.0
       tds=tiny
       tng=0.0
       tdg=tiny
       nop=(nmp+1)/2
       do k=2,nmp-1
          cntuum=cx(n1)*(1.+cx(n2)*float(k-nop)/(nmp-1))
          residual=obsrvd(k)-calcul(k)
c
c Solar Shift (pd(k+n1*nmpfp) is the solar transmittance spectrum)
          gs=cntuum*(pd(k+1+n1*nmpfp)-pd(k-1+n1*nmpfp))
          tns=tns+gs*residual
          tds=tds+gs**2
c
c Gas shift  (calcul/solar is the gaseous transmittance spectrum)
          gg=cntuum*
     &(calcul(k+1)/pd(k+1+n1*nmpfp)-calcul(k-1)/pd(k-1+n1*nmpfp))
          tng=tng+gg*residual
          tdg=tdg+gg**2
       end do     ! k=2,nmp-1
c       write(*,*) 'solar-gas shift=',tns,tds,tng,tdg,residual,cntuum,
c     & 2*gint*(tns/tds-tng/tdg)/frqcen

c  Solar-Gas shift is the difference of the solar shift and the gas shift.
c  Divide by frequency to normalize to a dimensionless stretch which
c  should be the same for all windows. Multiplied by 10^6 for ppm.
       sgshift=1E6*2*gint*(tns/tds-tng/tdg)/frqcen


GFIT  Version 2.28.0    26 Dec 2005    GCT
  Included a T-dependent pressure shift in abscoh.f:
c      vcent=(freq-fzero+dble(pshift*p(i)))/grid
      vcent=(freq-fzero+dble(pshift*p(i)*trat(i)**0.75))/grid  ! 05-12-26
  This improves fits to the low-T Park Falls CO2 bands.

GFIT  Version 2.27.0    18 Dec 2005    GCT
  Implemented a new, improved, ZPD time equation into runlog.f. 
 Like the previous version, it handles single scans
 and averages. Additionally, the new version handles:
1) when OPUS flips a REV scan, making it appear as FWD.
2) digitally-filtered (i.e. decimated) i'grams.
3) spectrum-only cases (NIP is undefined).

  To do this, I had to bring the parameter
  DFR (Digital Filter Reduction) from the Bruker header.

GFIT  Version 2.26.2    10 Dec 2005    GCT
  Introduced the parameter "tel_mag" to the sunrun file.
  This is the telescope magnification. This allows 
  calculation of 
      fovo=fovi/tel_mag
  in the main part of create_runlog, avoiding all the
  site-specific hard-wired statements inside rdsphead.f
  For most instruments tel_mag = 1.0  The exceptions
  are ATMOS (=2.7), ACE (=4.8), Kitt Peak (=50)

  Note that tel_mag itself is *not* passed through to
  the runlog. But its effect is seen in the fovo-value.
  
GFIT  Version 2.25.0    41 Oct 3005    GCT
  Changed the variable on which the vertical levels
  are defined from geometric to geopotential altitude.
  This simplifies the subroutine readmodFC.f
   - doesn't need the variable "radius"
   - doesn't need latitude (used to compute gravity)

  This makes the .mod file completely site-independent.
  Essentially, by using geopotential altitude, we are
  deferring treatment of the latitude and altitude
  dependences of gravity until later, when we know
  the site specific information.

  The disadvantage of this approach is that subroutine
  slpath gets messier because the geopotential altitudes
  must be converted to geometric altitudes internally.

  To first order, this change shouldn't make any difference
  to the retrieved columns. We're are just changing the level
  altitudes.

GFIT  Version 2.26.1     1 Dec 2005    GCT
  Changed gsetup to write all the warning messages to files
  (gsetup.rpt; write_mav.rpt) rather than to screen. This
  speeds things up when the runlog contains 78,000 spectra.
  The only thing now written to screen is a progress
  report every 1000 spectra.

  Ditto for create_runlog. Also deleted the parameter
  "minblock", which produced a warning for every single
  slice-ipp'd spectrum because they have only 8 data
  blocks and minblock was set to 13.

  And finally, I disabled the production of spt files.
  When you have 78000 spectra to fit over a wide window,
  the size of the spt files can be 100's of GB. 
  So now to produce spt files you must add "spt" to
  the command line of the .ggg file. The default is
  to *not* produce any.
  

GFIT  Version 2.26.0    26 Oct 2005    GCT
  Added the variable AIPL (Airmass-Independent Path Length)
  to the sunrun and runlog files. GSETUP uses this to add
  additional atmospheric path to the appropriate atmospheric
  levels. Previously, this had been hard-wired inside GSETUP.
  For Kitt Peak, AIPL=0.226 km, which represents 3% of the
  total vertical column.

GFIT  Version 2.25.3    26 Oct 2005    GCT
  Added two new variables to the sunrun and runlog files:
  SIA: Solar Intensity (Average)
  SIS: Solar Intensity (SD)
  This way, they get passed through to the gggavg output
  file, where they will be useful for filtering the data
  and exploring the column quality versus SIS/SIA trade-off.
  This makes all existing runlogs obselete.

GFIT  Version 2.25.2    25 Oct 2005    GCT
  Implemented the read_sunrun and write_sunrun subroutines,
  through which all I/O to the sunrun files must pass.
  Also re-named the readrunlog and writrunlog to
  read_runlog and write_runlog.

GFIT  Version 2.25.1    20 Oct 2005    GCT
  Fixed a bug: Armin noticed that when fitting ratioed laboratory
  spectra of acetaldehyde, the interfering H2O lines hadn't
  cancelled properly. Since there was less H2O in the CH3CHO
  spectra than the empty cell spectrum, these H2O lines formed
  upward-going spikes in the ratio spectra. Armin tried to fit
  them by using a -ve vmr in the .mav file, but this caused the
  H2O lines to simply disappear.  There were two reasons for this:
  1) The if(tnu.lt.tnulst) statement didn't take into account the
   possibility that tnu could be -ve.  Replaced tnu with abs(tnu)
  2) The search for the level with the most gas also
  didn't take into account the possibility that the
  slant column could be -ve. Fixed this in a similar fashion.

  Also noticed another bug. When fitting a spectrum without
  any target gases, the cl got set to 1.0, which caused PFIT
  to plot the measured and calculated spectra in signal space
  rather than transmittance space. The reason for
  this was to allow the total air column to be outputted.
  But this complicates the code and was therefore removed.


CREATE_RUNLOG  Oct 2005 GCT
  Decided that the create_runlog was a mess: too many hard-wired
  variable values. Decided instead to read out all the site-specific
 data into an input file (the sunrun file). This permists a large
 simplification of create_runlog.

The create_sunrun program is simply a means of creating the sunrun
file.  This file could also be created manually -- it is not
necessary to use the sunrun program to do this. The important thing
is the output file, not the program.
Each site/instrument will need its own version of create_sunrun.
The version that I am distributing is really just a template.

In contrast, create_runlog works for all sites and all spectral
formats.  This is possible becase all the information that might
be instrument/site dependent, or missing from the spectrum header,
has been farmed out to the sunrun data file. This allowed me to
remove all the site-specific constants (e.g. lat, long, alt)
from the create_runlog code.  There will only be one version of
create_runlog.f


GFIT  Version 2.25.0    17 Oct 2005    GCT
  Replaced cia.101 with the fcia.101 and scia.101 linelists.

GFIT  Version 2.24.3    16 Oct 2005    GCT
  Increased parameter mmode from 20 to 30 to allow for PAN,
  which has 27 fundamental vibrational modes. Note that this
  change has to be made in 2 different places: gfit.f and abscoh.f
  Also changed the format-statement in read_isotop.f that reads
  the mode frequencies and degeneracies.

  abscoh now does a pre-screening of the linelist files to
  make sure that all linelists are present and correct.
  The intent is to avoid situations where abscoh crunches through
  atm.101 for 20 minutes only to crash on a subsequent linelist.


GFIT  Version 2.24.2     6 Oct 2005    GCT
   Defined the environmental variable GGGPATH.
   This allows all the hard-wired paths to be removed from the
   source code (by use of the Unix "getenv" command) and from
   the Makefiles, making the code much more portable.

   This means that the user must define the environmental
   variable. The way that this is done depends on whether
   you are running b-shell or c-shell
      export GGGPATH=$HOME/ggg  (in .bash file)
   or
      setenv GGGPATH $HOME/ggg  (in .cshrc file)

   You can check whether this has been done sucessfully, 
   by typing
      echo $GGGPATH
   after which you should see
      /home/toon/ggg


GFIT  Version 2.24.1    18 Sep 2005    GCT
   Changed the way that the "Average Totcon" is calculated.
   Previously it was a straightforward (i.e. unweighted) average
   of the totcons derived from individual spectra. The problem
   with this is that a single really bad spectrum can produce
   a outlier (with a large error bar) that disturbs the mean.

   The new method uses a weighted average.
   This does not affect the content of the .col files since
   the "Average Totcon" valuess are only printed to the screen.

GFIT  Version 2.24.1    13 Sep 2005    GCT
   Changed abscoh.f to accomodate the new scia and fcia linelists.
   This includes defining logical variables (scia & fcia) and
   additing code to multiply the line strengths by and additional
   factor of density.
   A more in-depth description of this change can be found in
   the file ll.history for this same date.

GGGAVG    version 2.5.0     3-Sep-2005   GCT
   A major revision that accomodates the new runlog format in which
   InGaAs and Si (HgCdTe and InSb) are both in the same runlog file.
   Assumes runlog is chronological so that different runlog records
   with the same time are treated as equivalent. For example, runlog
   allows o2_7885 to be averaged with o2_13082 even though they
   correspond to different (alternating) records of the runlog file.

   This new scheme will automatically accomodate instruments with
   N (>2) detectors obtaining spectra simultaneously, whereas the
   old scheme (parallel runlog files) would have required software
   mods to be able to do this.

   Also simplified gggavg such that if a .col file is missing,
   it crashes, whereas previously it slickly continued with the
   next .col file in the multiggg.bat file. I prefer to know if
   something is wrong. If the header part of the .col file exists,
   but there are know data records (e.g. if the frequency range of
   the window doesn't match the spectrum) then it counts those as
   missing data.

GFIT  Version 2.24.0    29 Jul 2005    GCT
   Changed gsetup, readmodFC, writemav, abscoh, and gfit so that d(),
   the total number density is now in units of molecules.cm-3 instead
   of molecules.cm-2.km-1. This makes the code somewhat messier, with
   some extra factors of ckm2cm=1.0E+05 in several places, but this
   has two advantages:
   1) the densities in the .mav file are in sensible units
    (molecules.cm-3) which is what people expect.
   2) it simplifies the use of CIA linelists in which the line
    intensities have units of cm-1/(molec.cm-3)^2.cm. You simply
   multiply by an extra factor of d().

   I also changed some variable names in abscoh.f.
   SX --> SXCGS
   Strength X Concentration of molecules in the Ground State
 
   Also changed the organisation of the VAC array.
   Previously, the non-target VACs were stored in VAC(*,*,ntg+1)
   Now they're stored in VAC(*,*,0)
   The target VACs are still in VAC(*,*,jtg),jtg=1,ntg) as previously.
   This makes it simpler to initialize the targmol" array and makes it
   easier to identify the non-target gas lines in the abscof.rpt file.

GFIT  Version 2.23.0    24 Jun 2005    GCT
   A major upgrade to GFIT and GSETUP.

   Previously, gsetup.f contained code which looked at the
   spectrum/runlog names to figure out whether a new model
   or vmr was needed. And if so, gsetup read the appropriate
   .mod and .vmr files and created a .mav file. GFIT
   contained a similar piece of code that looked at the
   spectrum names to decide when it was necessary to
   read a new .mav file and, if so, what it was named.

   There were two problems with this:
   1) The code was highly instrument-specific containing
     implicit assumptions about the spectrum/runlog names.
   2) A slight inconsistency between the code segments in
    gsetup.f and gfit.f would result in the wrong mavfile
    being used or the dreaded "Mavfile Missing" error message.

   In the new upgraded version, all the .mav files are
   concatenated into a single file named runlog.mav
   (which is the name already present inside the .ggg file,
   but which was ignored for several years).  This way,
   GFIT and GSETUP doesn't have to figure out what the
   names of the .mav files are. The new .mav file also
   contains the names of the spectra that trigger the
   reading of the next T/P/VMR data block. So GFIT simply
   compares the current spectrum name to the one in the
   .mav file to figure out when to read the next data block.
   So essentially, all the instrument-specific code inside
   GFIT that used to mirror the code in GSETUP has now gone.

   Of course the code inside GSETUP that decides when to
   create a new T/P/VMR data block is still pretty ugly
   and instrument-specific, even though it not longer has
   to decide what to name the .mav files. But GFIT is now
   much cleaner and simpler, which was the main goal.

   It is also now very simple to automatically use monthly
   .mod or .vmr files. If, for example, your spectra are named
       xyzYYMMDDxxxx.nnn
   and your models are named
       wsYYMM.mod
   then simply using the statement (inside GSETUP)
       newmodname='ws'//specname(4:7)//'.mod
   will cause the right monthly model to be automatically used
   without additional logical variables and if-statements.
   And if you wanted daily models (and/or vmrs), you simply
   name them wsYYMMDD.mod and change the statement to
       newmodname='ws'//specname(4:9)//'.mod
   There is now no reason you couldn't use hourly models,
   provided the spectra are appropriately named.

   During the course of this, I decided to simplify GFIT by
   removing the variable NLOW: the lowest level for which
   the slant paths are non-zero. Previously, absorption
   coefficients were not computed for levels 1 to NLOW,
   which saved a little time for the balloon observations.
   But I decided that the additional complexity of the
   code wasn't justified by the marginal speed improvement.

   Also removed the variables mss, nss, jss, since these
   are now identical to mtg, ntg, jtg because the number
   of sub-strings following the : in the command line in
   the .ggg file now must equal NTG. And if it doesn't (e.g.
   unidentified or repeated sub-strings) then GFIT now stops.

   This upgrade doesn't affect the answers returned by GFIT.
   It is simply organizational.


GFIT  Version     22 Jun 2005    GCT
   Made three changes to pfit.pro

  1) Fixed a bug by which when you set xmin to
    a value, and then did X_Left, the highest
    x-value didn't change, so the window got wider. 
  2) Added a widget button "cm-1/nm" which allows
    the uses to toggle the x-scale between cm-1 and
    nm, facilitating comparison with spectra plotted
    as a function of wavelength (e.f SCIAMACHY).
  3) Added X_Zoom and X_Anti-Zoom buttons.


GFIT  Version 2.21.4    18 Jun 2005    GCT

   GFIT no longer uses subroutine clistindex. It is simpler
   to do the test in the do-loop that reads the isotopolog file.

   I also re-arranged the way that the absorption coefficients
   are stored in arrays VAC amd SPXV. Instead of having
   the NTG target gases, the non-target gases, and finally
   the solar spectrum, I now have the non-target gases,
   the target gases, and finally the solar spectrum.

   This change simplifies the main program since the
   TARGMOL of the non-target gases is already known
   (=0) before the number of target gases is determined.
   It also makes it easier to identify the non-target
   gases in the ABSCOF.RPT file -- they are gas zero.

   Also replaced the 2-D array CONC(NTG,NLEV) by the
   1-D array CP(NLEV) (Concentration Profile). Since
   the vmr file is no longer overwritten by the VPFs,
   there is no longer any need to pre-compute and store
   the concentration profiles. They are now computed
   immediately before they are used, allowing each target
   gas to be done separately.

GFIT  Version 2.21.3     8 Apr 2005    GCT
   As part of my crusade to conduct all I/O through
   subroutine calls (so that if the file format changes,
   you only have to edit one or two subroutines), I wrote
   the subroutuine read_isotop, which reads the file
   isotopologs.dat.  There are currently three different
   places from which this particular file is read:
     gfit
     abscog
     gsetup
   [I'm not sure why it is read from both gfit and abscog,
   but it is].

   At the same time, armin introduced two additional
   parameters to the file isotopologs.dat:
      delta    describes the isotopic fractionation
      epsilon  describes its altitude dependence

   At the same time, I wrote subroutine write_mav,
   called from gsetup, which writes the .mav files.
   This subroutine calls read_isotop, so that it knows
   which isotopic fractionations to multiply the vmrs by.

   write_mav has a couple of extra features that weren't
   present when the isotopolog file was read directly from
   gsetup.
     - checks that all the gases in the .vmr file are also
       in isotopologs.dat
     - checks that all the gases in isotopologs.dat are
       also in the .vmr file.

GFIT  Version 2.21.2     4 Mar 2005    GCT
   As part of my crusade to simplify the GGG code, to make
   it more manageable, I am removing options that are rarely
   used but which complicate the code in certain places.
   So I removed two non-essential options from gfit:
   1) Excluding a gas by putting a "!" in front of its name
   2) Fitting "other" gases together as one gas.
   These options greatly complicate gfit.f and clistindex.f
   This allows the nnt variable to be removed, since it is
   now always = ntg+1

GFIT  Version 2.21.1    21 Feb 2005    GCT
   Replaced the code near the bottom of gfit.f that writes
   the .spt file with a subroutine. This makes gfit.f a bit
   shorter and tidier.

GFIT  Version 2.21.0    28 Jan 2005    GCT
   Created a new integral.orb levels file with 151 levels
   (0 to 150 km) with the correct fall-off of MMW above 85 km.
   The previous version had a constant 28.960 at all altitudes.

   Increased the maximum number of layers (MLEV) from 150 to
   150 to allow a level file extending from 0 to 150 km.

   Changed the variable names mlay, nlay, ilay inside abscog.f
   to mlev, nlev, ilev, to match those in gfit.f.

GFIT  Version 2.20.5    23 Jan 2005    GCT
   Renamed the linelists from xxx.h92  to xxx.101
   where the value of the extension is the number
   of characters per record.

   GFIT now reads the numerical value of the extension
   to determine the record length rather than assume
  that it is 101.

   This has several advantages:
  1) It avoids confusion between the PC (.102) and Unix (.101)
    versions of the same file. GFIT will now handle either file
    type on either machine type provided that they are properly
    labeled. No need to run dos2unix or unix2dos any more.
  2) ABSCOG no longer has the record lengths hard-wired in the code.
  3) It allows use of the new HITRAN04 linelist, which has a new
    162 character per line format, without any further code changes
    since the first 72 characters are identical to the old format. 

GFIT  Version 2.20.4    13 Jan 2005    GCT
   Added code to GFIT for estimating the doppler stretch/shift
   between the solar and atmospheric lines. This is based on the
   spectral residuals and the known solar and atmospheric spectra.
   Basically, the new code calculates separately the shifts of
   the atmospheric and the solar lines. These two shifts have
   opposite signs since GFIT has already fitted the average
   shift for all lines. The desired atmosphere-solar shift
   is simply the difference between the two.
 
   This is not as accurate as actually fitting the shifts, since
   we're assuming a linear relationship between residual size and
   shift. But since we only want this information for diagnostic
   purposes (to tell whether the suntracker was pointing at the
   axis of solar rotation or not) this is probably good enough.

   Estimating the atmosphere-solar shift in this manner has
   several advantages over fitting it:
 1) Simplicity.  Doesn't increase the number of variables to be
   fitted nor does it change the answers (for CO2, O2, etc).
 2) Robust. Fitting shifts introduces secondary minima to the
    cost function.
 3) Speed. Fewer variables per iteration. The shift is calculated
   only at the end, after the fitting has already converged. 

  This code was tested by adding a known perturbation to the
  solar spectrum by adding:
         dopp=dopp+2.E-06
  immediately before the call to the solar_spectrum subroutine.
  This caused a shift in all the solar lines and a worsening of
  the rms fit. The difference in the solar_minus_atmosphere shifts
  with and without the DOPP perturbation was verified to be equal
  (to within 5%) to the window center frequency multiplied by the
  perturbation.

GFIT  Version 2.20.4    13 Aug 2004    GCT
   Hartmut found a bug in solar_spectrum.f, and also the older
   versions of this subroutine (e.g. sunspect). The bug causes
   the solar line to appear one grid point to the left of their
   position in the solar linelist.

   I never spotted this bug myself because I use GFIT to create
   the solar linelist in the first place, and then GFIT again
   to use it, so the error cancels. Hartmut discovered the error
   by comparing the GFIT output with that from the OCO code.

   After fixing this, I shfited every line in  solar_dc.101
   by 0.66E-06*freq so that the solar lines would remain in
   the correct location.

GFIT  Version 2.20.3    24 Jun 2004    GCT
   I fixed a bug that was making GFIT very slow. As I suspected,
   the problem was related to the representation of the HCl cell.
   
   The slowness problem was related to the statement in abscog.f
         tnulst=1.0e-7*sqrt(p(1))
   tnulst is the threshold for skipping lines. If the predicted
   equivalent width of a line is < tnulst, it is skipped.
   P(1) is the pressure of the lowest level (in atmospheres),
   or it used to be before I introduced the extra layer
   representing the cell.  With the cell, p(1)=5 mbar,
   so tnulst was 14 times smaller than it should have been
   which meant that it was doing a Voigt calculation for
   nearly every line in the linelist.
   
   This raises the question, why sqrt(p) ?  Why not simply
    tnulst=1.0e-7
   I guess that this is because a line of a given equivalent
   width is narrower, deeper and hence more noticeable in the
   stratosphere than in the troposphere
 
GFIT  Version 2.20.2    24 Jun 2004    GCT
   Added the folowing to the bottom of the code fragment
   that calls solar_spectrum
      else
         call vmov(unity,0,spxv(k1),1,ncp)
      endif
   Without this, array spxv(k1), the solar transmittance spectrum,
   contains all zeros in cases when the solar spectrum isn't computed.
   This fixes a bug created in V2.19.5.

GFIT  Version 2.20.1    24 Jun 2004    GCT
   Changed all the 1.e-38 inside hfti.f (6) and vsubs.f (1)
   to 1.e-37 because the F90 compiler complained that 1.e-38
   was 'out of range'.

GFIT  Version 2.20.0    23 Jun 2004    GCT
   Fixed a bug inside abscog.f by which the FPREV array
   was initialized once at the very beginning of ABSCOG,
   whereas it needs to be re-initialized for every linelist. 
   This bug does not cause the wrong answer, it simply
   causes GFIT to stop, issuing the statement
   "STOP multiple pseudo-lines at same frequency"

RUNLOG     Version 6.5.0      3-Jun-2004   GCT
  Derived a new simpler, more general equation for the effective
  ZPD time of an OPUS spectrum.  It works for all possible cases:
  single scans (forward or reverse) or multiple scans forward-only
  or forward-reverse).  It also seems to work for different flavors
  of OPUS (120M, 120HR, 125HR) and for different sampling rates per
  laser fringe.
        gmtstart = gmtoff+dble(hh+(mm+ss/60.)/60.)  ! Scan start time
        t_s = 0.9*lasf*(1/res+1/phr)/vel/1000       ! Single scan duration
        gmt = gmtstart + (dur/2 + t_s*(dfloat(pkl+prl)/nip-0.5d0))/3600
  This equation assumes that:
  1) prl=0 for forward-only scans
  2) pkl=0 for reverse-only scans
  3) pkl+prl=nip/2 for forward-reverse scans
  Note that for forward-reverse scans the equation simplifies to
       gmt = gmtstart + dur/2/3600
  Note that this equation is independent of NSS (the number of scans)
  The equation assumes that NSS=NGFW+NGBW, so it won't work if
  there were bad scans that were omitted from the average.

  To do this I had to change rdopushead.f to be able to handle
  the different ways that the VEL parameter is written into the
  OPUS header. In the older Brukers, VEL is an integer code that
  points to the correct element of the array
      data velocity/0.0,0.0,4.0,5.0,7.50,10.0,20.0,40.0,60.0,80.0/
  For example, in the Lauder 120M, VEL=7 means 20.0 kHz.
  But in the Caltech 125HR, VEL is the actual velocity (e.g. 10.0 kHz).
  The following if-statement looks for a '.' in the first 4 characters
  of the velocity field. If it finds one, it assumes that the value
  is the actual velocity. If it doesn't gfind a '.', it assumes that
  it is an integer code value.
             call getopusparval(luns,ipoint(i),'VEL',iend,mrs,i2val,rs)
             ldot=index(cval(:4),'.')
             if(ldot.gt.0) then       !  new Brukers
                read(cval(:4),*) vel
             else                     ! old Brukers
                read(cval(:4),*) ivel ! Velocity Code
                vel=velocity(ivel)
             endif
  This way, the programs that call rdopushead don't have to worry
  about the velocity.

RUNLOG     Version 6.4.0     22-May-2004   GCT

  Implemented JFB's improvements into getparval
  1) Pass MRS as an argument
  2) Read data type (allows byte reveral inside getparval)
  3) Changed PARAM from C*4 to C*3
  4) Re-named it as getopusparval
  5) initialized loop-variable HEAD

  Also, reversed some of the changes made in version 6.1.4.
  Namely, we now have only one option in rdsphead.f for all
  OPUS files. The parameters that vary from instrument to
  instrument are now all collected into an if-then-else block.

  Removed the option of triggering the interferogram runlog
  by typing the instrument type in upper case. Now you invoke
  this option by using uppercase in the name of the sunrun
  and the files inside.

RUNLOG     Version 6.3.1     10-May-2004   GCT
  Implemented the option of creating a runlog pointing
  to the Bruker interferograms (rather than the spectra).
  To implement this option simply type "CA" rather than "ca".
  This makes it trivial to browse the Bruker interferograms
  using the newspect.pro IDL program.


GFIT  Version 2.19.6     9 May 2004    GCT
   Changed GFIT to add an additional layer to the .mav file that
   represents the HCl gas cell internal to the Bruker IFS125HR.
   This extra level is assigned an altitude of -9.9 km.

RUNLOG     Version 6.3.0     24-Apr-2004   GCT
  Worked with Torstens in Bremen to define separate code
  sections in rdsphead.f for the Bremen (bm) and the
  Spitsbergen (sp) spectra.

  Also included two additional arguments to rdopushead.f
  NIP is the number of interferogram points
  PKL is the interferogram peak location.
  This allows use of the equation
    zpd_time=start_time+dur*pkl/nip
  for forward scans (Bremen does fast-return scans).

  Note: Bruker defines two NPT parameters in the spectrum
  headers. Depending on the data block, NPT can mean the
  number of spectral points OR the number of interferogram points.


GFIT  Version 2.19.5     9 Apr 2004    GCT
   Changed the subroutine solar_spectrum.f to output
   the solar transmittance spectrum instead of the
   solar optical thickness spectrum. This was so that
   I could try to do the Minnaert correction to the
   solar lines, as suggested by Frank Hase.

   At the same time, I fixed GFIT to separately output
   the solar and the non-target gas transmittances,
   so that they can be separately plotted by PFIT.
   This required changes to fm.f and gfit.f

   This is computationally less efficient since the
   solar spectrum must be exponentiated separately
   from the non-target gases, whereas previously they
   were exponentated together. Also, the new way uses
   additional memory, to separately save the solar
   and non-target gas transmittances/absorptions.

GFIT  Version 2.19.4     6 Apr 2004    GCT
   Included the integer variable "solar_flag" in gfit.
   This changes the frequency calibration of the .spt
   output files.

   When solar_flag=0, GFIT presents the spectral fits in the
   rest frame of the atmospheric lines, so that the lines
   appear at the frequencies cited in the HITRAN linelist,
   even though a large frequency shift might have been applied.
   This makes it easier to identify which line is which.

   When the solar lines are the primary interest, setting
   solar_flag=1 is recommended. This way, all the solar lines
   appear to lie at the right frequencies (those listed in
   solar.h92), even though they might actually be substantially
   shifted (e.g. due to Earth-Sun doppler shifts).

   Note that, in general, it is impossible to display a
   spectrum with both the telluric and solar lines at their
   rest frequencies. You have to choose which one you want.

RUNLOG Version 6.2.0    14 Mar 2004    GCT
   Decided that the variables LASF and WAVTKR should be part of the
   runlog. LASF is now needed by GFIT to perform the air-to-vacuum
   correction (previously, it was hard-wired to 15798 cm-1). WAVTKR
   is needed by GSETUP to do the ray-tracing properly (refraction
   depends on the tracker wavelength) and was hard-wired to 9900 cm-1.

   The addition of these two parameters to the runlog will generalize
   the GGG code to accomodate instruments that don't have lasers at
   15798 cm-1 or Si detectors for their active trackers (e.g. TES,
   ACE, LWBI).

   Since I was adding new variables to the runlog, I decided to
   re-format it slightly to reduce the risk of successive numbers
   running into each other. An additional character was allowed
   for both latitude and longitude.

   At the same time, I decided to convert all the real variables
   that pass through read/writrunlog to double precision. This is
   part of the OCO philosophy that all scalar variables should be
   double preciosion -- only large array are stored as R*4. On a
   64-bit computer there no speed advantage to R*4.

   While doing this I also decided to move all the MkIV-specific code
   from rdsphead to a new subroutine (rdmkivhead) that is called by
   rdsphead. Eventually, I hope to have separate subroutines for all
   instruments and spectral formats, considerably simplifying rdsphead.

GGGAVG    version 2.4.0    11-Mar-2004   GCT
   Added an additional auxiliary parameter: pins
   So now naux=15.

GGGAVG    version 2.3.1    23-Feb-2004   GCT
   Now calls the new readrunlog subroutine, which necessitated
   various variables the were previously declared as R*8 to be
   changed to R*4.

GFIT  Version 2.19.2    10 Mar 2004    GCT
   Bhaswar fixed the Makefile such that you no longer have
   to "cd ../comn" in order to compile the common files.
   Now it can all be done from the source (e.g. gfit) directory,
   even under Linux. 

GFIT  Version 2.19.1     2 Feb 2004    GCT
   While fitting the Caltech Bruker spectra, I noticed that quite
   large frequency shifts were needed, and that these changed by up
   to 24 mK depending on whether the instrument was evacuated or not.
   The problem was that the air-to-vacuum frequency correction was
   not being done properly. The air-to-vacuum frequency correction is
   zero at 0 cm-1 and at 15798 cm-1, and has a maximum at ~8000 cm-1,
   where it can reach 0.024 cm-1, which is more than 1.5 points in a
   typical spectrum. Over the 0-4000 cm-1 region covered by MkIV, the 
   vacuum-to-air correction increases fairly linear with frequency,
   so I had been taking it into account by simply fudging the spectral
   point spacing in rdsphead.f.  I got away with this for 15 years, until now.
  
   Unfortunately, over the 4000-15000 cm-1 region, the vacuum-to-air 
   correction is far from linear with frequency, so a more complicated 
   correction scheme is needed in which the correction is actually
   performed in GFIT because it depends on the window being fitted.
   To do this properly, you must store in the runlog the T/P/H inside
   the instrument, in addition to the outside T/P/H.

   Adding extra columns to the runlog means changing the two subroutines 
   readrunlog.f and writrunlog.f and all the other programs that call them.
   At the same time that I was making this change, I made a several others:
   runlog now creates separate files for the InGaAs and Si detectors. This 
   prevents GFIT from wasting time trying to fit the A-band in InGaAs spectra, 
   or CO2 in Si spectra. And since runlog does the Si spectra first, and 
   remembers the date and time, the absence of this info in the InGaAs spectra 
   isn't a problem (no more cut-and-paste anomalies :).
   
   I also changed the format of the sunrun files so that the T/P/H info can 
   be entered here. This avoids having to edit the runlog to enter this 
   information. It also means that you only have to do it one per scan, rather 
   than twice (once for InGaAs and once for Si).
   
   I also changed rdsphead so that it has separate code sections for the 
   Caltech,  Lauder, and Spitsbergen. This avoids having to remember to 
   edit the hardwired latitudes, longitudes, etc, inside rdsphead.f each time 
   we switch our analysis from one instrument to another. It also means that 
   instead of entering 'op' as the instrument type there are now separate 
   mnemonics for Caltech (ca), Lauder (ld) and Spitsbergen (sp). Then I 
   packaged together all the duplicated OPUS-specific code into a new 
   subroutine called rdopushead.f, which is called by rdsphead.f
  
   To check that the air-to-vacuum correction was being done correctly,
   I analyzed Caltech Bruker spectra acquired on Jan 5, 2004.
   In particular, I looked at scans 12-17 during which the pressure
   inside the Bruker was allowed to increased from 0.25 mbar to ambient,
   while keeping all the other acquisition parameters unchanged.
   These runs provide a good test that GFIT is performing the
   air-to-vacuum frequency correction correctly.

   The two tables below show the retrieved frequency shifts (mK) for
   various windows with and without the air-to-vacuum corrections.
   The column labeled "Pres" contains the pressures (mbar) inside
   the Bruker.  The columns on the right are labeled with the
   center frequencies (cm-1) of the windows that were fitted.

   Retrieved shifts With air-to-vacuum correction:
   Spectrum             Pres  4039  4250  6076  6339  7880 13082 14465
   ca20040105s0aa0x.12  0.25  -1.2  -0.3   0.6  -0.1  -2.0   0.1   8.5
   ca20040105s0aa0x.13  0.42  -1.2  -0.3   0.6  -0.1  -2.0   0.1   8.5
   ca20040105s0aa0x.14 320.0  -0.9  -0.7   0.0  -0.7  -2.6  -0.2   8.3
   ca20040105s0aa0x.15 325.0  -1.0  -0.8  -0.1  -0.8  -2.8  -0.4   8.3
   ca20040105s0aa0x.16 992.7  -1.0  -0.2   0.7  -0.1  -2.0   0.2   8.2
   ca20040105s0aa0x.17 992.6  -1.0   0.0   1.0   0.3  -1.5   1.0   8.8


   Retrieved shifts Without air-to-vacuum correction:
   Spectrum             Pres  4039  4250  6076  6339  7880 13082 14465
   ca20040105s0aa0x.12  0.25  -1.2  -0.3   0.6  -0.1  -2.0   0.1   8.5
   ca20040105s0aa0x.13  0.42  -1.2  -0.3   0.6  -0.1  -2.0   0.1   8.5
   ca20040105s0aa0x.14 320.0   2.6   3.0   4.9   4.3   2.9   3.7  10.5
   ca20040105s0aa0x.15 325.0   2.6   3.0   4.9   4.3   2.9   3.6  10.5
   ca20040105s0aa0x.16 992.7  13.3  14.7  20.3  20.1  20.5  15.9  17.1
   ca20040105s0aa0x.17 992.6  13.3  15.0  20.6  20.5  21.0  16.7  17.7

   Ideally, with the air-to-vacuum correction, all the shifts should
   zero.  In practice, the air-to-vacuum correction reduces the
   frequency shifts from over 20 mK to less 2mK, with two exceptions:
   1) The B-band (14465 cm-1) appears to be shifted by about +8 mK with
     respect to the other bands. This is probably just a systematic
     line position error within this band, although it is suspicious
     that the pressure shifts of each of these O2 lines is ~-8 mK/atm.
   2) The 7885 cm-1 O2 band is shifted by about -2 mK.

   So if in future (using the new GFIT) you see any frequency shifts
   that exceed 2 mK (apart from the B-band), then something is amiss.

   Now you are probably thinking that I'm a bit fussy about these
   frequency shifts. Why not simply fit them and then we don't have
   to worry?  Well, it is true that GFIT could fit a shift of 20 mK,
   provided that we have good initial guess for everything else.
   But in my experience, most of the cases that I've encountered
   where GFIT misbehaved (e.g. didn't converge) have involved poor
   initial guesses for the frequency shift. So I'm now a firm
   believer that if you can improve the initial estimate of any
   of the retrieved parameters, you should do so. 

RUNLOG     Version 6.1.4     29-Jan-2004   GCT
   Removed the ability to re-create the runlog without
   overwriting various parameters (e.g. zero level offset).
   This capability was rarely used, yet greatly complicated
   the source code.

   Also added the cabability of creating two runlogs in parallel
   for the Bruker InGaAs and Si detectors (similar to how the
   HgCdTe and InSb detectors are handled in the MkIV spectra).

   Decided to have separate entries for the CIT spectra and the
   Lauder spectra.  This avoids having to edit rdsphead.f every
   time that I want to switch from processing a batch of Lauder
   spectra to a batch of Caltech, or Spitsbergen spectra. This
   means that we no longer use the designation "op". Instead we
   use "ca" for Caltech, and "ld" for Lauder.

   To avoid unnecessary duplication of source code for the various
   OPUS format instruments, I created an new subroutine (RDOPUSHEAD)
   which is called from inside RDSPHEAD.

   Changed RDSPHEAD to return both the month (IM) and day of month
  (ID) instead of the doy of year (DOY). This provides more
   flexibility to change the content of the runlog.

RUNLOG     Version 6.1.3     21-Jan-2004   GCT
   Added the line zpoff=0.0  to runlog.f
   after Zhonghua noticed that the undefined variable was
   taking on non-zero values on his Linux machine.

RUNLOG     Version 6.1.2     11-Jan-2004   GCT
   Changed the statement
      delwav=delwav*0.9999946
   to
      delwav=delwav*0.9999946d0
   The former produced different answers on the Sun and Tiamaria.

 
GFIT  Version 2.18.1    11 Jan 2004    GCT
   Modified subroutine rbyte in two ways:
   1) To use a byte variable instead of a character
   2) to use a 2-dimensional byte array internally
     rather than 1-dimensional.
   These two things simplify the indexing, but still produce
   warnings due to data-type mis-matches.

GFIT  Version 2.18.0    22 Nov 2003   GCT
   I finally got fed up with using the linelist.siz file to
   keep track of the sizes of the various linelists.
   So I now use the Unix system command "statb" to return
   the size of the file in bytes, from which I can figure
   out the number of records.

   The downside with this is that the code will be less portable.
   Although it works on Sun Fortran and the Linux G77 compilers,
   there are probably others that are incompatible.
   This may cause problems on MS Windows environments, unless
   they have a similar command for determining file size.

   Switched from subroutine sunspect to solar_spectrum.
   The latter has an improved solar lineshape function and
   doesn't need the linelist.siz file any more.

RUNLOG     Version 6.1.1     30-Oct-2003   GCT
   Changed RUNLOG to allow the names of the sunrun and runlog files
   to be longer than 14 characters. This required changes to readmenu.f


GFIT  Version 2.17.0    22 Sep 2003    GCT
   Earlier this year, Dave Griffith made alot of changes,
   especially to GSETUP, Here's a summary of what he did:

Melding of Wollongong and GCT versions of GGG,  27 Jan 2003,  DG.
History.
During 2002 I made a number of changes to GGG to accommodate Wollongong
spectra and analysis.  I summarised these in August 2002 (see attached Email,
7 Aug 2002).  In Sept 2002 I melded my version with GCT's, sent to me 7 Aug 2002.
I had a hiccup with Gsetup which I couldn't trace (see below) and let
the whole thing slide, so I never finished it off and sent it.  Now (Jan2003) I have found
that problem, fixed it, and incorporated further GFIT changes from a newer version
sent by GCT in Jan 03.

The problem was with my Fortran compiler, Gsetup works fine if no optimisation
(or only local optimisation within program units is used, but gives problems
with full optimisation.  I have simply turned off optimisation to fix this. 
My F90 compiler is stricter and fussier about subroutine arguments etc.,
and therein probably lies the problem.

Comparison Aug02 - Jan 03 versions:
I found following routines had changes between Aug02 and Jan 03:
COMN - abscog (14Jan03), newdec (19Jun02), profzl (02Nov02)
 (note profzl is also in GFIT).
RUNLOG - rdsphead  14Nov02
GSETUP - readvmrFC (20Dec02)
GFIT- gfit (20Dec02), ietspe (03Nov02)

Changes to GCT Jan03 version to accommodate Wollongong changes
This includes the changes I made in Sept 02 plus GCT's update in Jan 03,
and should bring our two working versions together.
I have changed the version string in Runlog, Gsetup, GFIT and GGGAVG

COMN:  Abscog
line 106      &   xx,zz,               !DG Jan03 - removed vv, also declared as array
line 343-     zz=float(nprime)-3.0*delta_n         !DG Jan03 - delta_n is float

RUNLOG 
37:	root='g:'//dl            !DG Jan03
56:	1235 format(' Enter Spectral Format (e.g. "m4","op", "ws"): ',$)
	use "ws" for "Wollongong Solar"

rdsphead
itype is declared twice, removed one (line 32)
157-175:	Added block of variable declarations for ws spectra
300-467:	"ws" block completely rewritten
1176-end	subroutine rbyte uncommented.  RBYTE has a variable length parameter
                list which gives problems with my compiler if rbyte is linked from comn,
                but is ok if linked from the same file.

GSETUP
(Temporary:  I have commented out the writing of the cia.h92 filename to the *.ggg file
 until I have a copy of cia.h92)

19:	parameter (mspeci=150)      ! DG Jan03:  GCT has 134
25:	logical*4 newmod,newvmr,monthlymod,monthlyvmr           !DG Jan03
67:	$mavname*48,         ! output mav file name (for monthly Wollongong mav files)  
83-85:	$amonth*2,           ! month                         !DG Jan03
    	$datestring*8,       ! string to hold date for model and vmr filenames
     	$vmrext*4, modext*4  ! filename extension for model and vmr files
100:	 root='g:'//dl            !DG Jan03
223:	c  location of spt files
if(platform.le.1)then                                !DG Jan03
if(index(user,'toon').gt.0) then
         			write(19,88) root(:lrt)//'spt'//dl//'z'
  		else if(index(user,'sen').gt.0) then
write(19,88) root(:lrt)//'spt'//dl//'sen'//dl//'z'
else
write(19,88) root(:lrt)//'spt'//dl//'guest'//dl//'z'
endif
else
write(19,88) 'spt'//dl//'z'
endif

295-412, 442-448:  
Numerous changes to incorporate FASCODE format profiles including an option
to use monthly mean profiles. FASCODE profiles are distinguished by their
extensions, *.zpt and *.ref.   Gsetup gives a "monthly" menu choice if the
model/vmr for the requested day is not present.  Monthly models and vmrs are
called nn.zpt and nn.ref where nn is the month number, 01-12.  Gsetup then
selects the zpt/ref for the month of the requested spectrum.  When processing
several spectra, GFIT only recalculates absorption coefficients when the month changes.

readmodfc
41-76:	      if(index(modname,'.mod'.gt.0)then           !DG Jan03
Model format selected by extension of filename.

readvmrfc
14	parameter (mg=150,minlvl=250)     !DG Jan03
Increased minlvl to allow use of Arndt's 205 level input files
	Requirement that mg<minlvl is unnecessary since no longer equivalenced

27	if(index(vmrpath,'.vmr').gt.0)then          !DG Jan03
vmr profile format selected by extension of filename.
92-136:
elseif(index(vmrpath,'.ref').gt.0)then                       !DG jan03
minor changes cf Feb 2002 version in reading fascode profiles.

GFIT:

611-619:
        elseif(runlog(ir:ir+2).eq.'gws') then                 !DG Jan03
           newmav=runlab(2:6)//'.mav'
	     inquire(file=newmav,exist=newmav_exist)
	     if(.not.newmav_exist)then
	       read(runlab(4:4),'(Z1)')jj
	       write(newmav(1:2),'(I2.2)')jj
	       newmav=newmav(1:2)//'.mav'
	     endif
This code selects monthly profiles if day file is missing

End - I have added code for GASDEV and RAN1

GGGAVG
297-299:  Cosmetic format change which fell along the wayside from earlier version.
write(lunt,*)'=================================='
write(lunt,'(a,3f9.4)') 'Means     ',tsc/twt,1/sqrt(twt),tew
write(lunt,*) 

I believe all these changes should be transparent to you using Mk4 spectra,
and mostly the changes to code are in clear blocks.  In summary, the cahnges
I have made (and will add to the relvant descriptions with the source code) are:

ALL:  (actually Runlog and Gsetup only)
I have changed the root directory for PC opertation to simply "G:\"  (was D:\ggg\).
The idea is that the user maps the logical drive G: to the real ggg home directory
(eg. D:\ggg\) in windows, and it then doesn't matter where the ggg home directory
really is.  this way if it moves the changes are made on the user machine, not on
the software, or by re-mapping G: to another installation of ggg, the user can use
a different version.  (We have used some wierd vmr profiles for fire spectra,
for example, and its good to keep them separate from normal profiles.)

Runlog/rdspchead:
1. Changed the 2-character neumonic for Wollongong to 'ws' for Wollongong Solar.
  'gr' can be reserved for "standard" Grams, but our files have quite a bit of
   customised header and footer information in them which runlog reads.
2.  Many changes to the 'ws' section of rdsphead to get all the runlog info
    more reliably.
3.  I have defined the actual bandpasses where there is usable signal, so that
   GFIT will not attempt to fit regions at the edge of the bandpass where there
   is no signal.  This is essentially whay justus's program t.f did.

GSETUP:
1. A few changes to the existing readvmrFC and readmodFC to make reading
  our local format files and names more reliable.  Wollongong/fascode
  format files are now distinguished from JPL ones by *.zpt and *.ref
  extensions.  (You could use these too if you wanted.)
2. For Fascode files, I have included the option of taking monthly mean
  ZPT and VMR profiles and creating only monthly mean MAV files.
  The rationale for this is largely so we can do quick fits to spectra
  immediately after collection, before we have gathered together the
  radiosonde data and made daily ZPT files.  (This takes time.)  One
  purpose is real time quality control, the other is ENVISAT, where
  Martine wants columns reported weekly,before we have our radiosonde-based zpt profiles.
3. SPT directory is changed (for PC users) to be within the working
  output directory.  I find this more logical, also keeps the output
  separate from the G: directory. The output can be anywhere you like.

GFIT:
The only change is to recognise monthly mav files and, if they are used,
not recalculate the absorption coefficients until the month changes.
-------------------End of DG comments--------------------------------
 

GFIT  Version 2.16.0    16 Sep 2003    GCT
   Fixed a bug in abscog.f by which if the linelist
   contained an extra isotopomer of the last gas in the
   isotopomer.dat file, it produced a garbage value of
   ispeci, which in turn cased a segmentation violation
   when evaluating trat(lmax) where lmax=maxlev(ispeci)
   This is because the existing test only checked the
   gas number -- it didn't check the isotopomers. This
   was fixed by replacing the statement
          if(kgas.gt.ngas) go to 7749   
  by
          if(ispeci.lt.0 .or. ispeci.gt.nspeci) go to 7749


RUNLOG     Version 6.1.0     16-Sep-2003   GCT
   Changed RUNLOG to accomodate spectrum names up to 20 characters
   in length.  This makes the runlog records longer. This change
   also necessitated changes to all the other programs that read
   the runlog (GFIT, GSETUP, GGGAVG).


RUNLOG     Version 5.2.1     25-May-2003   GCT
   Made a minor change to rdsphead.f to accomodate the spectra
   from Paul Wennberg's IFS125HR, which runs OPUS 4.2.7 (20030313).
   There are now 19 data blocks per header, so I increased parameter
   MC to 20.

   Also changed the format on the delwav write from "1x,f13.11" to
   "f14.11 " because Baron Vazindel had measured spectra with a
   point spacing of -1.9 cm-1 (low resolution and in reverse
   frequency order).


GFIT  Version 2.15.0     5 May 2003    GCT
   While fitting synthetic Mars spectra, I noticed that for some
   gases whose vmr was very small (e.g. 1.E-15) at high altitudes,
   the retrieval would become rank-deficient at the higher altitudes.
   This happens when the small size of the partial differentials
   causes the Trace of the PD matrix to fall below tau=6E-6. When
   this happens, the vmr scale factor remains at 1.000 and its
   uncertainty depends on the a priori uncertainty in the file:
        home/toon/ggg/config/gfit_ap.orb

   The problem is that with a wide window, an apriori error of 10^6
   produces an uncertainty of only 2.E+04 in the vmr scale factor.
   If the vmr is very low, the absolute size of the retrieved vmr
   uncertainties at these high altitudes can actually become less
   than that at lower altitudes, where the gas is really being
   detected. This can result in the occultation-average MDA being
   dominated by the high altitudes where there is no gas, which is crazy.

   There are three ways to alleviate this problem.
 1) Don't let the vmrs fall to low values at high altitudes.
 2) Decrease the parameter TAU
 3) Increase the a priori uncertainty in gfit_ap.orb

  Option (2) delays the onset of rank deficiency to higher altitudes
  but makes the retrieved vmr scale factors do crazy things.
  So I chose (3), increasing the priori uncertainty from 10^6 to 10^9.

  The real solution is to define the a priori uncertainty in slant
  column space, rather than vmr scale factor space. But this will
  take alot more thought/work than I've got time for right now.

GGGAVG    version 2.3.0    23-Apr-2003   GCT
  In response to the change in the GFIT output format (replaced
  cl_err by Zoff), I changed the parameter list (and format) for
  reading the .col files.

GFIT  Version 2.14.0    20 Mar 2003    GCT
   Changed the format and content of the .col output such that
   the retrieved zero level offset is written instead of cl_err.
   This changes the order of the coulumns from
 Spectrum   Nit  CL  CL_err  Tilt Shft  RMS   Zmin
   to
 Spectrum   Nit   CL  Tilt Shft  Zoff  RMS/CL  Zmin


RUNLOG     Version 5.2.0      7-Mar-2003   GCT
   Edited rdsphead.f to make it work with both the old and the
   new version of OPUS. This was necessary because Justus Notholt
   has recently upgraded his version of OPUS.  The changes necessary
   to accommodate this were quite significant. This is because the
   previous version took a short-cut which relied on the parameters
   in the header blocks being in a particular order.  To make
   rdsphead sufficiently general, I had to make a new subroutine
   (getparval) to extract the values of the various parameters
   from the Bruker header.

   Here are the main differences that I have noticed between
   the new and the old OPUS spectrum header formats:
1) There are now 16 data blocks instead of 10.
2) The order of the data blocks is now different
3) The parameter FOC (focal length of collimator)
   is missing in the new OPUS header.
4) The date is formatted differently (2002/12/11
   instead of 17/ 7/1998)

Also, I found a bug in the old version of rdsphead.f:
The variable, DUR was defined as R*4 when it should
have neen R*8. Also, a few of the early OPUS spectra
produced a value:  DUR (REAL64): -1.#QNAN
This cause the following expression to yield gmt=NaN
for these runs.
        gmt=hh+(mm+((ss+dur*mod(ext,2))/60.))/60.
However, changing the expression to
        gmt=hh+(mm+ss/60.)/60.
        if(mod(ext,2).gt.0) gmt=gmt+dur/3600.
circumvented this problem since the problem runs were
all forward (ext=0,2,4,6,...)

Also, I noticed that one of the very early NIT Kitt Peak
spectra has no value of RESN in its header. This causes
RDSPHEAD to compute an OPD of 0.5/0.0 = Inf. This was fixed by:
      resn=0.02  ! In case value is not found in spectrum header



GFIT  Version 2.13.0     5 Mar 2003    GCT
   Fitting low-pressure N2O gas-cell laboratory spectra, I noticed
   alot of ringing in the measurements that extended far from the
   centers of the spectral lines. These measured spectra were
   unapodized and of 0.02 cm-1 resolution. The ringing in the 
   calculated spectrum died off more rapidly and stopped a few
   cycles from line center. To help improve agreement I therefore
1) Changed the weak apodization function that is used to allow
   an ILS of finite width from
      a(k)=a(k)*sngl((1.d0-(xx/(hwid+0.0d0))**2)**2)  ! apodize weakly
   to
      a(k)=a(k)*sngl((1.d0-(xx/(hwid+0.0d0))**4)**2)  ! apodize weakly
2) Increased the parameter nscycle from 18 to 36.

This helped alot, but does not explain why the apodization of the
measured spectrum did not kill its ringing.

GGGAVG    version 2.2.1    20-Dec-2002   GCT
  Justus was having problems with the GGGAVG under the G77 compiler.
  This was due to the arrays cl_av and cl_sw not being initialized.
  They were already full of garbage as soon as GGGAVG tried to execute.
  Fixed this problem by adding the loops:
       do i=1,1200
         cl_av(i:i)=' '
       end do
       do i=1,9600
         cl_sw(i:i)=' '
       end do


GFIT  Version 2.12.3    19 Dec 2002    GCT
   Justus Notholt had a few problems in porting GFIT to Linux:

  1) The variable vshift was not initialized in readvmrFC.f.
   On the Sun compiler this was never a problem, because it
   always initializes all variables to zero. And usually
   this is also the case with the G77 compiler under Linux.
   But on Justus's computer, the G77 compiler would occasionally
   initialize vshift with a large, non-zero value. This condition
   seemed to be triggered by very long .mod files.  Perhaps the
   part of memory reserved for the vshift variable was somehow 
   over-written while reading the long .mod files. I didn't have
   time to investigate the exact mechanism by which it was caused.
   Anyway, initializing vshift to zero fixed this problem.

 2) Justus was seeing NaN's in the error bars for certain fitted
   variables.  This was traced to a -ve value of ex(jfp), which
   is subsequently SQRT'd.  I'm not sure how ex(jfp) ever got
   to be -ve. For all the MkIV, ATMOS & Kitt peak spectra that
   I have analyzed, I've never seen this before. But it is easy
   to fix: simply replace the statement in gfit.f
          ex(jfp)=sqrt(ex(jfp)
   by
          ex(jfp)=sqrt(abs(ex(jfp))

 3) The variable lr in dayav.f was also not initialized.


GFIT  Version 2.12.2     4 Nov 2002    GCT
   Made minor modifications to the code to improve the sensitivity
   analysis features.

GFIT  Version 2.12.1    15 May 2002    GCT
 
   Moved the code lines:
       if(nfp*ncp.gt.msp) then
          write(6,*)'Increase dimension of MSP from ',msp,' to ',ncp*nfp
          stop
       endif
   c
   earlier in GFIT so that the test is performed BEFORE the call to ABSCOG,
   avoiding the fustration of getting this error message after a long wait.

GFIT  Version 2.12.0    28 Apr 2002    GCT
   Replaced the code:
         if(frqcen.gt.1850.0D0)then
            rect=frqcen*(fovi**2)/8 + 2100.D0*(amal**2)/8
         else
            rect=frqcen*(fovi**2)/8 + 800.D0*(amal**2)/8
         endif
   by
       if(runlog(ir+1:ir+2).eq.'in') then
          rect=frqcen*(fovi**2)/8 + 2100.D0*(amal**2)/8
       elseif(runlog(ir+1:ir+2).eq.'hg') then
          rect=frqcen*(fovi**2)/8 + 800.D0*(amal**2)/8
       else
          rect=frqcen*(fovi**2)/8
       endif
 
   This is because the former assumes that if the central
   frequency. frqcen > 1850 cm-1 the InSb spectra are being
   used and that if frqcen < 1850 the HgCdTe spectra are
   being used. This is not necessarily true. There are times
   when you want to look at the 1850-1950 cm-1 region with
   both HgCdTe and InSb spectra to examine their consistency
   on the exact same spectral lines.

GFIT  Version 2.11.0    14 Apr 2002    GCT
  Switched from subroutine SOLARSPEC to SUNSPECT.
  The latter has two main differences. 
  1) The solar lineshape is modified by the factor
            yy=yy/SQRT(1+(yy/Smax)**2)
     which prevents the lines from even exceeding an optical
     thickness of Smax. This makes little difference for weak
     solar features but improves the fit to strong solar lines.
  2) The linelist.siz file is not read inside SUNSPECT.
     It is read externally and NLINES and RECLEN are passed
     to SUNSPECT in the parameter list. This makes the
     subroutine simpler (11 lines of code which read and
     decode linelist.siz are removed) and more flexible
     (it may be used without linelist.siz at all). This
     will make SUNSPECT easier to use for non-GFIT programs.

  Since SUNSPECT has different calling parameters from 
  SOLARSPEC (LLSIZE is replaced by NLIMES & RECLEN) it
  was given a different name.

GFIT  Version 2.10.0    01 Apr 2002    GCT
  Linda pointed out to me that the expression that GFIT was
  using to compute PBHW 
       PBHW=(1-V)*ABHW+V*SBHW
  was incorrect in the cases of O2 and N2.

  The correct expression is
     PBHW = ( (1-V)*ABHW + (V-Vair)*SBHW ) / (1-Vair)
  ABHW is the Air-Broadened Half-Width (as tabulated in HITRAN)
  SBHW is the Self-Broadended Half-Width (as tabulated in HITRAN)
  V is the vmr of the gas in the sample/atmosphere
  Vair is the vmr of the gas in air (implicit in the definition of ABHW)
       Vair = 0.79 for N2, 0.21 for O2, and 0.00 for all other gases

  the equation for PBHW can be re-written as

       PBHW = ABHW + (V-Vair)*(SBHW-ABHW)/(1-Vair)

  If the vmr of the gas sample is the same as that assumed in
  the derivation of the ABHW, then V-Vair=0 hence PBHW = ABHW.
  The following FORTRAN code implements this new expression:
       if(kgas.eq.7) then
          pbhw=abhw+(vmr(ispeci,i)-0.21)*(sbhw-abhw)/(1-0.21)
       elseif(kgas.eq.41) then
          pbhw=abhw+(vmr(ispeci,i)-0.79)*(sbhw-abhw)/(1-0.79)
       else
          pbhw=abhw+vmr(ispeci,i)*(sbhw-abhw)
       endif
  The difference between the new and old PBHW's is pretty small.
  It only makes any difference at all for O2 and N2 lines, and
  only to the extent that their ABHW and SBHW differ. Since (SBHW-ABHW)
  tends to be pretty small for O2 and N2 lines, this new formulation
  doesn't change things much, except for the very highest J lines.
  But at least it is now mathematically correct.

  Changed the expression for the grid spacing from
         grid=1.0002d0*grid*(nva+ncp)/mva
to
         grid=1.0022d0*grid*(nva+ncp)/mva
  after I discovered that the former expression does not work
  properly in one situation.


GFIT  Version 2.9.3     3 Mar 2002    GCT
  Created a new linelist named cia.h92 which contains only
  the lines that have a pressure-squared absorption behavior.
  Subroutine abscog.f now searches for the string "cia" in the
  linelist name and if found, the line strength gets multiplied
  by the pressure (in atm).

  Previously, abscog did this extra pressure scaling
  for O2 and N2 lines that had an isotope number = 0.
  But this caused a problem in the 1.27 micron O2 band
  where the continuum absorption has two components: one
  proportional to presure and one to pressure-squared.

  This changes actually simplifies the subroutine abscog.f
  The lines
        if(kiso.eq.0) then  !  O2 and N2 Collision Induced Absorption (CIA)
            if(kgas.eq.7 .or. kgas.eq.41) sx=sx*p(i)
        endif
  are replaced by
        if(cia) sx=sx*p(i)

  This change also and makes it more general, making it easier
  to include continumm absorptions of other gases that vary as
  pressure or pressure-squared. If the isotope number is 0
  the doppler width is set to the pseudoline spacing.
  If the linelist name contains "cia", scale by an additional
  factor of pressure.

  As part of this change, all the O2 and N2 lines were
  removed from gct.h92. The magnetic dipole lines
  were added to atm.h92, and the CIA lines to cia.h92.
  The new monomer pseudo-lines o2_7885_mon.h92 were
  added to gct.h92 and the new binary O2 lines
  (o2_7885_mon.h92) to cia.h92

GFIT  Version 2.9.2    10 Dec 2001    GCT
   Replaced the following 5 lines of code in abscog.f
   since the ClNO3 linelist of Bell is no longer used
c          if(kgas.eq.27) then
c            tnulst=1.e-9
c          else
c            tnulst=1.0e-7
c          endif

GFIT  Version 2.9.1     9 Dec 2001    GCT
  Replaced the code
        rect=frqcen*(fovi**2+amal**2)/8
  with
        if(frqcen.gt.1850.0D0)then
           rect=frqcen*(fovi**2)/8 + 2100.D0*(amal**2)/8
        else
           rect=frqcen*(fovi**2)/8 + 800.D0*(amal**2)/8
        endif
David Griffith thought that this parameterization
gave a better fit to the ILS (seen at high altitude
where the pressure broadening is narrow. It makes
the effect of misalignment (AMAL) independent of
frequency, whereas previously it was directly
proportional to frequency as per theory. Note that
at 800 cm-1 in HgCdTe and 2100 cm-1 in InSb, the
new equations gives exactly the same result as the
old ones.

GGGAVG    version 2.2.0     7-Dec-2001   GCT
  Changes the meaning of the numbers which are printed in the
  wincomp file. The 3'rd column is now the standard error on
  the scale factor. Previously, this was multiplied by the
  error weight (4'th column).
  Also decreased parameter EPS in t_fit.f from 1.e-4 to 1.e-5.

GFIT  Version 2.9.0     4 Sep 2001    GCT
I reproduced the NaN problem in GFIT using the
window that Zhiming emailed to me last week.

I think that I understand the nature of the problem.
Basically, in fitting windows with very strong H2O lines
at low tangent altitudes, you are pushing GFIT into a
strongly non-linear regime for which it was not designed
nor adequately tested.

I believe that the fundamental problem is that I was
constraining the maximium allowed changes (dx) to the
scale factors for the fitted gases, but I was not
constraining the changes to the continuum level or tilt.
I reasoned that since the latter were linearly related
to the residual, there was no reason to constrain them.
But this is a mistake: it allows the fit to move in a
direction that is not toward the minimum and in which
the residual could actually INCREASE in some highly
non-linear situations.  This was fixed as follows:

c        do jtg=1,ntg
c        do jtg=1,ntg
c        dxlimit=0.2+abs(cx(jtg))
c        if(abs(dx(jtg)) .gt. dxlimit) dx(jtg)=sign(dxlimit,dx(jtg))
c        end do
c        call vadd(cx,1,dx,1,cx,1,nfp)
c  Limit maximum step size for fitted gases (non-linear).
        fr=1.0
        do jfp=1,nfp
           dxlimit=0.2+abs(cx(jfp))
           xfr=abs(dxlimit/abs(dx(jfp)))
           if(xfr.lt.fr) then
              fr=xfr
              kfp=jfp
           endif
        end do
        if(fr.lt.1.)write(*,*)'Limited step size: kfp,fr=',kfp,fr
        call vsma(dx,1,fr,cx,1,cx,1,nfp)

Now, if any of the (NFP) fitted parameters (not just the gases)
has to be trimmed, the changes to all of the fitted parameters
are scaled by the same amount (FR). This means that the direction
of the iteration step toward the minimum is preserved, only the
step size is shortened.

This change does not guarantee that the problem will never recurr.
A shortened step in the direction of the minimum might still cause
an INCREASE in the rms residual. So I implemented another change
which is more tactical rather than strategic. I inserted the line
        rms=sqrt(sumr2/nmp)
        if(abs(rms).gt.1.E+15) rms=1.E+15
I found that the actual failure mode for the NaNs was that the rms
would become Inf, which happened shortly after the rms exceeded
1.E+15. The above IF-statement prevents this and also forces a
convergence if rms should persist in trying to exceed 1.E+15 on
the next iteration.


GFIT  Version 2.8.4     6 Aug 2001    GCT
  Abscog.f now calls the subroutine lloc.f which returns the
  location of the last occurance of a character in a string.
  This is used to detach the filename from a path name, e.g. 
          lfs=lloc(linfil(lfile),'/')
          read(lunr,*,end=70) llname, nlines, reclen
          if( linfil(lfile)(lfs+1:).eq.llname) go to 71
  This allows a more rigorous check that linelist is really
  the one specified in linelist.siz. Previously, it only
  checked if llname was a substring of linfil.

GFIT  Version 2.8.3    31 Jul 2001    GCT
  Added the line:
           if(zmin.gt.999.999)zmin=999.999
  to prevent format overflow when fitting spectra with
  tangent altitudes > 1000 km (e.g. Titan).

GFIT  Version 2.8.2    24 Jul 2001    GCT
  Increased the maximum number of spectral lines that can be
  read from a linelist not listed in "linelist.siz" from
  999999 to 9999999. This allows stripped versions of the
  HITRAN2K linelist to be read to the end of file.

GFIT  Version 2.8.1    19 Jun 2001    GCT
  Fixed a bug in abscog.f:
  When using pseudo-linelists with large line spacings (e.g.
  mars_dust.h92 = 5 cm-1), the very first pseudoline has to be
  used.  Previously, the contribution from the first pseudo-line
  was ignored because its Doppler width was based on freq-fprev.
  This problem was alleviated by initializing fprev=nu1-1
  instead of zero.
     Also, the very wide pseudolines which are ~ 15 cm-1 beyond
  the edge of the window can still have significant absorption.
  This problem is especially acute for Mars spectra (p(1)=0.005).
  Even in a 100 cm-1 wide Mars windows, NUOFF was only 7 cm-1.
  in the windows. Therefore I increased nuoff from 
     nuoff=10.D0*dsqrt(grid*ncp*dble(p(1)))   ! see 1992 Toon MEMO
  to
     nuoff=10.D0*dsqrt(1+grid*ncp*dble(p(1)))   ! see 1992 Toon MEMO
  The new expression guarantees that NUOFF always > 10 cm-1

GFIT  Version 2.8.0    19 Jun 2001    GCT
  Major revision to GFIT. Included the capability to fit the
  zero level offset. Also made the commands "cl", 'ct', 'fs',
  and 'zo' user-selectable from the .ggg command line. 
  Now the user has complete control of all the fitted parameters.

  This change required extensive modification to fm.f. The
  string "winfo" is now passed to FM so that the subroutine knows
  which parameters to compute partial differentials for.....

  Also make so changes to the code that handles the iteration
  of the spectral fits. Previously there were several goto
  control statements (e.g. go to 111) which handled the
  misbehavior (e.g. non-convergence). Now these have been
  eliminated and a more structured approach has been implemented
  which will hopefully be easier to maintain.

  
GFIT  Version 2.7.0    17 May 2001    GCT
  Found a bug in abscog.f: a statement in there which says
        pbhw = abhw*(1.-vmr(ispeci,i)) + sbhw*vmr(ispeci,i)

  Unfortunately, in the old version of the HITRAN linelist
  that we have been using, sbhw=0.0 for all the O2 lines, and
  so the above statement calculates a pbhw which is only ~80%
  of the true value. This was fixed by adding the statement
        if(sbhw.le.0.0) sbhw=abhw
        pbhw=abhw*(1.-vmr(ispeci,i)) + sbhw*vmr(ispeci,i)
  We also fixed this problem by getting a new O2 linelist
  with non-zero sbhw, but the if-statement remains just in
  case there are other linelists with sbhw=0.

GFIT  Version 2.6.0    27 Apr 2001    GCT
  Made a few modifications  in response to Justus Notholt's
  suggestions. The file "m4part.lst" is now named "data_part.lst"
  and is NOT included in the tar file. This way it is not over-
  written each time the software is upgraded. Made changes to
  GSETUP, RUNLOG to accomodate this file name change.

  Also fixed a bug in fetch.f by which the the Spitsbergen
  spectra were divided by 8000000, which resulted in a tiny
  continuum level and hence a large uncertainty. This bug was
  a consequence of a previous modification (see Version 2.0.0)
  which had never been tested on Spitsbergen spectra.

  Increased the parameter MINLVL in readmodFC.f from 2000 to
  4000 at the request of Justus Notholt.

GFIT  Version 2.5.3    18 Apr 2001    GCT
  Added F142b back into the file isotopomers.dat. This increases
  the number of entries to 122.

GFIT  Version 2.5.2    25 Mar 2001    GCT
  Added the capability for GFIT to return .col files containing
  the total column of air. To make this happen, simply define
  a window with "air" as a target gas. This capability is useful
  for defining approximate vmrs direct from the slant columns,
  for example, when defining the fractionation in isotopic studies.

GFIT  Version 2.5.1     5 Mar 2001    GCT
   Changed llformat from
      llformat='(i2,i1,f12.6,e10.3,10x,f5.0,f5.4,f10.4,f4.2,f8.6,a24)'
   to
      llformat='(i2,i1,f12.6,e10.3,10x,2f5.0,f10.4,f4.2,f8.6,a24)'


GFIT  Version 2.5.0     4 Mar 2001    GCT
   Made an important change to "isotopomers.dat".
   Every gas for which we have made a pseudo-linelist
   must now have a seperate  entry in "isotopomers.dat"
   with iso=0. This has several advantages:
   1) Pseudo-gas absorptions can now be fitted seperately
    from the parent isotopomer. This is convenient if you
    want to fit the N2 quadrupole absorption lines without
    the result being influenced by the underlying N2 CIA
    (which is represented by pseudolines). Or if you want
    to fit the O2 lines at 7900 cm-1 separately from the
    underlying CIA.
   2) In "abscog.f" the statement
          ispeci=specindex(kgas)+max0(kiso,1)
      is simplified to
          ispeci=specindex(kgas)+kiso
   3) In "abscog.f" the curvature correction statements e.g.:
          is=specindex(26)+1
      are simplified to
          is=specindex(26)
   4) Improved consistency: every isotopomer represented
    in the linelist MUST have an entry in "isotopomers.dat"

GFIT  Version 2.4.2     26 Feb 2001    GCT
   Noticed that the compiler at Caltech was finding errors
   - undeclared variables - that the caesar compiler was not.
   Apparently, on caesar the compiler default is not to flag
   undeclared variables, unlike mark4sun, nereid, etc.
   So I introduced the statement:
         implicit none
   into all the gfit subroutines (gfit.f already had it),
   including those in /ggg/src/comn/

GGGAVG    version 2.1.0    12-Feb-2001   GCT
  Re-defined the cl_av and cl_sw arrays to avoid null characters
  being written to the column labels (which causes XYPLOT not to
  be able to read anything following them.

GFIT  Version 2.4.1      8 Feb 2001    GCT
   Fixed a bug introduced in version 2.2.0 such that
   when a spectrum was missing from the disk, GFIT
   continued to use the last good spectrum, but with
   the runlog parameters of the missing spectra.

   This fix was achieved by defining a new variable
   KSPECFLAG which is normally zero, but which is set
   to 1 if either the spectrum is missing from disk, or
   if the requested spectral interval extends beyond
   the limits of the spectrum.

   Now, spectra are skipped if both MIT and KSPECFLAG
   are > 0.  This allows synthetic spectra to be
   calculated even if there are no files on disk.
   
GFIT  Version 2.4.0     15 Jan 2001    GCT
   Made some minor changes to GFIT to cater for the additional
   gases (e.g. C2H4) and isotopomers defined in HITRAN2K.PAR
   This required expanding the file isotopomer.dat and the IF
   statement in abscog.f.

GFIT  Version 2.3.1      5 Jan 2001    GCT
   Fixed a bug. The statement in GFIT which used to say
      if((ntg+3)*ncp.gt.msp) then
         write(6,*)'Increase dimension of SPXV to ',nfp*(ntg+3)
   has been corrected to
     if(nfp*ncp.gt.msp) then
         write(6,*)'Increase dimension of MSP to ',nfp*ncp

GFIT  Version 2.3.0      4 Jan 2001    GCT
   Changed the default apodization for the measured spectra.
   Now, if the measured spectra already have some apodization
   applied (i.e. not "BX") 
         apo_m=-1
   instead of 
         apo_m=0 
   An apodization of -1 produces a delta dunction ILS, which
   induces no additional apodizations, in contrast to apo=0
   which produces weak apodization. This change allows synthetic
   apodized spectra to be re-analyzed getting exactly the same
   answer and with an essentially perfect spectral fit.

   Increased MVA to 45000000 to allow synthetic spectra to be
   calculated over very wide intervals e.g. from 9100-16100 cm-1.
   Had to increase parameter msp from msp=mva/20 to msp=mva/18.

GFIT  Version 2.2.0      3 Jan 2001    GCT
   Removed the lines
        call gindfile(dplist,runlab,specpath)
        if(lnbc(specpath).eq.0) go to 121
   which occurr twice in gfit.f. This means that there
   need not be a physical spectrum on disc in order to
   compute a synthetic spectrum. Previously, the spectrum
   had to be there, but covering the wrong spectral region,
   in order for a synthetic spectrum to be calculated.

GFIT  Version 2.1.2     20 Dec 2000    GCT
   Shortened by one decimal place the isotopic ratios in
   "isotopomers.dat". This required modifying the format
   statement in "abscog.f" from
77     format(2i2,1x,a8,a24,f11.9,i3,f5.2,i3,20(f6.0,i2))
   to
77     format(2i2,1x,a8,a24,f10.8,i3,f5.2,i3,20(f6.0,i2))

RUNLOG     Version 5.1.0      2-Dec-00     GCT
   Edited rdsphead.f to accomodate FITS format spectra
   from the Kitt Peak web-site.


GFIT  Version 2.1.1     16 Nov 2000    GCT
   Included the code
        call zenaz(2,obslat,obslon,zobs,iyr,1,iset,
     &    zpdtim/24.0d0,dasza,dazim,eorv,ervc,tplat,tplon,tpalt)
         dopp=(eorv+ervc)/3.e+08
   into GFIT so that when "so" is specified, the positions of
   the solar lines are adjusted to account for the Doppler shifts
   due to the Earth's rotation and the ellipticity of the Earth's
   orbit about the Sun.

   Also realized that the path to the solar linelist i.e.
      /ggg/linelist/solar.h92
   was still hardwired into solarspec.f, as was its
   length (nlines=16117). To fix this problem required
   passing two additional parameters to SOLARSPEC.F,
   the file containing the names and sizes of all the
   linelists, and the path to the chosen linelist.

GFIT  Version 2.1.0     14 Nov 2000    GCT
   Changed abscog.f to allow self broadening to be included.
   This is negligible when the vmr << 1, but starts to be
   important for H2O in the lower troposphere, and for
   laboratory measurements on pure gas samples. This was
   accomplished by re-naming the variable PBHW to ABHW,
   and the defining a new variable PBHW as follows:
            pbhw=sbhw*vmr(ispeci,i)+abhw*(1.-vmr(ispeci,i))
            y=pbhw*p(i)*trat(i)**tdpbhw/dopw
            sx=sngl(stren)*vpf(ispeci,i)
  A new array VFP was also defined in which the vibrational
  partition functions are calculated, to avoid overwriting
  the VMR array, as was done previously.

  Thus, ABSCOF no longer changes the values of the elements
  of the VMR array. 

RUNLOG     Version 5.0.0      2-Nov-00     GCT
   Made several changes to improve the portability of RUNLOG:
   I have taken findfile out of gethead.
   Instead, gindfile is called in RUNLOG and path is passed
   to rdsphead (the new gethead). Hence, path is now an input
   parameter instead of an output parameter. This way, we
   avoid having to pass the data-partition list to rdsphead.
   I decided that this was a sufficiently important change to
   warrant re-naming the subroutine, and since path is now an
   input rather than an output parameter, I moved its position
   to the front of the parameter list.


GGGAVG    version 2.0.0     1-Nov-00     bs
  Make changes to accomodate the new format of the .col files
  produced by GFIT.


GFIT  Version 2.0.2     30 Oct 2000    GCT
   Renamed the file
        /ggg/config/isotopes.dat
   to
        /ggg/config/isotopomers.dat
   and added an additional line for the 5'th OCS isotopomer (634).
   It now contains 107 records.  Changed gsetup accordingly.

   Also removed the format statement that use to read in the
   microwindow information (frqcen, wid, mit, apo, intrp,...)
   in fixed format. These parameters are now read free-format.

   Changed the format of the .col files:
       Added the continuum level uncertainty CL_err.
       Increased RMS by 2 decimal places.
       Reduced the airmass by 1 decimal place.
       Reduced the VF's by 1 leading digit.
   Also, the first five floating point numbers (Cl, CL_err, Tilt,
   Shft, RMS) are all now forced (inside GFIT) to take values
   between -9.99 to 99.99 and are written in a (1x,f5.2) format
   so that these fields are always space delimited

   Made several changes to improve the portability of RUNLOG:
   I have taken findfile out of gethead.
   Instead, gindfile is called in RUNLOG and path is passed
   to rdsphead (the new gethead). Hence, path is now an input
   parameter instead of an output parameter. This way, we
   avoid having to pass the data-partition list to rdsphead.
   I decided that this was a sufficiently important change to
   warrant re-naming the subroutine, and since path is now an
   input rather than an output parameter, I moved its position
   to the front of the parameter list.

GFIT  Version 2.0.1     29 Oct 2000    GCT
   Changed the cross-section curvature code in abscog.f so that
   it no longer needs to be edited each time a new isotopomer is
   defined. Instead of adressing the isotopomer by its species
   number directly (e.g. N2O5 = 70), which increases every time
   a new isotopomer is defined in front of it in isotopes.dat, it
   now used the SPECINDEX array to address it as a gas. So instead
   of addressing vmr(70,k), we now address vmr(specindex(26)+1,k). 

   During the course of doing this, I realized that the code
   which initializes specindex could be simplified. Instead of
      integer*4 specindex(mgas+1)
      specindex(1)=0
      do 33 jspeci=1,nspeci
        read(lunr,77)kgas,iso,gas,speci_id(jspeci),fa,molewt(jspeci),
     &  tdrpf(jspeci),nmode,(vibfrq(j),dgen(j),j=1,nmode)
        specindex(kgas+1)=jspeci
        .......

   we now have
      integer*4 specindex(mgas)
      do 33 jspeci=1,nspeci
        read(lunr,77)kgas,iso,gas,speci_id(jspeci),fa,molewt(jspeci),
     &  tdrpf(jspeci),nmode,(vibfrq(j),dgen(j),j=1,nmode)
        specindex(kgas)=jspeci-iso
        .......
   which I find easier to comprehend and produces exactly the same
   result (apart from not calculating the never-used ngas+1'th element) 

GFIT  Version 2.0.0     13 Sep 2000    GCT
   Made changes to GFIT, GSETUP, GGGAVG and RUNLOG to improve
   portability of code. In the past, people who use the GGG
   software had to spend a significant amount of time making
   changes to the code just to make it work in their environment
   and with their compiler. Even worse, these changes all had
   to be repeated every time a new version of the code came out.

   During David Griffith's visit to JPL, the code was ported to
   his laptop running Compaq/Digital Fortran (formerly known as
   Powerstation Fortran). David pointed out that virtually all
   of these changes could be avoided with a little bit of work.

   These changes included removing filenames which were hard-
   wired in the code (e.g. m4part.lst, gfit.ap, llsize.dat,
   averaging kernel filenames) and including them in the .ggg
   file instead.  Unfortunately, this added four extra lines
   to the .ggg file, which resulted in the new version of GFIT
   not being backward compatible: it won't run on the old .ggg
   files and the old GFIT won't run on the new .ggg files.
   Additionally, subroutines had to be modified to bring these
   new file names to where they were needed:
       ABSCOF now has an additional parameter in the call list:
           the path to the m4part.lst file
       FINDFILE also has an additional parameter in the call list:
           the path to the m4part.lst file
       HETSPE is now called with the full path to the spectrum,
           rather than just the name of the spectrum. This
           avoids having to call findfile from inside HETSPE
           (which would have required an additional parameter).
    The new versions of these three subroutine are called
       ABSCOG, GINDFILE, IETSPE respectively. Their names were
    changed because of their non-compatibility with the previous
    versions.

   In parallel with improving the portability of the code, I
   also made some additional changes:
    - The GSETUP version string is now included at the top of
         all of the .ggg files
    - The number of header lines is now included at the top of
         all of the .ggg files. 
    - KINT replaced by KINTPC to avoid conflict with the
         Digital Fortran instrisic function KINT
    - The scale factors were removed from IETSPE and moved to FETCH
    - Defined BPW = +-3 for I*4 binary data to avoid confusion with
         R*4 binary data.
    - Named the multiggg file to "multiggg.bat" irrespective of
         the computer system. This way I don't need the ROOT,
         USER, DL, or PLATFORM variables inside GGGAVG. 
    - Changed GGGAVG so that it gets the runlog name from the .col
         file, so the user doesn't have to type it it.

   The new version of the code will compile and execute on
   under the Sun, Linux and the Compaq Digital Fortran compilers
   without any changes. GFIT now has no platform dependence at all,
   since all input and output files are specified in the .ggg file.

GFIT  Version 1.6.4      3 Aug 2000    GCT
    Introduced the following statement int abscof.f

          if(index(linfil,'hitran96.par').gt.0) then ! Re-map HITRAN gas numbers to the ATMOS
             if(kgas.eq.1 .and. iso.ge.4) then !    HDO
               kgas=49
               iso=iso-3
             else if (kgas .eq. 25) then            !H2O2
               kgas  = 23
             else if (kgas .eq. 23) then            !HCN
               kgas = 28
             else if (kgas .eq. 24) then            !CH3Cl
               kgas = 30
             else if (kgas .eq. 29) then            !COF2
               kgas = 36
             else if (kgas .eq. 27) then            !C2H6
               kgas = 38
             else if (kgas .eq. 26) then            !C2H2
               kgas = 40
             else if (kgas .eq. 22) then            !N2
               kgas = 41
             else if (kgas .eq. 32) then            !HCOOH
               kgas = 46
             else if (kgas .eq. 31) then            !H2S
               kgas = 47
             else if (kgas .eq. 30) then            !SF6
               kgas = 50
             endif
        endif

This is to allow use to use the HITRAN96.PAR linelist and still get the
molecule number right.
  
GFIT  Version 1.6.3      2 Aug 2000    GCT
   Introduced the statement
          if(kgas.eq.2) flinwid=dmin1(flinwid,21950.d0)  ! Sub-Lorentzian CO2
   into abscof.f, in an attempt to crudely represent the sub-Lorentzian
   lineshape of the CO2 lines, so that I can better fit the spectra in
   the 2400 cm-1 region (especially the N2 CIA).

RUNLOG     Version 4.1.1     26-Jul-00     GCT
   Introduced a new character*3 variable (ext) to account for the changes in
   the sunrun and the runlog directories. The variable can take the following
   values: air, bal, gnd, lab, orb, and syn. The change was made by BS on
   26-Jul-2000.


GFIT  Version 1.6.2     20 Jul 2000    GCT
   Made some minor corrections to the linelists, based on spectral
   fits to the MkIV spectra in the 2620-2663 cm-1 region.
   Two duplicated CH4 lines, at 2646.27 and 2655.85 cm-1 were deleted.
   Two additional N2 CIA lines were created at 2635.0 and 2640.0 cm-1
   to smooth out the wing of the N2 CIA band, which was previously
   decreasing to zero at 2630 cm-1 too abruptly, according to
   MkIV tropospheric limb spectra.

GFIT  Version 1.6.1     20 Jul 2000    GCT
   Fixed a minor bug in the gct_humlik.f subroutine based on an email
   from Bob Wells who wrote it. These changes are supposed to give minor
   speed improvements. The ESMOS III benchmark still takes 46-49s.

GFIT  Version 1.6.0     20 Jul 2000    GCT
   Fixed a bug that was causing an incorrect temperature dependence
   of pseudoline absorptions via the "curvature correction" that is
   hard-wired into ABSCOF.F. This problem arose because we have
   defined additional isotopomers over the past few months. Whereas
   SF6 (for example) used to be isotopomer 100, it is now 105.
   Unfortunately, the code in ABSCOF defines each isotopomer by
   its line number in the file "isotopes.dat", so when we added
   additional lines, everything got screwed. This also applies
   to all the other freons.

GGGAVG    version 8.2.0    19-Jul-00     bs
  Added if statements to read the right files in the case of ATMOS
  and to read the TAB delimited ATMOS runlogs.

GFIT  Version 1.5.0     18 Jul 2000    GCT
   Made several changes to allow it to read ATMOS runlogs, which are
   Tab delimited and which contain two extra parameters (zerr and scalf)
   This require changing all of the runlog READ statements to if-then-else
   structures.

   It also required making substantial changes to FETSPE which previously
   also read the runlog records. The new version (HETSPE) is passed the
   individual runlog parameters, rather than the string of the runlog record.

   Also made changes to ATSETUP so that the vmr model and mav files
   would be named  e.g. at3ss02.vmr, at3ss02.mod, at3ss02.mav
   whereas in the MkIV case the mav files are named from the spectra.

RUNLOG     Version 4.1.0     29-May-00     GCT
   Found a bug by which spectra IPP'd on Tiamaria and transferred
to the Sun incorrectly produced bytepw=+2 (instead of -2)
This was because we had previously assumed that RUNLOG would only
ever be used on the computer which wrote the spectra. This was easily
fixed by replacing the line
       bytepw=2-4*iend
with
       btyepw=2*iend
       if(ialias.gt.256) then
         bytepw=-bytepw
This should now work in all possible situations, including the
never tested sun spectra on the PC.

At the same time, I also called getendian (instead of endian).


GFIT  Version 1.4.10     22 May 2000    GCT
   Merged the O3 line list of Alain Barbe, covering the 4537-4700
   cm-1 region with 3544 lines, with atm.h92

GFIT  Version 1.4.9      8 May 2000    GCT
   Fixed a bug in GFIT.F by which NCP additional array elements
   beyond the end of array VAC were initialized to zero by the
   statement
           call vmov(zero,i0,vac,i1,ncp*(2+nlev*nnt))
   This was causing variables beyond the VAC array in memory to be
   zeroed. This was not detected by array-bound checking because
   the arrays are defined as (*) in sobroutine vmov (in vsubs.f).
   This was corrected by simplifying this statement to
            call vmov(zero,i0,vac,i1,nva)
   This corrects an error made on 29-Nov-99 when modifying
   the gct_humlik routine.
.
GFIT  Version 1.4.8     13 Apr 2000    GCT
   Fixed a bug in abscof.f by which strong lines way outside the
   measured interval would cause values of KV1 to exceed NCP, or
   values of KV2 to be less than 1. Either of which would result
   in NV = -ve and would call an array-bound violation in the call
   to HUMLIK

GFIT  Version 1.4.7     22 Feb 2000    GCT
   Introduces two new error terms:
     - a term equal to 10x the last change in DX (DXWAS)
     - a term equal to (cx-ax)**2/cl
   The former increases the error bar significantly for
   cases in which the iteration has not converged
   The latter increases the error bars in cases where
   the CX is far from its a priori value (AX), especially
   if the continuum level (CL) is small.

   Also made some changes that were necessary to analyze ATMOS
   spectra: 
      Removed the 'at3' from the statement newmav='at3'//runlab(4:k2)

GFIT  Version 1.4.6     14 Jan 2000    GCT
   NaNs were being written to the .col files when "other"
   gases were rtrieved for occultations which did not have
   a CFC113 profile in the .vmr file. This is because CFC-113
   is the last gas in the "isotopes.dat" file and so its vmr
   profile is used in the computation of the vertical and
   slant column amounts, which were both zero.

   The quick fix for this problem was to reverse the loop
   over species, i.e.
       do jspeci=nspeci,1,-1
   so that the vmr profile of the 1'st (rather than last)
   "other" gas was used.

GFIT  Version 1.4.5     17 Jan 2000    GCT
   Wrote a new version of endian.f called getendian.f which returns
   +1 on big-endian computers, and -1 on little endian computers.
   I thought that this was more logical than returning 0 and 1.
   Plus it avoids having to do (1-2*iend) every time you use it.

GFIT  Version 1.4.4      8 Jan 2000    GCT
   Due to the fact that the size of the main linelists was hard-
   wired into the source code of several different programs, each
   time the size of one of the main linelists changed, I had to
   edit about 8 different programs of suffer the consequences.
   This is because there is no standard Fortran method of determining
   the size of a file. In Lahey Fortran you can do it with an inquirw
   statement, and in Sun Fortran you can do it with system calls,
   but these methos are not in the Fortran standard and therefore
   anre not portable.

   T get around this difficulty, we therefore created the file
   llzize.dat inside the /ggg/linelists sub-directory, along with
   all the linelists. each time
   the size of one of the main linelists changed.

GFIT  Version 1.4.3      7 Jan 2000    GCT
   Updated the files containing the isotopomer information (m.out)
   so that it now contains the isotopomer code (e.g. 636) and the
   isotopomer abundances assumed in normalizing the line strengths.
   This is not used for anything (yet): I just thought that it
   would be a good idea to keep all of the isotopomer information
   together in one file.

   At the same time I corrected the TDRPF values of NO, ClO and OH
   to match the partition function temperature-dependence obtained
   from HITRAN. This required increasing all three TDRPF constants
   from 1.0 to 1.23, 1.23 and 1.05 respectively. This will have the
   effect of increasing the line strength (which is proportional
   to (296/T)**TDRPF) and hence decreasing the retrieved NO and ClO
   amounts (by up to 9% at 200K).

   It is still a mystery why the TDRPS value of NO was incorrectly
   tabulated in ODS (and hence GFIT) despite being correct in the
   1990 Norton and Rinsland paper.

   This new file is named "isotopes.dat" and the format statement
   in abscof.f which reads it had to be changed to account for
   for the additional fields. GSETUP was also changed so that it
   reads the new file and writes the new file name into the .ggg
   files.

GFIT  Version 1.4.2      4 Jan 2000    GCT
   Updated the gct.h92 linelist with a new ClNO3 linelist, which was
   actually generated in May 1999 from Ballard's cross sections, but
   was not integrated into the gct.h92 linelist until now due to
   uncertainties in how best to merge the psuedolines with the
   quantum mechanical linelist of Bell that we like to use for 
   the 780 cm-1 Q-branches. The new ClNO3 linelist has the
   following improvements in comparison to the old one:
   - The 1280 cm-1 and 1670 cm-2 bands are included
   - The pseudolines for the 780 cm-1 band now extend to 840 cm-1
     (previously 830 cm-1) which reduces the size of the discontinuity
     when the pseudolines end.
   - The discontinuities at 775 and 785 cm-1 (due to the switch from
     the pseudolines to the linelist of Bell) have been eliminated.
     This was done by adopting pseudolines of constant strength of
     3.250E-21 across the 777 to 781 cm-1 region where Bell's linelist
     is now used.

GFIT  Version 1.4.1     21 Dec 1999    GCT
   Fixed two bugs which were causing NaN's in the output files
   when fitting channel fringes in blacked out spectral regions.

   1) There were cases when  amax = dp = dm  so that the statement
             xi=0.5*(dp-dm)/(2*amax-dp-dm)
      produced xi=NaN
      This was fixed by replacing this statement by
             denom=2*amax-dp-dm
             if(denom.eq.0.0) return
             xi=0.5*(dp-dm)/denom

   2) In extremely blacked out spectral regions, all elements
      of the vector CALCUL become zero. TCBAR also becomes zero.
      However the channel fring amplitude added to OBSRVD is
      CFAMP/TCBAR, which becomes Inf when TCBAR=0.0.
      This was fixed by defining  tcbar=tiny+tcbar/nmp

GFIT  Version 1.4.0     15 Dec 1999    GCT
   Merged the o2_cia.h92  and  n2_cia.h92 linelists with  gct.h92.
   Updated abscof.f with the new size (116605).

GFIT  Version 1.3.0     29 Nov 1999    GCT
   Modified  fastest.humlik.f to eliminate the array of x-values.
   Since our x-values are always equally spaced, they can be easily
   defined internally to the humlik subroutine as  X(i)=X1+i*DX
   The new modified version is named  gct_humlik.f.
  
GFIT  Version 1.2.0     15 Nov 1999    GCT
  Made various minor changes to grfit and its associated sub-routines
  to get them compiled by G77 under LINUX. These changes mainly involved
  replacing the <mlev>f8.2 style format statements with numbers 100f8.2.

GFIT  Version 1.1.0     1  Nov 1999    GCT
  Instead of the DEBUG variable being hard-wired inside GFIT,
  it may now be specified in the pars2fit string. This way, 
  the debug statements may be invoked without having to
  recompile the program.

GFIT  Version 1.0.0     1  Nov 1999    GCT
  Four major changes have been made to the linelist atm.h92
    1) The CH3D lines in the 2039-3188 region have been replaced with
       the prediction of Nikitin et al. (from the file hi.remerged)
    2) The CH4 lines (all isotopes) have been replaced with a prediction
       of Hilico et al., which have been massaged by L.R.Brown to better
       fit laboratory spectra in the 3354-4938 cm-1 region (from the
       file hi.ch4.2000).
    3) The N2O line list has been completely replaced by the prediction
       of Toth over the 527 - 7796 cm-1 region (from the file n2o_toth.h92,
       40417 lines).
    4) The H2O linelist has been replaced over the 500 - 2820 cm-1 region
       by that of Toth 99.

GFIT  Version 0.3.0
  Now uses the subroutine  fastest.humlik.f (Wells, 1999)  to calculate the
  voigt function.  This is slightly faster than the old voigt.f function, and
  determines the whole Voigt profile with just one call, eliminating the inner-
  most loop in ABSCOF.F.  Unfortunatly, two extra arrays are required to store
  the x-values and the calculated Voigt profile. Since the VAC array already
  had the correct dimensions, I simply extended it by 2*NCP additional points.
  This is more efficient in memory usage (although more confusing) than defining
  separate arrays.
  
GFIT  Version 0.0.0     8  Apr 1999    GCT
  Brand new version of GFIT which recognizes each isotopomer as a seperate
  and distinct species. Requires a completely different format command line
  in the .ggg file to specify which species to fit. Now the species names are
  rentered as ascii strings (e.g., hcl, ch4) with specific isotopes being
  designated by a integer prefix (e.g., 2hcl). This change was necessary
  because it was not possible to fit all 100 species onto one line of the
  window file in the old manner. It required substantial
  modification of GSETUP and ABSCOF. In particular, the .mav files now have
  100+ columns (one for each species) rather than just 60 (one for each gas).

  Additionally, the initial values of the fitted parameters and their uncertainties
  which used to be hard-wired into GFIT (arrays AX and RAE) are now read from
  a file "gfit.ap", allowing the user to change them without needing to re-compile.

  Despite all of these changes, the benchmark produces identical results to
  those previously at about the same speed (42-47 s).

GFIT  Version 9.9.33   22  Mar 1999    GCT
  Realized that the use of frac=0.0001 was preventing me from consistently
  calculating the far wing effects in CO2 lines of the v3 band. Therefore
  removed frac, which is equivalent to setting it to zero. 
  Reduced frac to 1.0E-5 in order to  investigate the sub-Lorentzian
 line wings in the v3 band of CO2.

GFIT  Version 9.9.32   11  Feb 1999    GCT
  Changed GFIT to support the new runlog format with the '+','-' or ' '
  symbols in the first column. This was done in such a way that it should
  still work with the old runlog format.

GFIT  Version 9.9.31    2  Feb 1999    GCT
  Changed ABSCOF to allow it to use the pseudo-lines derived by Frank
  Mills to represent the O2 and N2 collision induced absorptions (CIA).

  The existing code wich assumed a Doppler Width (1/e half-width) of 0.667
  of the line spacing, produced a 5% peak-to-peak ripple in the calculation.
  While this ripple would not effect retrievals of O2 itself (for example,
  to derive tangent altitudes) it would be undesirable for trying to fit
  weak absorptions in this interval. I therefore set the Doppler Width (HWEM)
  to 0.83255 times the line spacing. In other words, I now set the Doppler
  Width (HWHM) to equal the line spacing, since 0.83255=sqrt(ln(2)).

gggavg    version 7.3.0    14-jan-99     bs
  - the variable "record" is now a 163 characters string (increased
        from a 162 character string).
  - gsetup reads the records in a runlog file even when a retrieval
        delimiter (' ' & '-' & '+') is placed at the beginning of the
        line.
  - added a new character array of size mrow and named it sign. the
        array stores the retirieval delimiters from the runlog records
        (when present) and outputs to the average files (.av and .sw).
  - the auxiliary variable yaux(4,mrow) is now initialised in an
        if..elseif..endif statement to account for the presence of
        (lack of) the retrieval delimitar character.

RUNLOG     Version 4.0.0     08-Nov-98     GCT
   Changed GETHEAD so that it no longer reads the MkIV spectral headers
as an I*2 array which is equivalenced to (misaligned) I*4, R*4 and R*8
arrays from which the individual variables are read. Instead the variables
are read directly in a single read statement.

The avoids the need to use the -misalign switch to get GETHEAD to compile
which was causing a problem on the GNU F77 compiler under LINUX.


GFIT  Version 9.9.30   19  Oct 1998    GCT
  Make various changes to the code to get it to compile under the
  new LINUX F77 compiler on JCUERVL.
  Also included FBC.F as a seperate subroutine in MAKEFILE.

GFIT  Version 9.9.29   12  Oct 1998    GCT
  Changed the format of the version string to make it consistent with
  those in GGGAVG and DAYAV.
  Also the debug option now prints out the upper triangle of the
  correlation matrix.

GFIT  Version 9.9.28   15  Sep 1998    GCT
  Wrote the subroutine READMAV in order to simplify GFIT.
  Also wrote the subroutine SKIPREC to skip records when reading
  sequential access files. 

GFIT  Version 9.9.27   20  Aug 1998    GCT
  In porting GFIT to Justus Notholt's computer in Potsdam, we had to
  make a few minor changes to the code to make it work properly:
  Whereas previously it just gave a warning if FETSPE could only
  find a part of a requested spectral interval, this has been changed
  to skip the spectrum unless the whole interval is present. This
  was necessary because some of Justus's early spectral start at 900
  cm-1, close to the right hand edge of the 896 cm-1 HNO3 window.

  In ABSCOF, parameter MISO was increased from 130 to 230 to allow
  Justus to define pseudo-gases for use in profiling.

GFIT  Version 9.9.26   10  Jun 1998    GCT
  Made some major changes to NEWDEC:
1)The code for deciding on the first points to be used for the dot
  products has been completely redone, making it simpler to understand
  and avoiding discontinuities in its behaviour.
2)The dimension of the input array FIN is now included in the parameter
  list for the subroutine call. This allows FIN to be declared in the
  NEWDEC subroutine with an appropriate dimension, instead of FIN(*),
  so that array bound violations within NEWDEC can now be caught.
  Note that this changes the calling parameter list and makes the new
  version of NEWDEC incompatible with the previous versions.
3)For cases where array-bound checking is not done, NEWDEC can now
  perform explicit tests (at the beginning) to check that FIN won't be
  addressed outside its limits during the subsequent loops. Previously,
  this couldn't be done because NEWDEC had no knowledge of the size of FIN.
4)Included IF statements so that if FR=0 or FR=1 only one of the VDOT
  calls is made. This will be the case if SH and RDEC are integers,
  such as when NEWDEC is called from FETSPE.

  In order to get identical results using GFIT with this new version of
  NEWDEC I had to make two changes, the first good and the second bad:
  (i) In FETSPE,  I now call
        call newdec(yobs(k1),mpts,a,nii,interp,1.d0/interp,0.d0,yobs,nmp)
      instead of
        call newdec(yobs(k1),mpts,a,nii,interp,1.d0/interp,1.d0,yobs,nmp)
  (ii) In GFIT I now define
      ax(ntg+3)=sngl((startm/grid-ncp1+nsh-1+nhwmax-nhw)/rdec)
      instead of
      ax(ntg+3)=sngl((startm/grid-ncp1+nsh+nhwmax-nhw)/rdec)

The ESMOS benchmark now executes in 44-45s, about the same as previously.

GFIT  Version 9.9.25    8  Jun 1998    GCT
  Changed profzl.f so that tha first and last points are both zero.
This was achieved by changing the weak apodization from
      a(k)=a(k)*sngl((1.d0-(xx/(hwid+0.5d0))**2)**2)  ! apodize weakly
to
      a(k)=a(k)*sngl((1.d0-(xx/(hwid+0.0d0))**2)**2)  ! apodize weakly
This may seem like a waste, but it simplifies the subsequent indexing of
the SLIT array by making the number of points used during a decimated
dot product independent of the point index. Previously, if the first
point of SLIT was used, then so was the last point and so the operation
count was 1+NII/ODEC, whereas in all other cases the operation count
was NII/ODEC, the general expression being  nele=(nii-kop-1+odec)/odec.
With the last point now being zero, setting NELE = NII/ODEC works in
all cases.
   This change has been implemented in FETSPE and NEWDEC and resulted
in very small changes to the benchmark results (1 or 2 parts in 10000).
 
GFIT  Version 9.9.24    7  Jun 1998    GCT
  Simplified the code that convolves the measured spectrum with the
slit operator in order to interpolate, apodize of even degrade its OPD.
Whereas previously, this convolution was done explicitly by the code
      k=kstart
      j=interp*m1-i1+1
      do i=1,nmp
         kk=k
         dtot=0.0d0
         do jj=j,nii,interp
             dtot=dtot+dprod(a(jj),yobs(kk))
             kk=kk+1
         end do
         yobs(i)=sngl(dtot)
         if(j.le.1) then
            j=interp
            k=k+1
         else
            j=j-1
         endif
      end do
It is now performed by a single call to the NRWDEC subroutine:
      call newdec(yobs(kstart),1.d0/interp,a,interp,1.d0,nii,yobs,nmp)
which seems to produce identical results.

GFIT  Version 9.9.23    6  Jun 1998    GCT
  Streamlined the code that normalizes the slit operator in FETSPE.
      do k=1,interp
         dtot=0.0d0
         do j=k,nii,interp   !  Compute normalizing factor
            dtot=dtot+dble(a(j))
         end do
         rnorm=sngl(1/dtot/scale)
         do j=k,nii,interp   !  Apply normalizing factor
            a(j)=a(j)*rnorm
         end do
      end do   ! k=1,interp
Is replaced by
      do k=1,interp
         nele=1+(nii-k)/interp
         call vdot(a(k),interp,unity,0,tot,nele)
         call vmul(a(k),interp,1./tot/scale,0,a(k),interp,nele)
      end do   ! k=1,interp
which gives identical results

GFIT  Version 9.9.22   13  May 1998    GCT
  Moved the close(19) statement from before the read to after the continue
  as follows. This should prevent empty fort.19 files being created in future.
            read(19,*,end=888) dum
            write(*,*)'Warning: NLEV differs in .OBS & .MAV'
888         continue
            close(19)

GFIT  Version 9.9.21   11  May 1998    GCT
   Converted FNBC.F, LNBC.F, SUBSTR.F and FBC.F to handle delimiters
   other than blank or space. Recognized delimiters now include
            nul            (ASCII character # 0)
            horizontal tab (ASCII character # 9)
            space          (ASCII character # 32)
            comma          (ASCII character # 44)

GFIT  Version 9.9.20   30  Apr 1998    GCT
   Fixed a bug in SLPATH.F which caused the part of the ray path between
   the observer and the tangent point not to be traced whenever
   the level separation was less than 4.0*cos(theta). This was fixed
   simply by replacing the following statement in GETSP
      IF(DS*ABS(DCOS(TH)).GT.DZ/2) DS=DZ/2/DCOS(TH)
   by
      IF(DS*ABS(DCOS(TH)).GT.DZ/2) DS=DABS(DZ/2/DCOS(TH))
   I discovered this bug while trying to use slpath with a layer
   thickness of 0.2 km. It worked fine for zenith angles of less than
   93 deg, but returned garbage for greater angles. It also worked
   fine for a layer thickness of 0.5 km

   Also fixed a problem by which the SLPATH was not returning the
   correct value for BEND, even though this is not used by GSETUP.
   Also increased the maximum number of levels in GSETUP (but not
   in GFIT) from mlev=150 to 250.

   Note that even though GFIT does not call SLPATH, I have nevertheless
   updated the GFIT version number and that of GSETUP.

GFIT  Version 9.9.19   28  Apr 1998    GCT
   Replaced the following code in newdec.f
           dtot=0.0d0
           do jop=kop+1,nii,odec
              dtot=dtot+dprod(oper(jop),fin(kin))
              kin=kin+1
           end do
 by
           nele=(nii-kop-1+odec)/odec
           call vdot(oper(kop+1),odec,fin(kin),1,tot,nele)
   which produces virtually identical results.

GFIT  Version 9.9.18   19  Apr 1998    GCT
   Made minor changes to GFIT.F, ABSCOF.F and MOLPARAM.F to support NO3
   as the 64'th molecule.

GFIT  Version 9.9.17   14  Apr 1998    GCT
   Discoved a bug in the channel fringe implementation when fitting the
   CF4 window at 1282 cm-1 which, at low tangent altitudes, contains
   several blacked out lines. Since the fringes were being fitted to
   RESIDS/CALCUL, the noise underneath the strong lines was greatly
   magnified and some very large amplitude channel fringes were derived,
   which only made the spectral fits worse. 

   This problem was fixed by defining a TCBAR, the average calculated
   transmittance across the window, and fitting the fringes directly
   to the residuals. The resulting channel fringes were then scaled
   by TC/TCBAR prior to subtraction from the measured spectra.

GFIT  Version 9.9.16   27  Mar 1998    GCT
  A major revision of fringes.f was performed:
  (1) Replaced the statement 
        power=resids(2*i-1)**2+resids(2*i)**2
      by
        power=cabs(cmplx(resids(2*i-1),resids(2*i)))
      This is much less susceptable to overflow or underflow, which was
      previously causing NaN's to be output by fringes.f in nearly blacked-out
      windows where RESIDS = RESIDS/CALCUL contained very large values.

  (2) Also changed the espression for the calculation of CFPHASE from
        cfphase=(phasm*pm+phasi*pmax+phasp*pp)/(pm+pmax+pp) ! old method
      to
        cfphase=phasi+xi*((0.5+xi)*(phasp-phasi)+(0.5-xi)*(phasi-phasm))
      This new expression does not require the calculation of any powers
      (pm,pmax,pp) which involve squaring the amplitudes and was therefore
      susceptible to over/underflow.

  (3) Also improved the logic by which the phase is changed by PI or 2PI
      and the amplitudes made -ve. This seems to improves the results for
      low frequency channel fringes.

  (4) If a true fringe cannot be found, FRINGES now prints a warning and
      returns zeros for CFAMP, CFFREQ, and CFPHASE.


GFIT  Version 9.9.15   17  Mar 1998    GCT
   I have simplified ABSCOF to get rid of an irritating bug. Previously,
   ABSCOF would give warnings that the Doppler widths for CF4 pseudolines
   were less than GRID, when I knew that they weren't. This was because
   the warning was based on the real CF4 Doppler width whereas pseudolines
   are assumed to have a Doppler width equal to 2/3 of GRID. To avoid this
   inconsistency I have removed all references to 
      dopp(molno)=4.3e-7*sngl(cen)*sqrt(T(lmax)/molewt(mwindx(molno)+1))
   This means than whereas I used to compute
        linwid=2*sqrt(alor**2+0.693*dopp(molno)**2)
   I now use
        linwid=2*sqrt(alor**2+grid**2)
   which assumes that the Doppler widths of all gases are approximately
   equal to GRID. Since LINWID is only used to decide whether to skip
   very weak lines or not (tnu=sx*exp(eprime*tfac(ll))/linwid/pi), and
   is not used in the actual LBL calculation, I don't think that this
   change will make any discernable difference. It can only have an
   effect for gases for which DOPP differs from GRID and both are much
   larger than ALOR. Since, for most gases ALOR > DOPP at the altitude
   at which the number density peaks.

   Since DOPP is no longer computed in ABSCOF, the screen output in
   ABSCOF has been modified not to include D-wid and L-wid. Instead,
   additional parameters from the linelist are included.

GFIT  Version 9.9.14   10  Feb 1998    GCT
   Replaced the CCl4 data in GCT.H92 with the latest data from Nemtchinov
   and Varanasi which is 9% stronger and extends from 750-812 cm-1 as
   compared with 770-810 for the old stuff from NCAR ? This required
   that ABSCOF.F be changed to reflect the larger size of GCT.H92
   
GFIT  Version 9.9.13    9  Feb 1998    GCT
   Introduced "err=66" into the write and open statements for the .spt file.
   Hopefully, this will prevent GFIT crashing when the SPT sub-directory fills.

GFIT  Version 9.9.12    3  Feb 1998    GCT
   I noticed that for very narrow windows (NMP=1) I kept getting NaNs.
   This problem was traced to the following line of code in the vramp
   subroutine in vsubs.f, which divides zero by zero:
        vec(k)=+float(i-nop)/(nele-1)
   The following change fixed the problem
        vec(k)=+float(i-nop)/((nele-1)+1.e-38) ! 1e+38 prevents NaN when nele=1

GFIT  Version 9.9.11   27  Jan 1998    GCT
   Previously, whenever the rms fit was < -9.99 or > 999.99 GFIT would
   exceed the f6.2 format and write ****** in the .spt file. This would
   cause NEWGAS to crash on this spectrum. Now, we test the values of
   rms/cx(ntg+1) and if it exceeds a limit (-9.99 to 99.99) it is set
   to that limit.

GFIT  Version 9.9.10   20  Jan 1998    GCT
   Found a couple of errors by running FTNCHEK. RESN was declared both
   as R*4 and R*8 and so I chose the latter and made it consistant
   throughout. Also promoted RESMAX and OPD to R*8 since these were
   related to RESN.

GFIT  Version 9.9.9    12  Jan 1998    GCT
   Increased RAE(ntg+2) from 0.1 to 10.1 on 29-Dec-97. This considerably
   tightens the constraint for the continuum tilt to be zero, but was
   found to bring better convergence on David Griffith's OCS spectra
   which have a saturated H2O line just outside the edge of the window.
   Previously, GFIT was trying to fit the H2O absorption by changing
   the tilt rather than the H2O abundance, which often resulted in the
   tilt reaching its maximum permitted value, after which convergence
   could never be achieved because of the similarity between the TILT
   and H2O partial differentials. 

   This change slightly altered the Vfacts from the ESMOS II benchmark by
   .0001 for 3 of the spectra and by .0002 for one spectrum, sp4000.co2.
   The other 6 spectra had no discernable change.

   Also increased the threshold for the iteration retrace from a 6x to
   a 9x increase in rms. This seemed to provide better convergence for
   OCS fits to MkIV spectra.

GFIT  Version 9.9.8    21  Dec 1997    GCT
   Changed FETCH.F so that it could read I*4 spectra from the UOW Bomem.
   This means that GFIT cannot currently read byte-reversed R*4 spectra.
   [Need to find a better way to distinguish between these two cases.]

   FETSPE now calls the subroutine /ggg/src/comn/ENDIAN.F  instead of
   having the code to determine the computer byte order inside FETSPE.
 
GFIT  Version 9.9.7    19  Nov 1997    GCT
   Fixed a buf in FETSPE by which there was no check that NII.le.MII
   which caused "Subscript out of range" problems when the MkIV spectra
   were degraded to 1 cm OPD. 

GFIT  Version 9.9.6     6  Nov 1997    GCT
   Reorganized the iteration loop to allow multiple convergences to be
   achieved, which may be important when fitting channel fringes, since
   it permits multiple channel fringes (of different frequencies, phases,
   and amplitude) to be fitted and then subtracted from the measured spectra.

GFIT  Version 9.9.5     5  Nov 1997    GCT
   Changed GFIT to allow the non-target transmittances to be calculated
   and outputted as the last column of the SPT file. This allows NEWGAS
   to plot the non-target transmittances just like any target gas.

GFIT  Version 9.9.4    22  Oct 1997    GCT
   Changed the way that the zero error (ZERR) is added to the residuals.
   previously the expression
           call vadd(resids,1,zerr*(1.+abs(cx(ntg+1))),0,resids,1,nmp)
   was employed which had the unfortunate effect, when cx(ntg+1) ~ 1,
   of doubling the effect of ZERR. This was remedied as follows
           call vadd(resids,1,zerr*amax1(1.,cx(ntg+1)),0,resids,1,nmp)

GFIT  Version 9.9.3    11  Oct 1997    GCT
   Changed MOLNUM.F so that it is now case sensitive. This required that
   all the .vmr files be checked that the gas names are correct e.g. HCl
   (not HCL or hcl), HBr (not HBR or hbr).

   Also removed the call to MOLNUM in GSETUP since the result was never used.

GFIT  Version 9.9.2    10  Oct 1997    GCT
   Changed the format of all of the GFIT data files so that they are
   now plottable by AMESPLOT. This includes the VMR, OBS, and MAV files.
   The required that the format statement of the .mav file be changed from
   (a14,5f9.4,150f7.3) to (a14,5f10.4,150f8.3) so that the ZOBS and POBS
   fields and the SP values themselves are always space delimited from
   eachother, otherwise AMESPLOT will not be able to plot them properly.
   Previously this was the case whenever POBS exceeded 1000.0 or the SP's
   exceeded 100.0 km.

   GSETUP now checks that the number of columns is equal to the number
   of column labels and stops if it is not.

GFIT  Version 9.9.1     2  Oct 1997    GCT
   Since we decided to use the LINKEY string in the .ggg file to
   indicate whether or not to fit the channel fringes, it is no
   longer necessary to append a "cf" to the last line of the .ggg file.
   Also, reduced the length of LINKEY from C*6 to C*3.

GFIT  Version 9.9.0     1  Oct 1997    GCT
   Uses FFT methods to determine the amplitude, frequency and phase of
   the largest channel fringe present in the residuals after convergence
   of the logarithmic iteration (mode=1). The resulting cosine wave is
   then subtracted from OBSRVD and the linear iteration proceeds as
   normal, with no futher adjustments of the channel fringe parameters.

   To enable the channel fringe fitting capability, simply append a "cf"
   to the last line of the .ggg file. Otherwise it won't bother.

GFIT  Version 9.8.7    30  Sep 1997    GCT
   Introduced the variables NFP and MFP to replace NTG+3 and MTG+3.

GFIT  Version 9.8.6    26  Sep 1997    GCT
   Changed the vramp subroutine in VSUBS.F such that the ramp
   is zero at point (NMP+1)/2 instead of being perfectly symmetrical.
   Thus if NMP is odd, VRAP will behave exactly as previously. However,
   if NMP is even it will not set point  1+(NMP+1)/2 to zero

GFIT  Version 9.8.5     5  Sep 1997    GCT
   Changed the definition of the forward model (FM) such that
     f = continuum.(1+tilt.ramp)*exp
   rather than
     f = (continuum+tilt.ramp)*exp
   This simplifies the FM subroutine.

GFIT  Version 9.8.4     4  Sep 1997    GCT
   Promoted the variables RESN and RECT to R*8 to simplify things.
   Also promoted the variable SH (in GFIT, FM, NEWDEC) to R*8.
   Changed the name of array SPVAC to SPXV (in GFIT & FM)

GFIT  Version 9.8.3    24  Jul 1997    GCT
   Installed the new version of SUBSTR (which returns the array of
   substrings instead of their indices) into ABSCOF.  This change
   should make absolutely no difference to the results and negates
   the change introduced in the previous version (9.8.2).

GFIT  Version 9.8.2    23  Jun 1997    GCT
   Wrote a new cleaner version of SUBSTR.F which actually will continue
   counting the number of sub-strings, even after it has exceeded the
   dimension of the indexing array, without causing array bound violations.
   This allows the calling program to detect the error condition simply by
   testing whether NLF.gt.MLF .

GFIT  Version 9.8.1    31  May 1997    GCT
   Included the following code in abscof.f to overwrite the PBHW of NO2 with
   the air-broadened expression from Dana et al. (JSQRT 57, 445-457, 1997).
        if(molno.eq.10) then  ! Set NO2 widths to Dana (JQSRT 57, 445-457, 1997)
           tdpbhw=.75
           read(rotate,'(15x,i2)')nprime2
           pbhw=0.001*( 84.1 - .753*nprime2 + .0059*nprime2**2 )
        endif
   After performing test run to evaluate the magnitude of the effect,
   this code was then commented out. However, it is left in place in case
    we ever decide to activate it in the future.

GFIT  Version 9.8.0    31  Mar 1997    GCT
   Reduced TAU from 6E-5 to 6E-6. This is the parameter which tells
   GFIT how hard to try to fit the absorption and hence when to give up.
   Previously, after the uncertainty in the TOTCON had exceeded 50,
   GFIT would no longer try to fit the absorber amount; instead it
   would simply return a TOTCON of unity. This behavior was common
   in gases which decrease rapidly with altitude, e.g. F11 and C2H2.
   for which it would often produce a discontinuity in the TOTCONS.
   Although this discontinuity would be below the calculated error,
   it could nevertheless impart an undesirable feature to the retrieved
   vmr profile. With the new reduced TAU value, GFIT should continue
   to fit the spectra until the uncertainty in TOTCON exceeds 500. 

GFIT  Version 9.7.0    29  Mar 1997    GCT
   Fixed a bug in GFIT by which the first element of array SPVER was never
   initialized to zero. For ground-based spectra and sunset spectra this
   bug had no effect because SPVER(1) would either be zero or would be set
   to the correct value. However, for ascent spectra, after being set to a
   non-zero value for the first (and lowest) spectrum, SPVER(1) would never
   be set to zero for the later higher spectra, leading to an overestimate
   of the vertical column, and consequently, and underestimate of the airmass.
   Fortunately, the product of the airmass and the vertical column is still
   OK because the line-of-sight slant paths (SPLOS) are all correct, so the
   vmr profiles retrieved from the ascent spectra are all fine.

GFIT  Version 9.6.8    18  Mar 1997    GCT
   Reduced the reciprocal a priori uncertainty in the TOTCON from 0.0001
   to 0.000001. This increases the reported uncertainties in situations
   where the spectra contain no information from 1.00E+04 to 1.00E+06.
   Previously, this would occasionally cause the errors in the retrieved
   profiles to start decreasing with altitude when the slant column
   abundances became very small, because even though the totcons had
   uncertainties of 1.0E+04, if the vmr is rapidly decreasing with
   altitude, 1.0E+04 times something tiny is still something small.
   This problem was particularly acute for ATMOS spectra for which
   the dynamic range of slant column values is very large.

GFIT  Version 9.6.7     4  Mar 1997    GCT
   Changed GCT.H92 so that Bell's ClNO3 linelist is only used over
   the 775 - 785 cm-1 region, whereas previously Bell's list was
   used out to 797.7 cm-1. The reason for this change was to prevent
   the discontinuity in the ClNO3 absorption coefficients (where we
   switch from Bell to Ballard) from falling inside the CCl4 window
   (787.5 - 805.5 cm-1). This change reduces the number of lines
   in GCT.h92 to 104139, and ABSCOF.F was changed accordingly.

GFIT  Version 9.6.6    19  Feb 1997    GCT
   Included the statement
                 if(runlog(ir:ir).eq.'s')dummav=mavfile
   to allow GFIT to analyze synthetic spectra (e.g. hbr_cell.syn).

   Also, increased the parameter NMMAX from 7000000 to 14000000 for
   a 61 Mbyte executable.

GFIT  Version 9.6.5     7  Feb 1997    GCT
   Made two changes to try to increase the size of the uncertainties
   reported for windows that are completely blacked out:
   1) The residuals are now perturbed by ZERR*(1+ABS(CX(NTG+1))) rather
   than ZERR*CX(NTG+1) previously. In the cases when the continuum level
   CX becomes small, the new formulation does much better.
   2) An amount 3*RMS/CX(NTG+1) is added in quadrature to the uncertainties
   rather than RMS/CX(NTG+1) previously. Where the spectral fits are good
   (~0.3%) this changes doesn't really have much impact since the error bars
   are normally > 1% anyway. However, where CX is small, as is often the case
   in blacked out lines, this change can significantly increase the reported
   error bars.

GFIT  Version 9.6.4    20  Nov 1996  GCT
   Hardwired the TDPBHW=0.75 for NO2. Previously, the 2900 cm-1 band
   was set to 0.5, which HMP thought was way off.

   Also, if E"=-1 in the linelist, it is now set to 999, instead of 222.
   This produces much better NO2 fits in the 2891 cm-1 region.
   This reverses the action taken in version 9.4.2.

GFIT  Version 9.6.3    20  Nov 1996  GCT
   Changed the expression for the approximate Lorentz width from
        alor=pbhw*p(ll) ! HWHM
   to
        alor=pbhw*p(ll)*trat(ll)**tdpbhw ! HWHM
   where ll is the layer having the maximum absorber concentration.
   Note that this expression is only used to decide whether to completely
   ignore a line or not, so it does not effect the forward model at all.

GFIT  Version 9.6.2    22  Oct 1996  GCT
   Found that very strong lines would prodeuce a Verr = NaN at low tangent
   altitudes. I traced the cause of this problem to the diagonal elements
   of the upper triangular matrix produced by SHFTI having values like 1.e-42.
   These are apparently not recognised as being zero, but when you try to
   divide a relatively large number by them you can get NaN. I have therefore
   changed all of the statements of the form IF(AA.EQ.ZERO) to
   IF(abs(AA).lt.1.e-38) and this seems to fix the problem,

GFIT  Version 9.6.1     6  Aug 1996  GCT
   Simplified and improved FINDFILE so that it now implicitly searches
   the partition where the last spectrum was found as the first attempt
   of the systematic search loop. This completely eliminates the need
   for a seperate code fragment to search the last partition. 
      The old FINDFILE also appeared to have a bug in that it would only
   conduct the search over NP-1 partitions, which is fine if it has already
   explicitly searched the partition where the last spectrum was found,
   but not if it is the first spectrum. In the latter case, the last
   partition in the list would be omitted. ESMOS benchmark now takes 42-43s.

GFIT  Version 9.6.0    21  Jul 1996  GCT
   While waiting in Lynn Lake, I compiled GFIT using the F2C compiler
   under LINUX, and also ran it through the FTNCHEK code checker.
   Although it did compile and execute correctly, several warnings
   were issued, which I decided really ought to be cleaned up:
   The function NSUBSTR was converted into a subroutine (SUBSTR)
   because it changes one of the input parameters (the index array)
   and functions are not really supposed to change the inputs.
   I also raised several of the REAL*4 variables to REAL*8 to avoid
   instances of mixed precision arithmatic and unnecessary conversions.
   In perhaps the most important instance, PROFZL.F was changed so that
   the frequency offset parameter is now R*8 instead of R*4. This makes
   it consistent with the convention that all frequency variables be R*8.
   However, the innermost DO LOOP which calls VOIGT and builds the
   VAC array was kept as single precision for greater speed.
   Also, since VOIGT, SUBSTR, and POSNALL are only ever called from
   ABSCOF, I declared them as INCLUDE files, rather than define them
   in the MAKEFILE.

GFIT  Version 9.5.0    18  Jun 1996  GCT
   For pseudo line-lists (ISO=0) ABSCOF now sets the 1/e Doppler half-width
   equal to 2/3 of the line spacing, which reduces the "ripple" to 2%. This
   allows the actual Doppler widths to be used in "molparam.dat" so that
   gases (e.g. ClNO3) which have merged proper and pseudo-line lists can
   be correctly handled. ESMOS benchmark now takes 43-44 s.

GFIT  Version 9.4.6    17  Jun 1996  GCT
   Realized that the test used to check that JISO < MISO was ineffective
   because it was performed after the "molparam.dat' file had been read
   and several variables might already have been trashed. To avoid the
   complication of passing MISO to the VIBPAR subroutine, I decided to
   bring the VIBPAR code up into the main program.
      At the same time I tidied ABSCOF up; converting most of the upper case
   code to lower case, and simplifying the code and eliminating unnecessary
   variables.  Also changed the definition of DOPP to be the half-width at
   1/e maximum instead of 1/2 maximim.
      None of these changes made any difference to the results produced by
   GFIT. The ESMOS benchmark now takes 44-45 s.

GFIT  Version 9.4.5    13  Jun 1996  GCT
      Fixed a bug in VIBPAR whereby JISO was not initialized. This meant
   that the second time VIBPAR was called JISO continued to be incremented
   from its value at the end of the previous call. This would cause it
   to exceed the array dimansions and start overwriting other variables.
   Finally, when it trashed the loop variable (NN or NISO) the program
   would stop. This bug was fixed by a simple JISO=0 statement at the
   beginning of VIBPAR.
      Removed the array TDV (temperature-dependence of VACS) from the
   parameter list of the call to ABSCOF.
      Also, changed the format of the Vfact column from E10.3 to F10.4
   to allow more precision when computing averaging kernels.

GFIT  Version 9.4.4     3  Jun 1996  GCT
      Introduced a curvature correction for N2O5 , and introduced the new
   linelist into gct.h92, and updated the length in ABSCOF.F

GFIT  Version 9.4.3    21  May 1996  GCT
   Increased the size of the GCT.H92 linelist to 114861 after adding
   additional CHF2Cl lines in the 1080 to 1335 cm-1 region.

GFIT  Version 9.4.2    18  May 1996  GCT
   Changed the statement in ABSCOF.F from
        if(eprime.lt.0.0) eprime=999.     ! CH4 lines with E"=-1 are common
   to
        if(eprime.lt.0.0) eprime=222.     ! CH4 lines with E"=-1 are common
   The latter gives a much better fit to the 2966 cm-1 CH3Cl region.

GFIT  Version 9.4.1     8  Apr 1996  GCT
   Changed the format of the slant path file from
      (a14,5f8.3,150f7.3)
   to
      (a14,5f9.4,150f7.3)
   in order to retain the full precision of the solar zenith
   angles (the pointing offsets are stored to 4 decimal places
   in the runlog). Similar changes were made to GSETUP, GGGAVG
   NNRET,BATRET, and ZENANG. This allows the SOLZEN=ASZA+POFF,
   to be tested to detect a spectrum mis-match (the spectrum
   name would be better, but it is not present in the .lav
   file because IDL cannot read mixed, unformatted, records).

   This change means that all of the old intermediate files
   (e.g. .in .hg, .lav) are incompatible with the new software.
   The .col and .mav files are still OK.

GFIT  Version 9.4.0     5  Apr 1996  GCT
   Re-introduced the array AIRMASS(MTG) which is the ratio of the
   slant to vertical columns. This is now tested and if it exceeds
   999.999 (as can happen if the original vertical profile has
   large discontinuities) then it is written as 999.999, avoiding
   the ******* in the .col file which otherwise upsets GGGAVG.

GFIT  Version 9.3.9     4  Apr 1996  GCT
   Included the counters MAVFOUND and MAVMISSING to summarize the
   usage of the .mav files. This should allow the user to tell if
   any desired .mav files were not found, or if any unwanted .mav
   files were found, without having to inspect every line of the
   screen output.

   Fixed a bug which was causing the measured and calculated
   spectra to be apodized differently whenever an unknown
   apodization function (e.g. 'XX') ws used. Now, GFIT stops
   when this occurs after giving a error message.

GFIT  Version 9.3.8     1  Apr 1996  GCT
   Increased the retrace threshold from 5x to 6x

GFIT  Version 9.3.7    28  Mar 1996  GCT
   replaced the code
       call scov2(pd,nmt3,ntg+3,ip,var,ierr)
       call vmov(pd,nmt3+1,ex,i1,ntg+3)
   with
       call scov2(pd,nmt3,ntg+3,ip,var,ierr)
       if(ierr.eq.0) then
          call vmov(pd,nmt3+1,ex,i1,ntg+3)
       else
          call vmov(1/tau**2,0,ex,i1,ntg+3)
       endif
   so that when SCOV2 fails (e.g. extremely strong lines) a reasonable
   error estimate is made, rather than whatever garbage happened to be
   in EX at the time. 

GFIT  Version 9.3.6    21  Mar 1996  GCT
    Changed variables STREN, SOPI & TNU from REAL*4 to REAL*8 in order
    to avoid floating point exceptions (underflow) when reading linelists
    (e.g. HITRAN92) containing strengths less than 1.E-39.
    Increased all file/path names to 80 characters for compatibility with FWI.

GFIT  Version 9.3.5     7  Mar 1996  GCT
    In order to allow me to do Aaron Goldman's NDSC exercise.
      - disabled pressure shifts 
      - if E"=-1 then E"=0 (instead of E"=999cm-1)
      - increased width of line search from
              nuoff= 5.D0*dsqrt(grid*nc*p(1))
        to
              nuoff=10.D0*dsqrt(grid*nc*p(1))

GFIT  Version 9.3.4     4  Mar 1996  GCT
    The frequency shifts was being underestimated on Aaron Goldman's
    spectra, due to the fact that with  gint=0.25 mk; grid=1.9 mk;
    rdec=0.126, so that the previous expression for the a priori weight   
                rae(ntg+3)=0.5/rdec
    was giving far too much weight to the a priori estimate. Fixed this
    problem by setting
                rae(ntg+3)=0.5/(1.+rdec)

GFIT  Version 9.3.3     3  Mar 1996  GCT
    In order to allow Bhaswar to analyze Aaron Goldman's pre-apodized
    weak Norton-Beer synthetic spectra, I have changed GFIT so that
    there are now two variables, APO_M and APO_C, representing the
    apodization to be applied to the measured and calculated spectra
    respectively. If APF (in the runlog) is 'BX', then APO_M and APO_C
    will both be set to the default apodization in the .ggg file.  On
    the other hand, if APF is anything else, APO_M=0 and APO_C=code(APF)
    so that the calculated spectrum will be apodized to match the measured
    spectrum, irrespective of what the .ggg file says.

GFIT  Version 9.3.2    27  Feb 1996  GCT
    Fixed a bug in SLPATH which occasionally caused all the slant paths
    to be returned as zero when asza=90 degrees. This was due to rounding
    error in the statement
        IF( (TH-PIBY2)*(TH-PIBY2-DT) .LE. 0.0D0) THEN
    causing the value to be -ve and hence terminating the ray tracing
    even though TH-DT = 90. This was fixed by defining THWAS=TH before
    TH=TH+DT and then replacing the earlier statement by
        IF( (TH-PIBY2)*(THWAS-PIBY2) .LT. 0.0D0) THEN

    Also defined a variable BEND1 to be used for the GETSP calls in the
    loop over the FOV so that the total bending angle of the chief ray
    would not be overwritten.

    Finally, fixed a slight inconsistency in the value of PI between SLPATH
    and GETSP. None of these changes should make any difference to the
    absorber columns returned by GFIT, since a ASZA of exactly 90 degrees
    is rarely seen on practice.

GFIT  Version 9.3.1    13  Feb 1996  GCT
    Changed the a priori continuum level from the mean OBSRVD value
    across the entire window, to 0.5*(obsrvd(1)+obsrvd(nmp)).

    Decreased TAU, the rank deficient threshold for SHFTI, from 6e-04
    to 6e-05 in order to allow the retrieval of ClO from McMurdo spectra.
    Previously, it had complained of rank deficiencies.

    Also, reduced the parameter NTERM from 6 to 4 in FM to try to
    increase the damping on the frequency shift which currently is
    prone to oscillate.

GFIT  Version 9.3.0    12  Feb 1996  GCT
    Made two changes to try to make the elements of the PD matrix
    more similar in size. Hopefully, this will prevent the occurrence
    of "Rank Deficient".

    Changed the units of frequency shift from GRID to GINT, reversing
    the change made in version 8.1.3, which was intended to maintain
    the relative importance of the a priori and the measurement between
    spectra with different values of GINT. An unfortunate side-effect
    of this change was that since GINT was nearly always larger than
    GRID, it increased the size of the elements of CX(NTG+3) and hence
    decreased the size of its PD's, which led to rank deficiencies when
    analyzing shallow lines in noisy spectra. However, by expressing
    the a priori covariance RAE(NTG+3)=0.2/RDEC instead of 0.1, its
    relative importance will be the same as 8.1.3, but without the
    problem of the rank deficiencies.

    Multiplied the TILT PD's by a factor CX(NTG+1), so that now all the
    PD's scale with PD(NTG+1). This require that the statement
              dx(ntg+2)=dx(ntg+2)*fs
    be replaced by
              dx(ntg+2)=dx(ntg+2)*cx(ntg+1)*fs
    to compensate.

GFIT  Version 9.2.9     2  Feb 1996  GCT
    Fixed four minor bugs:
    1) When fitting laboratory spectra (without running GSETUP) the name
    of the user-supplied .mav file is often not the one that GFIT searches
    for. Previously, if it did not find it, ABSCOF was not called. Now it
    searches for the .mav file named in the .ggg file.
    2) When fitting a spectrum with SNR=0, ynoise became inf, which screwed
    everything up for that spectrum and all the subsequent ones. Now, SNR
    is set to 1 if it is 0.
    3) When trying to fit a bad spectrum with an OPD=0.01, GFIT must
    calculate a very wide slit function and therefore precompute VACs over
    a very wide interval, which causes the primitive grid to be stretched
    to fit in the available memory. Now it give a warning when OPD < 1.0.
    4) Defined the parameter MSP=MVA/20 to avoid having to change the code
    in two places (the parameter statement and the test on MSP) whenever the
    denominator (20) needs adjustment.

GFIT  Version 9.2.8    22  Jan 1996  GCT
    While fitting CO2 at 2300 cm-1 for ATMOS, I noticed that when the very
    strong CO2 lines became extremely saturated (at low altitude) they
    where underestimated in width by the FM calculation. This was remedied
    by reducing parameter FRAC in ABSCOF from 0.001 to 0.0001, so that now
    the line wings are computed out until they capture 99.99% of the line
    absorption (instead of 99.90% previously). Of course, this will slow
    down the FM calculation slightly, but not the spectral fitting.

GFIT  Version 9.2.7    16  Jan 1996  GCT
    Fixed a bug in PROFZL which caused the ILS of a triangularly apodized
    interferogram to be computed incorrectly as SINC(T)**2.  This caused
    the ILS to be too narrow for Justus's 1993 Spitsbergen spectra. The
    correct expression is SINC(T/2)**2. The ILS of a "box-car" is SINC(T).

GFIT  Version 9.2.6    15  Jan 1996  GCT
    The 3161 cm-1 CO2 window was not converging due to the iteration
    repeatedly retracing its steps. Increasing the retrace threshold from
    4x to 5x worse eliminated this problem.

GFIT  Version 9.2.5     9  Jan 1996  GCT
    A problem came to light when retrieving to3 in the 0.07 cm-1 wide
    989 cm-1 window in which only 4 spectral points reside for 0.015 cm-1
    resolution spectra. Occasionally, the rms fit would be 0.00% which
    would result in a calculated error of only 0.6% (from the zero offset). 
    To prevent this, the uncertainty in the VFACTs are now divided by a factor
          (0.1+nmp-ntg-3)/(nmp+0.1) = 1-(ntg+3)/(nmp+0.1)
    in order to correct for the fact that since we are fitting NTG+3 variables,
    the number of degrees of freedom is reduced to NMP-NTG-3.  The extra 0.1
    avoids a zero-divide when NTG+3=NMP.  This change will increase the size
    of all uncertainty estimates, especially for very narrow windows.

    Further increased the number of different allowed gases to 63 to support
    Bhaswar's HCl retrievals.

GFIT  Version 9.2.4     8  Dec 1995  GCT
    Changed GFIT & GSETUP so that the .mav & .in files are named consistently.
    For ground-based observations they will be called gndyydoy.mav, whereas
    for balloon observations they will be balyydoy.mav. The models all have
    similar prefixes as do the vmr sets. The latter also now have the extension
    .vmr instead of .set or .oss.

GFIT  Version 9.2.3    30  Nov 1995  GCT
    Increased the dimension of MGAS and MISO in ABSCOF.F so that Bhaswar can
    do ground-based profile retrievals using dummy gases to represent various
    altitude segments.

GFIT  Version 9.2.2    27  Nov 1995  GCT
    Corrected a bug which allowed +ve frequency shifts to exceed the range of
    the NCPTOT points precomputed in VAC. Frequency shifts are now limited to
    a maximum of 2*(resn+grid). Also, included an IF statement to limit the
    TILT if it ever exceeds the continuum level.

GFIT  Version 9.2.1    25  Nov 1995  GCT
    For the early iterations, a logarithmic form of the residuals is now
    employed. This gives much faster convergence in the case when the initial
    guess is far from the actual solution. After convergence has been achieved,
    the iteration is re-started from this point, but using the linear form
    of the residuals.

GFIT  Version 9.2.0    25  Nov 1995  GCT
    I now use a more elegant method of calculating the error contribution to
    the columns due to uncertainty in the zero level. After convergence has
    been achieved, I now simply add ZERR to the residuals and compute DX,
    which is then added in quadrature to EX.

GFIT  Version 9.1.5    25  Nov 1995  GCT
    The computation of the forward model and the PD's is now all performed
    inside the subroutine FM. This considerably simplifies the main program.
    It also allows the arrays PTSPEC and PTSVAC to be eliminated since FM
    uses the last two columns of SPVAC for work space. ESMOS3 benchmark now
    executes in 33s, giving results virtually identical to those previously.

GFIT  Version 9.1.4    16  Nov 1995  GCT
    Cleaned up some of the code in GFIT and NEWDEC relating to the handling of
    the slit operator. Previously, PROFZL was called with 1+2*(NHW*LDEC+LDEC/2)
    as the full width of the operator. This caused problems if LDEC were odd
    as I discovered when testing it with LDEC=1, RDEC=1, which should be a
    do nothing operation.

    Now PROFZL is called with 1+2*NHW*LDEC. Moreover, PROFZL now has the
    capability to compute a slit function containing an even number of points,
    althout we corrently always calculate an odd number. 
    This change makes no difference to the results produced by GFIT.

GFIT  Version 9.1.3    14  Nov 1995  GCT
    In preparation for an upcoming major revision of GFIT, I have introduced
    the array SPVAC which contains the SP.VAC product summed over all levels.
    This is only calculated once for each new spectrum, since the observation
    geometry does not change as we iterate the absorber amounts (CX). So SPVAC
    can then be used to directly compute all the transmittances and the PD's,
    eliminating the need for subroutine GETVAC or array VFSP. The pre-
    computation of this intermediate product (SPVAC) speeds up the fitting
    of the spectra significantly. The ESMOS exercise, which is dominated by
    the pre- computation of VAC, nevertheless went from 50.4s to 43.6s. For
    runlogs in which larger numbers of spectra are computed from the same
    VACs, the improvements should be greater. The only penalty is the need
    for an extra array of dimension (MVA/60 = 1 Mbyte). The results produced
    by this new program version should be identical to those previously.

GFIT  Version 9.1.2     9  Nov 1995  GCT
    Added curvature correction for CCl4 to VIBPAR.

GFIT  Version 9.1.1    15  Oct 1995  GCT
    ??

GFIT  Version 9.1.0    10  Oct 1995  GCT
    Changed the hardwired parameter LDEC=8 to be a free variable. LDEC is
    the factor by which the ILS is oversampled with respect to GRID. This
    change allows a more optimum value to be chosen avoiding overcomputation
    of the slit function in cases where the spectra resolution of the
    measured spectra is already far larger than GRID (e.g. F113).

GFIT  Version 9.0.1     1  Oct 1995  GCT
    To avoid the output from ABSCOF being written to screen every time
    the VACs are recomputed, it now writes to a file named 'ABSCOF.RPT' for
    subsequent calls, so that the flow of parameters retrieved from each
    spectrum is not interrupted.

GFIT  Version 9.0.0     1  Oct 1995  GCT
    A major revision in which GFIT searches the local directory for a
    YYDOY.MAV file every time the DOY increments. If it finds one, it
    uses it to recompute the absorption coefficients. if it fails to find
    one it simply continues to use the previous one.

GFIT  Version 8.3.8    22  Sep 1995  GCT
    Re-introduced the variable NLOW into GFIT so that it automatically
    skips any unused levels when it reads in the .obs and .mav files.
    This simplifies NNRET and GSETUP; the latter previously had to create
    a temporary file, which was re-read after determining NLOW. it also
    avoids having to add an extra lower level to the insb files just in case
    the wider HgCd FOV requires it. This change should produce no different
    in the results and is fully compatible with earlier versions of GSETUP.

GFIT  Version 8.3.7    20  Sep 1995  GCT
    Replaced the statement (in ABSCOF.F)
              flinwid=3+min0(y/frac,sqrt(y*sxopidw/tnulst))/godw
    with
              flinwid=(3+min0(y/frac,sqrt(y*sxopidw/tnulst)))/godw
    in order to avoid problems when y=0 (pbhw=0) and the Doppler width
    is > 3 grid points. The latter formulation is actually more consistent
    with the old usage.

    Also, re-enabled pressure shifts (which had been set to zero for the ESMOS
    intercomparison).

GFIT  Version 8.3.6    18  Sep 1995  GCT
    Replaced all 0's and 1's in calls to VSUB routines with parameters i0
    and i1. This will stop complaints by the Microsft compiler on the PC.

GFIT  Version 8.3.5    15  Sep 1995  GCT
    Changed FINDFILE to look for Justus's spectra in /mk4data6/spit/
    also, to improve efficiency when reading a sorted list of spectra
    spread over several CDROMS, FINDFILE now searches partition IP+1
    instead of 1  after failing to find a spectrum at the location (IP)
    of previous success.

GFIT  Version 8.3.4    10  Sep 1995  GCT
    Made changes to PROFZL, FETSPE and GFIT to correctly support the 'TR'
    apodization functions employed by some of Justus's early spectra.
    This was not completely straight-forward due to the fact that the
    measured spectra must not be apodized whereas the synthetic spectrum
    must. It is now assumed that if APF='TR', no further apodization will
    be applied to the measured or synthetic spectra, even if the user-
    supplied default APO (in the .ggg file) says otherwise.

    This change should make absolutely no difference to the results
    obtained under APF='BX'.

GFIT  Version 8.3.3     8  Sep 1995  GCT
    Placed an empirical temperature correction in VIBPAR specifically for F22.

GFIT  Version 8.3.2     6  Sep 1995  GCT
    Fixed another bug discovered when fitting Varanasi's CFC-22 Q-branch
    spectra, which only extend from 828.95 to 829.16 cm-1, this time with
    a window of width 67 cm-1: I got the warning 
       write(6,*)'Window will be clipped for this particular spectrum.'
       write(6,*)'To avoid future clipping increase parameter MMP to'
    Of course, GFIT assumed that the Varanasi TDLS Q-branch spectra of
    point spacing .0002 cm-1 extended over the entire 67 cm-1 interval,
    and so it though that array parameter MMP was insufficient. 
    
    So I simply deleted the test in the early part of GFIT: When it calls
    FETSPE it will find out for sure whether it can read the whole spectrum.

GFIT  Version 8.3.1    30  Aug 1995  GCT
    Fixed a bug discovered when fitting Varanasi's CFC-22 Q-branch spectra,
    which only extend from 828.95 to 829.16 cm-1, with a window of width
    0.28 cm-1. Since the NMP returned by FETSPE was much less than that
    anticipated, the test to limit the frequency shift was improperly
    activated. This was corrected by replacing the statement
          elseif(rva+ncp+nsh.gt.ncptot) then
    by
          elseif(rva+nmp*rdec+nsh.gt.ncptot) then
    Of course, for the normal situation in which the spectrum under analysis
    is wider than the window, this will have no effect.
  
GFIT  Version 8.3.0    31  Jul 1995  GCT
    Placed an empirical temperature correction in VIBPAR specifically for F11.
    This corrects the quadratic dependence that could not be removed simply
    by adjusting the line strength and E". Now, when used in conjunction with
    the new list, GFIT will return all TOTCONS within 1% of unity for all of
    Varanasi's laboratory spectra.

GFIT  Version 8.2.1    30  Jul 1995  GCT
    Noticed that the errors returned by GFIT increased linearly with the
    continuum level, so that if I increased the ESMOS continua from 1.0 to
    1.6 by changing SCALE from 32768 to 20000, then the error bars all grew.
    This was remedied by dividing the effective noise level fed to S@COV2
    by CX(ntg+1). I then simplified the expression RMSWAS*SNR/CX(ntg+1) by
    replacing it with RMSWAS*RNOISE*CORRLD. This allowed me to define
    RNOISE = 0.4*SNR/CX(ntg+1)/CORRLD, where the factor 0.4 expresses the
    fact that that it is virtually never possible to fit a spectrum down
    to the claimed noise level - usually the final rms is 2-3 times larger.
    This way GFIT can get the right answer without offending the owner of
    the spectra.

    Note that the 0.4 has no effect (to first order) on the error bar
    returned by GFIT. It merely reduces the relative weight of the spectra
    compared with the "a priori" estimates.

GFIT  Version 8.2.0    27  Jul 1995  GCT
    Reduced the TNULST threshold in ABSCOF.F from 0.5e-6 to 1.e-8. This
    larger reduction was necessitated by the switchover to the Bell's new
    ClNO3 line parameters which has many more lines, but which are all
    much weaker than previously.

    An unfortunate side-effect of reducing TNULST is that ABSCOF would now
    compute the shape of every line over an interval which is 7.071 times
    wider than previously, which slows things down considerably. So I
    introduced an additions criterion: ABSCOF now terminates computation
    of a line wing if either (i) the absolute absorption coefficient falls
    below TNULST, or (ii) the remaining integrated absorption is less than
    FRAC of the total. Note that the former criterion is dependent on the
    strength of a particular line whereas the latter is not.

GFIT  Version 8.1.13   26  Jul 1995  GCT
    I now read the slant paths during the first loop in GFIT. This avoids
    wasting time computing VACs only to have the program subsequently crash
    duo to an error while reading the slant path file, which can easily
    occur if the file was prepared by hand. Also, GFIT now checks that the
    number of levels at the top of the slant path and the MAV files are
    identical.

GFIT  Version 8.1.12   21  Jul 1995  GCT
    Replaced subroutine SEEKFILE with FINDFILE. The latter is much simpler
    since it explicitly contains all of the pathnames to be searched.

GFIT  Version 8.1.11   18  Jul 1995  GCT
    Divided the PD's and residuals by the estimated measurement noise
    (1/rnoise), and removed the multiplication of RAE by the noise.
    This makes the solved equations conform to the written equations
    in the paper.

GFIT  Version 8.1.10   14  Jul 1995  GCT
    Realized that the RNORM returned by the SHFTI subroutine is usually
    much smaller than the actual norm calculated from the fit, and typically
    does not change much even when the actual norm is rapidly decreasing
    Therefore, RNORM is not a suitable input for the convergence criterion.
    Instead, I went back to using RMS & RMSWAS to determine when the
    convergence was completed. This reverses the change reported in the 
    second para of 8.1.0.

    Also, removed STEP, the variable which reduces the computed step size.
    This reverses 8.1.7.

GFIT  Version 8.1.9    14  Jul 1995  GCT
    Changed the runlog format to be able to support Justus's Spitsbergen
    spectra. Also took this opportunity to make some additional changes
    which will simplify the code and improve the frequency accuracy:
      expanded delta_nu to 11 decimal places and allowed it to go -ve
      expanded IYR to the full 4-digit integer e.g. 1995
      expanded BPW to I3 format so that it will always have a space before it
      included APF, the character*2 apodization function, e.g. "BX", "TR"
      expanded POSSP from I5 to I8 to cater to the long OPUS headers

GFIT  Version 8.1.8    13  Jul 1995  GCT
    Converted several variables from R*4 to R*8 to attempt to gain better
    frequency accuracy. These include FRQCEN,WIDTH,RVA,RDEC. This was in
    response to my observation that when observing the full 150 cm-1 wide
    Varanasi CFC-12 spectrum, the residuals in the 1161 cm-1 region were
    completely different from those observed when a narrow region was used
    which just covered 1161 cm-1.

    Also, changed the definition of measurement uncertainty from CORRLD*RMS to
    CORRLD/SNR. Since the latter does not change from iteration to iteration,
    convergence proceeds faster and avoids oscillation. Of course, the
    actual rms is used in the computation of the covariance.

GFIT  Version 8.1.7a   11  Jul 1995  GCT
    Realized that by setting MIT=1, GFIT would not have an opportunity to
    refine the initial forward model run, so that the residuals in the SPT
    file would therefore reflect the initialization. This is exactly what
    is needed in the GFITABS executable, and can now be done by one simple
    change, rather than having to also set RAE values, and uncomment lines
    of code as previously. Also, if MIT=1, we now skip the sections of code
    where the PD's are computed and CX is updated.

GFIT  Version 8.1.7    28  Jun 1995  GCT
    Introduced the scalar STEP which scales the adjustment to the state vector
    by between 0.5 and 1.0. If the norm of the fit gets worse, then STEP is 
    reduced. This helps kill oscillations which would otherwise prevent
    convergence.

GFIT  Version 8.1.6    23  Jun 1995  GCT
    Removed all calls to VSET and replaced tham with VMOV. This might be
    slightly slower, but simplifies VSUBS.F

GFIT  Version 8.1.5    23  Jun 1995  GCT
    Changed the definition of the continuum tilt CX(NTG+2) so that it
    is now expressed as a fraction of the continuum level rather than
    in absolute term. This makes it independent of changes in the scaling
    of the spectral values. This reverses the decision made in version 4.1.0,

    Also, changed the definition of tilt so that it now represents the
    fractional change in the continuum level across the entire window,
    rather than across 1 measured spectral grid point, as previously.
    This change makes TILT internally independent of the spectral point
    spacing, and hence INTERP, which makes for a more consistent enforcement
    of the "a priori" constraints. This required that VRAMP be modified.

GFIT  Version 8.1.4    20  Jun 1995  GCT
    Changed the initialization of CX(NTG+1), the continuum level, from
    AX(NTG+1)=1  to the mean of the measured spectral values. This is
    in general a much better guess than unity.

GFIT  Version 8.1.3    20  Jun 1995  GCT
    Changed the definition of the frequency shift CX(NTG+3) so that it
    is now expressed in units of GRID instead of GINT. This makes it,
    and hence the effect of the "a priori" information, more internally
    consistent between spectra having different point spacings. Of course,
    there is no change in the frequency shifts reported in the .col files
    since these are in units of cm-1.

GFIT  Version 8.1.2    18  Jun 1995  GCT
    Multiplied the NTG+3 equations expressing the "a priori" constraints
    by the rms residual of the spectral fit. This has two advantages:
    When the fit is poor, on the first iteration, the "a priori" gets
    more weight and therefore prevents the fit from over-reacting.
    This also makes the "a priori" values quantitatively consistent,
    so that if the measurements contain no information about a particular
    variable, their reported uncertainies will be precisely the "a priori"
    values. Previously, this was not the case.

GFIT  Version 8.1.0    16  Jun 1995  GCT
    Replaced the MINFIT subroutine with SHFTI. The latter employs QR
    decomposition using Householder transformations and is 3-4 times
    faster than SVD, although the total time per iteration was only
    10% faster because the computation of the FM and the PD's stays
    the same. The other advantage of SHFTI is that it is simpler to
    use: Fewer arrays are needed and the desired quantities dx & the
    covariances, are provided explicitly. Since all the retrieved 
    variables are constrained by "a priori" estimates, there is no
    danger that the matrix being inverted will be rank deficient,
    in which case SVD has no advantage whatsoever.

    Changed the convergenge criterion to a fractional error (10**-5) in RMS 
    rather than an absolute error in VAR. Also, I am now computing RMS from
    RNORM returned by SHFTI, rather than squaring the residuals explicitly.
    This, of course, includes a contribution from the departures of the
    solution vector from their "a priori" values in addition to the actual 
    spectral residuals, and is therefore slightly larger than it was,
    requiring that the actual spectral residuals be recomputed after
    convergence is achieved.

GFIT  Version 8.0.3    10  Jun 1995  GCT
    If parameter MVA is insufficient to accomodate all the desired VACs,
    then the program now automatically increases GRID so that MVA will suffice
    but warns the user of reduced accuracy. Previously it stopped.

GFIT  Version 8.0.1     6  Jun 1995  GCT
    Discovered that rounding to the nearest slit grid point, rather than
    interpolating between the two nearest, prevented convergence in many cases.
    Increasing LDEC to further oversample the SLIT function did not help.
    Therefore I adapted NEWDEC to do the interpolation, which requires two
    dot products instead of one, and so is significantly slower.

GFIT  Version 8.0.0     4  Jun 1995  GCT
    A major revision in which the frequency grid upon which the VACs are
    precomputed no longer needs to be an integral sub-multiple of the point
    spacings of the measured spectra. This will allow spectra of completely
    different point spacings to be analyzed together from the same VACs. It
    also simplifies the code at the beginning of GFIT in which the primitive
    grid is determined. The variable IDEC, which was an integer, now becomes
    real*8: RDEC = measured point spacing / primitive grid.

    This new version will allow me to analyze Varanasi's latest lab spectra,
    which have completely different point spacings, all together using the
    same VACs. This also will apply for Justus's Spitsbergen spectra.

    Surprisingly, there is virtually no speed penalty for ths significant
    enhancement of flexibility: While it is true that the indexing of the
    VAC array from inside NEWDEC becomes much messier, the inner-most loop,
    a dot product, remains unchanged.

GFIT  Version 7.4.0    26  May 1995  GCT
    Changed the way that the frequency shifts are performed. Previously they
    were accomodated by making SLIT asymmetrical internally, which had the
    advantage that the indexing of SLIT and the absorption coefficients was
    independent of the frequency shift. However, the disadvantages were that
    (i) for large shifts the asymmetry in SLIT became quite large, and (ii)
    the computation of SLIT had to be performed inside the iteration loop.

    With the new approach a few (NSH) extra absorption coefficients are
    computed on either side of the necessary spectral interval to allow for
    the frequency shifting. This is performed by (i) adjusting the index of
    the first primitive spectral point (LVA) to be used on the convolution
    with symmetrical SLIT and (ii) by oversampling the computation of SLIT
    so that any fractional frequency shift remaining after the adjustment
    of LVA can be accommodated by adjusting the index of the first point
    of SLIT to be used in the convolution. Note that the fineness to which
    the frequency shift can now be determined is not as good as previously
    and depends on the factor (LDEC) by which SLIT is oversampled. Note that
    the execution speed is independent of LDEC; increasing it only requires
    that more memory will be used for the storage of SLIT.

GFIT  Version 7.3.2    25  May 1995  GCT
    Changed the (arbitrary) sign convention for the frequency shifts so that
    shifts which were previously -ve are now +ve and vice versa. This involved
    replacing +OFF by _OFF in PROFZL.F and by changing the sign of RK in the
    calculation of the partial differentials inside GFIT. This change produced
    no effect on the outputs except for the sign of the shift. The new sign
    convention is more logical in that if the shift is +ve, than the spectral
    point spacing (in the runlog) needs to be increased.  It was done in
    preparation for a major change in the way the shifts are performed.

GFIT  Version 7.3.1    24  May 1995  GCT
    The statement  if(z(klev).ge.zmin) go to 777 was causing z(0) to be
    referenced in the case when the lowest model level exactly coincided
    with the observation altitude (e.g. the ESMOS comparison). This was
    fixed by changing the .ge. to .gt.

GFIT  Version 7.3.0    18  May 1995  GCT
    Fixed a bug which caused the outputted frequency of an absorption line
    always to be lower than the true frequency by one primitive grid point.
    This was caused by an ambiguity in the usage of the variable FZERO:
    Inside GFIT is was used as the frequency of the first stored VAC,
    whereas inside ABSCOF is was used as the point before the first one.
    I have now settled on the latter definition for both routines, which
    caused some minor simplifications to the definitions of NCP1 and LVA.
    This bug also previously caused the derived frequency shifts to change
    whenever INTERP was changed, which of course it shouldn't do.

GFIT  Version 7.2.5    12  May 1995  GCT
    Changed the format of the SPT output file header line to provide more
    precision in the frequencies and a larger possible number of points.
    It is now 2f12.6,i6,... instead of 2f11.5,i5,...

GFIT  Version 7.2.4     5  May 1995  GCT
    Reduced the threshold above which the spectral lines are written to
    the screen from 0.5E-04 to 0.1E-04. Thus, Lines having an EW between
    0.5 and 1.5 E-05 appear having an EW of 0.1 mK as before, but now lines
    having an 0.1E-04 < EW < 0.5E-04 will also appear with EW = 0.0 mK 
    This facilitates the identification of very weak lines.

GFIT  Version 7.2.3     3  May 1995  GCT
    Removed function POSNALL from ABSCOF so that it might more easily be
    shared by RH94. It is now referenced by an "include" statement.

GFIT  Version 7.2.2     2  May 1995  GCT
    Increased the value of parameter MMP to 65048 in order to accomodate
    JFB's ClCN spectrum, which is 140 cm-1 wide and 2.15 mK sampling.
    This increased the total executable size by 3.6 Mbyte to 65.5 Mbyte.
    Also changed MOLPAR.DAT making ClCN gas # 52

GFIT  Version 7.2.1    21  Apr 1995  GCT
    Included a loop of code, after the iteration loop, to calculate the
    transmittance spectrum (as seen through the ILS) of each individual
    target gas. These are stored in the array PD, which just so happens
    to have precisely the right dimensions, before being written to the
    SPT file to the right of the measured and computed total transmittances.

GFIT  Version 7.2.0    25  Mar 1995  GCT
    Changed GFIT and ABSCOF so that the names of the linelists to be used
    all appear on the same line of the GGG file. The function NSUBSTR then
    breaks up this line into its various sub-strings inside ABSCOF. This
    removes the limitation of there only being 3 lists that can be used.

GFIT  Version 7.1.12   24  Mar 1995  GCT
    Changed MOLEWT from I*2 to R*4 inside ABSCOF. This allows us to define
    fractional molecular weights (e.g. 0.01 for CFC-113).

GFIT  Version 7.1.11   23  Mar 1995  GCT
    Made CF3Cl3 (CFC-113) molecule # 51. This required changes to both
    molnum.f and molparam.dat.

GFIT  Version 7.1.10   22  Mar 1995  GCT
    Added CFC-22 to the list of gases for which the primative grid spacing
    is doubled. This is quite safe since the molecular weight of CFC-22 is
    reduced to 1 to limit the number of lines employed in the fudged list.

GFIT  Version 7.1.9    21  Mar 1995  GCT
    Made an improvement to PROFZL so that when the OFFSet tries to exceed
    NK-RESNOG it is limited to  OFF = SIGN(float(nk)-resnog,off)
    This prevents the horrible looking fits in the past when OFF was set
    to NK without any term from RESNOG.

GFIT  Version 7.1.8    18  Mar 1995  GCT
    Improved GFITs tolerence for spectra having different point spacings
    by defining IDEL, a correction to LVA, which previously chose the
    starting absorption coefficient based on the first spectral point
    returned by FETSPE. In cases when the point spacing of the returned
    spectrum differed from IDEC*GRID this led to a cumulative frequency
    shift across the window. By correcting LVA with IDEL, which is zero
    if IDEC*GRID=GINT, the effect is to match the central frequencies of
    the returned points instread of the first. This minimizes the
    frequency shift which has to be imposed.

GFIT  Version 7.1.7    17  Mar 1995  GCT
    Fixed bug in FETSPE which caused a -ve value for IPTS to be returned
    whenever the spectrum available on disk was narrower than the ILS.
    This was discovered while trying to analyse a 0.25 cm-1 wide slice of
    CFC-22 laboratory spectrum.

GFIT  Version 7.1.6    22  Feb 1995  GCT
    Fixed a bug which was causing the calculated vertical columns to be
    in error whenver the level spacing was non-unity. This bug was not
    present in version 6. It was instroduced at version 7.0.0 when the calls
    to SLPATH were moved out of GFIT and into GSETUP, and an alternative
    code was introduced to compute the vertical columns inside GFIT. Note
    that only the vertical columns were in error. The slant columns and the
    VFACTs were all fine, so the all the balloon retrievals are unaffected.

GFIT  Version 7.1.5    17  Feb 1995  GCT
    Simplified subroutine FETSPE so that it no longer needs to open the
    runlog and search for the requested spectrum, before reading the relevant
    parameters. Instead the character string RECORD, which is the relevant 
    line from the runlog, is passed to FETSPE. This avoids having to pass to
    FETSPE the spectrum name or the runlog name.

GFIT  Version 7.1.4    17  Feb 1995  GCT
    Also found a way of avoiding having to space out the raw spectral point
    at intervals of INTERP in order to perform the convolution "in place".
    Instead, they are placed at successive locations of YOBS starting at
    address  1+(interp-1)*(mpts-ns). This, of course, is unity for interp=1,
    but for larger values of interp the raw spectral values are written
    further down the array, so that when the final interpolated spectral
    values are placed starting at the beginning of YOBS, the raw values are
    never overwritten until thay have been completely used.

GFIT  Version 7.1.3 and 7.0.5   16-Feb-1995
    Upgraded the linelists to the new 1994 versions. This required that the
    number of lines in each list, hardwired in ABSCOF.F, to be changed.

GFIT  Version 7.1.2    29  Dec 1994  GCT
    Created PROFZL - a new version of PROFXL which nornalizes the slit function
    to unity. The input parameter AREA has gone.
    Also created FETSPE - a new version of GETSPE which allows the user to
    specify a frequency offset by which to resample the measured spectrum.

GFIT  Version 7.1.1    28  Dec 1994  GCT
    Added the line
      if(gint.le.zz/2)stop ' Spectral grid too fine - reduce INTERP'
    to prevent IDEC from being incorrectly computed when the interpolated
    point spacing was smaller than the necessary computation grid. Otherwise,
    this would cause "Unacceptable Scatter" and eventually array bound errors.

GFIT  Version 7.1.0    24  Dec 1994  GCT
    Re-organized subroutine GETSPE so that it no longer needed the internal
    array IRAW in which to temporarily store the raw data values. It now
    stores them temporarily in the array provided (YOBS) and overwrites the
    raw points during the convolution. This was made possible, for the case
    when INTERP>1, by spacing out the raw points at intervals of INTERP 
    inside YOBS.
    The new GETSPE is functionally equivalent to the old one, but now calls
    the subroutine FETCH to get the raw data from disk. To facilitate the
    interface to FETCH, the 16i5 ASCII format was redefined in RUNLOG so that
    the header length is now 1600 bytes instead of 20 lines. This is actually
    a more consistent with the usage adopted for the other (binary) formats,
    and is a more direct interpretation of the actual spectrum (in which each
    header line is in fact padded with blanks out to column 80).

GFIT  Version 7.0.5    16  Feb 1995  GCT
    Reduced the a priori weight given to the frequency shift from .005 to .002
    Otherwise the absorption of very weak lines is underestimated if the
    frequency shift is incorrect.

GFIT  Version 7.0.4    14  Nov 1994  GCT
    The term ERROFF (the uncertainty in the zero offset) is now inputted
    from the .GGG file instead of being hard-wired inside GFIT.

GFIT  Version 7.0.3    13  Nov 1994  GCT
    Defined the variable ZZ = 0.999999E-06*FRQCEN so that it can more easily
    be doubled for the heavy gases e.g. F-11, N2O5, without excessive editing.

GFIT  Version 7.0.2    12  Nov 1994  GCT
    The VFACT and VERR for target gases 2+ are no longer written to screen.
    This improves the intelligibility of the prior output.
    They are, of course, still written to file

GFIT  Version 7.0.1    12  Nov 1994  GCT
    The molecular weights of the heavy gases F11, F12 are now set to 1 inside
    MOLPARAM.DAT. This broadens the lines in the upper stratosphere which
    reduces the number of "fudged" lines which are necessary to accurately
    represent this absorption.

GFIT  Version 7.0.0     1  Nov 1994  GCT
    This is a major revision in which the functionality of computing the
    slant paths, along with the reading of the model and vmr set, has been
    removed from GGG and placed in MAKGGG. The new spectral fitting program
    is now named GFIT and the augmented MAKGGG is now called GSETUP.

    This re-organization simplifies the interface to GFIT to the point where
    laboratory spectra can now be analyzed.

GFIT  Version 6.3.0    25  Sep 1994  GCT
    In preparation to taking the calls to subroutines READMOD, READSET, and
    SLAPTH out of GGG and instead reading the appropriate information from
    disk files (RUNLOG.MAV & RUNLOG.OBS), I have included these file names
    into the .GGG driver files. Although the current version of GGG does not
    use them, this modification will allow the new and existing versions of
    GGG to use identical .GGG driver files. I also included the pathname to
    the "molparam.dat", and the scalar ERROFF into the .GGG driver file. The
    former is fed to VIBPAR (where it is read) via the ABSCOF parameter list.
    This version of GGG will therefore crash if executed on old .GGG drivers.
    Only use with drivers built using PREGGG version 6.3 or later.
    Note that the .COL files also have the 3 extra lines in their headers.

GFIT  Version 6.2.10   20  Aug 1994  GCT
    The statement write(lunt,88)(linfil(2)(:lnbc(linfil(2))) was causing
    a sub-string reference error (lnbc=0) on the PC, so I simplified it to
    write(lunt,88)(linfil(2).

    I also fixed a bug in SEEKFILE which caused illegal (on PC) sub-string
    references when 2 or more consecutive spectra could not be found. This
    was accomplished simply by inserting the line JIN=1 near the bottom of
    the file. Also changed some variable names to make it clearer.

    I removed unnecessary type statement from GGG & READMOD and also included
    the wavenumbers in the printing of the first & last linelist lines.

GFIT  Version 6.2.9    19  Aug 1994  GCT
    Included function height inside GGG.F instead of keeping it in a
    seperate file.

GFIT  Version 6.2.8    18  Aug 1994  GCT
    Changed MOLPAR.F so than the list of permissible gas names is now read
    from an internal DATA statement, rather than the file MOLPAR.DAT, which
    can now be deleted.

GFIT  Version 6.2.7    17  Aug 1994  GCT
    Changed ABSCOF.F so that it reads (from MOLPARAM.DAT) and displays the
    full isotopomer name, rather than just the gas name.

GFIT  Version 6.2.6    16  Aug 1994  GCT
    Divided VAR by CX(ntg+1) and OBSRVD by CNTUUM so that the residuals
    would be actual transmittances and the rms would be %.  Noticed that
    there was still some slight dependence of Vfact on SCALE - the default
    spectral divisor. This was particularly true for the ESMOSIII CO2
    window. There were no zero offsets, so the cause remains a mystery.

GFIT  Version 6.2.5     8  Jul 1994  GCT
    Altered the zerr= statement to make the retrieved column error
    independent of the initial vmr profile. It now reads
         zz=(cx(jtg)*cx(ntg+1))**2
        zerr=zerr*zz + (0.1+zz)/(zz+eps)
    This makes sqrt(zerr) proportional to both cx(jtg) and cx(ntg+1)
    while still giving rise to large errors when either is very small.

GFIT  Version 6.2.4     7  Jul 1994  GCT
    Doubled the decimation criterion (0.9999e-6*frqcen) for gases 26 & 33,
    allowing N2O5 & F11 to be retrieved using the standard size executable.
    This is a reasonable action for F11 because the lines are pressure
    broadened over the altitudes where F11 is measurable. It is less
    reasonable for N2O5, but unless we do it, we can't retrieve N2O5 within
    our current 128M of memory.

GFIT  Version 6.2.3     6  Jul 1994  GCT
    Corrected format error in the h92 read statement: the last value
    should be f8.6 and not f9.6

GFIT  Version 6.2.2     5  Jul 1994  GCT
    Finally discovered the true reason for the 1-2% differences between
    the computed columns when SCALE is changed from 15000 to 32768.
    It was due to the zero offsets being absolute is magnitude so that
    when an offset of 0.01 was applied this had a different fractional
    effect. I fixed this by multiplying the zero offset by CX(ntg+1)
    making it a fractional zero offset. Since the value of CX(ntg+1) is
    not known outside the iteration loop, the zero subtraction had to
    be moved inside. 
       To also make the error bars independent of SCALE I had to
    multiply ERROFF (the zero level uncertainty) by CX(ntg+1).

GFIT  Version 6.2.1     3  Jul 1994  GCT
    Changed SCALE back to 15000.

GFIT  Version 6.2.0     2  Jul 1994  GCT
    Noticed that changing SCALE between 15000 and 32768 made several %
    differences in the fts93268 runs. This has to be due to the statement
   		 zerr=zerr+1./((cx(jtg)*cx(ntg+1))**2+eps)
    because CX(ntg+1) is inversely proportional to SCALE.  So, I increased
    the a priori covariance of the continuum level from 0.0 to 0.01.  This
    should improves things indirectly by nearly eliminating occasions when
    CX(ntg+1) is close to zero. 

GFIT  Version 6.1.6     1  Jul 1994  GCT
    Increased SCALE back to 32768.

GFIT  Version 6.1.5    26  Jun 1994  GCT
    Increased size of character variables containing names of model, vmr
    level file, etc from 36 to 40. Also converted their declarations in
    subroutines from *32 to *(*) so that any future changes to the size
    of these strings will not require subroutines to be edited.

    Also changed variable SCALE in GETSPE from 32768 to 15000 in order to
    produce convergence for N2O5 and increased array dimensions to allow
    N2O5 retrievals along with CH4 and N2O.

GFIT  Version 6.1.4    26  May 1994  GCT
    Gathered together all the vector subroutines into a single file VSUBS.F
    This simplifies the MAKEFILE and reduces the number of small files
    lying around. Also renamed DOTPR to VDOT.

GFIT  Version 6.1.3    26  May 1994  GCT
    Restricted length of GGG write statements typed to the screen to include
    just the first target gas. This prevents the lines wrapping around. The
    .col files however contain the full write statements.

GFIT  Version 6.1.2    17  May 1994  GCT
    Made slight change to GETSPE to allow ASCII (ESMOS) spectra to be read
    on the PC, automatically skipping the first HEDLEN lines.

GFIT  Version 6.1.1    10  May 1994  GCT
    Decreased the value of THRESH, used to limit the influence of the
    smallest Eigenvectors, from 1e-6 to 1e-9. This produces larger error
    estimates especially at high altitudes.

GFIT  Version 6.1.0    10  May 1994  GCT
    Includes the correct (to the nearest integer) molecular weights for the
    isotopes, which are read in from a revized MOLPAR.DAT (molparam.dat).

GFIT  Version 6.0.0    30  Apr 1994  GCT
    This major revision changes the format of the output files. Instead of
		airmass,totcon,toterr,vcol,verr
    which contained redundant information, we now report
		ovcol,oscol,totcon,toterr
    so that vcol=ovcol*totcon, verr=ovcol*toterr, scol=oscol*totcon, etc.
    Additionally, we now include Zmin (the tangent or observer altitude).

GFIT  Version 5.2.3    28  Apr 1994  GCT
    Fudged the expression for the uncertainty to prevent the errors becoming
    very small when the totcon became very small (e.g. in saturated lines)
    The new equation is
   		 zerr=zerr+1./((cx(jtg)*cx(ntg+1))**2+eps)
    This differs from the old one by the factor cx(jtg)

GFIT  Version 5.2.2    13  Apr 1994  GCT
    Made changes to the code to make it more compatible with the PC version.
    In particular, the determination of the length of the linelists, performed
    using the INQUIRE statement on the PC, is now hard-wired on the SUN
    except for the personal linelists which are completely read to determine
    their size.
   
GFIT  Version 5.2.1    12  Apr 1994  GCT
   Can't remember what I did for this version.

GFIT  Version 5.2.0     8  Apr 1994  GCT
   In this revision GGG reads all the input information from the ASCII runlog
   instead of the spectrum header. This allows various AMAL, ZPOFF & ZOFF
   to be defined individually for each spectrum. Also, GGG (formerly GETINFO)
   is now not called at all, since all the necessary information is condensed 
   into the ASCII runlog. All frequency corrections are now done by the program
   (RUNLOG) which creates the ASCII runlog containing the final GRAW.

GFIT  Version 5.1.1    22  Mar 1994  GCT
   Changed the expression which limits the step size (again). It is now
		dx = dx/sqrt(1 + dx*dx/(0.01+abs(cx)))
   This allows the same initial (cx=1) step as before, but has the advantage
   that it cannot step all the way to zero from large CX values. Conversely,
   it permits larger steps when CX is close to zero.

GFIT  Version 5.1.0    19  Mar 1994  GCT
   Realized that there is no need for GGG to perform frequency
   corrections (Doppler shifts, FOV adjustments, WIFACT). These can all
   be done by RUNLOG and the resulting DELWAV written to the runlog file.
   GGG then just uses DELWAV at face value. This simplifies RRR and GETSPE
   considerably. It also reduces the breadth of the runlog file because
   LASF, DOPP, TINS, PINS, & HINS no longer need to be there.
	I also got rid of SPMAX because it was not used for anything.

GFIT  Version 5.0.6    17  Mar 1994  GCT
   Removed the statement GRAW=GRAW*(1+dopp/3.e8) from GETSPE since
   it was already corrected in RRR. With this fix I could fit the frequency
   shifts of the ATMOS Atlas 1 spectra (dopp=5 km/s) to better than 1 mK.
	Removed DOPP from the parameter lists of RRR and GETSPE, since
   there was no need for it in the main program. RRR uses it internally
   to correct the spectral point spacing i.e. [DELWAV=DELWAV*(1+dopp/3.e8)]

GFIT  Version 5.0.5    15  Mar 1994  GCT
	Implemented the pressure shift correction in abscof.f, tested it,
   and then dis-abled the feature for the time being because it was
   altering the frequency shifts on my HCl benchmark.

GFIT  Version 5.0.4    14  Mar 1994  GCT
	Changed the expression which limits the step size. It is now 
		dx = dx/sqrt(1 + dx*dx/(0.01+cx*cx))
   This better prevents CX going -ve in blacked out spectral regions which
   was previously giving rise to unrealistically small error bars.

GFIT  Version 5.0.3    13  Mar 1994  GCT
   Chenged the way the intensity offset was applied from
	ZOFF = XOFF * (obsrved(1)+obsrvd(nmp))/2
   to
	ZOFF = XOFF
   Thus it is no longer interpreted as a fraction of the local continuum.
   I changed this because in blacked out spectra regions the intensity
   offset was not having any effect.

GFIT  Version 5.0.2    14  Feb 1994  GCT
   Made changes to GGG and MAKGGG to allow it to accomodate up to 56 different
   gases. The was done to allow Bill Irion to do heavy ozone retrievals.
   Changes were made to MOLPAR.DAT, MOLNUM.DAT,.....

GFIT  Version 5.0.1    11  Feb 1994  GCT
   Enabled ABSCOF to read the HITRAN92 linelist (ascii). This required
   passing an additional parameter to POSNALL (the format) so that it can
   position in either list. To switch from one linelist to another
   requires editing ABSCOF, uncommenting the lines you want, and recompiling.
   After testing this feature on the ESMOS3 spectra I set it back to ATMOS.

GFIT  Version 5.0.0     8  Feb 1994  GCT
	In this major revision we have gone back to ASCII runlogs as the
   primary source of information about the spectrum. These runlogs contain
   all the information necessary to perform a quantitative analysis of that
   spectrum. The attached spectrum headers are therefore not read any more.
	The main reason for this change was to avoid having to re-archive
   (to CDROM) an entire set of spectra every time a parameter (e.g. ASZA or
   FOVI) was changed in value.
	A second benefit is that since the new runlog format is "universal"
   (i.e. identical for all different instruments: MkIV, ATMOS, Bruker etc.),
   GGG becomes independent of the instrument type. This simplifies the code
   (especially GETINFO) since it now only has to support one format - the new
   universal format.
	The third reason for making this change is that we now wish to
   introduce additional instrumental parameters (angular misalignment,
   zenith pointing offset, Doppler shift, intensity offset) for which no
   slots exist in the current attached header. 

GFIT  Version 4.7.7    18  Feb 1994  GCT
   Converted ABSCOF to read the linelists in HITRAN92 format instead of ATMOS
   ascii format. These new files are called *.h92 instead of *.asc.
   This has 3 advantages:
   (1) direct compatibility with the HITRAN92 linelist, allowing other users
       who do not have access to the atmos list to run GGG.
   (2) the new linefiles will be smaller (100 characters wide instead of 120).
   (3) the F11 and N2O5 PBHWs can be reformatted to avoid the ***** which
       existed in the old linelists.

GFIT  Version 4.7.6     5  Feb 1994  GCT
   Created seperate arrays for TRNSMT, CALCUL to better distinguish the
   transmittances from CALCUL (=TRNSMT*CNTUUM). This allowed the PDs for
   the frequency shifts to be calculated directly from CALCUL, rather than
   from TRNSMT and then post-multiplied by CNTUUM.
	Also, reordered some of the calls in the iteration loop to facilitate
   computation of the effective spectral resolution, even though this code
   has not yet been implemented.

GFIT  Version 4.7.5     6  Jan 1994  GCT
   Added another term in the error estimate of magnitude ZOFF/CNTUUM which
   prevents the error bar from being underestimated in completely blacked
   out spectral regions when an uncancelled zero offset is present.

GFIT  Version 4.7.4    31  Dec 1993  GCT
   Removed use of the variable CALBAR. Instead a contribution to EX from
   the uncertainty (ZOFF=0.5%) in the zero level is computed.

GFIT  Version 4.7.3    29  Dec 1993  GCT
   Moved the computation of EX to outside the iteration loop. Also, changed the
   Eigenvector rejection criterion from  IF(W(k).gt.thresh) THEN   as suggested
   in Numerical Recipes to the 'smoother' form below suggested by Lawson
            DX(i) = DX(i) + PD(i,k)*RESID(k)*W(k)/(thresh**2+W(k)**2)
            EX(i) = EX(i) + PD(i,k)*2/(thresh**2+W(k)**2)
   This made no difference to the retrieved burdens or their errors in well
   defined windows, but I expect it will in other windows. This change also
   eliminated the warning message 'Near-singular Eigenvalue rejected'.

GFIT  Version 4.7.2    28  Dec 1993  GCT
   Changed several of the variable names in GGG.F to make them more expressive
   and less confusing. For example, NN was previously the number of non-target
   gases being retrieved and NNMAX was the maximum number of storable VAC
   elements.
   I have also implemented a self-consistent naming convention whereby array XYZ
   has a declared dimension of MXYZ but only NXYZ elements are actually used.

GFIT  Version 4.7.1    20  Dec 1993  GCT
   Halved the threshold for ABSCOF to print out a spectral line (from 0.0001
   to 0.00005). These will still be expressed as E-wid = 0.1 mK

GFIT  Version 4.7.0    17  Dec 1993  SEN
   removed from ggg.f the statements allowing explicit spectral fittings
   at 1.88 mk, 0.94 mk, and 0.47 mk.

   included in the statement, in abscof, reading linelist information is a
   branch to line 3237 in case of i/o error. iostat variable 'ios' contains
   the fortran error number (zero when no error; +ve otherwise.) the fix
   allows abscof to read sup.asc in spite of bad data fields in the linelist.
   abscof will return successfully all relevant information in the frequency
   range nu1 through nu2. analysing target molecules with bad data fields will
   continue to be a problem.

GFIT  Version 4.6.8    29  Nov 1993  SEN
   included the statement "if (runlab(4:5) .eq. 92) fovi=fovi*1.2" to
   allow analysis of 1992 fts balloon spectra archieved to cdrom
   mk4.002.

GFIT  Version 4.6.7    27  Nov 1993  GCT
   Included the statement  IF(EPRIME.lt.0.0) EPRIME=300.0  in ABSCOF.F
   This was done because I noticed that the linelist contains CH4 lines
   having E"=-1, which means that it is unknown. I believe that in
   cases when E" is unknown, 300 will be a better guess than -1.
   When tested in the HCl 2963 window this modification improved the
   rms fit from 0.70 to 0.66.

GFIT  Version 4.6.6    26  Nov 1993  GCT
   Increased the default InSb Intensity offset from 1% to 2%.

GFIT  Version 4.6.5    25  Nov 1993  GCT
   To further discriminate against blacked-out spectral lines where
   CALBAR*CX(NT+1) is small, I now divide the error estimate by this
   quantity rather than its square root. This should make no difference
   to the retrieved burdens, only their errors will change.

GFIT  Version 4.6.4    24  Nov 1993  GCT
   Limited the maximum step size to DX/SQRT(1+4*DX**2) instead of
   DX/SQRT(1+DX**2) to further limit the step size for DX > 1.
   Note that for DX < 1 the limited step size tends to DX. 

GFIT  Version 4.6.3    23  Nov 1993  GCT
   Redefined the variable CALBAR as CALBAR/SQRT(1+(CALBAR-1)**2) thus
   preventing it ever exceeding unity. This was necessary to avoid very
   small error estimates whenever the absorber amount became -ve and
   the calculated transmittances became >> 1.

GFIT  Version 4.6.2    14  Nov 1993  GCT
   GGG now recognizes runs labeled as OBR, MER and LSI as being MkIV data.
   Previously it only recognized INT.

GFIT  Version 4.6.1     5  Nov 1993  GCT
   Corrected a problem in SLPATH whereby WAVMIC was not used in the
   final tracing of the ray path (WAVTKR was used instead). I do not
   expect this will make a noticable difference to the results.

GFIT  Version 4.6.0     1  Nov 1993  GCT
   Fixed a bug in READSET which caused the vmrs of the last gas in the
   set (usually SF6) to be ignored. This led to GGG not computing any
   absorptions for the last gas, and caused eigenvalues to be discarded
   if it were made a target gas.

GFIT  Version 4.5.9     5  Sep 1993  GCT
   Decreased the dimension of array CONC, which holds the original
   concentration profiles of the target gases, from NLMAX to NTMAX.
   This will not change the retrieved values, it will just save memory.

GFIT  Version 4.5.8     1  Sep 1993  GCT
   Decreased the step size from 5 to 2 km in GETSP which is part of SLPATH,
   and increased MAXSTEP to 3333. This reduced the scatter in the slant paths.

GFIT  Version 4.5.7    28  Aug 1993  GCT
   Hardwired FOVOUT to 3.6 (mrad) in GETINFO for all MkIV spectra. This
   was done to prevent changes to FOVR, made to better represent the ILS,
   affecting the slant paths. Also, this ensures that the HgCd and InSb
   slant paths are identical, so that it does not matter which .OBS file
   GGGRET reads.

GFIT  Version 4.5.6    26  Aug 1993  GCT
   Increased CO2 molecular weight from 44 to 45 in MOLPAR.DAT.
   Most of the lines that we use are actually heavy isotopes (45 or 46).

GFIT  Version 4.5.5    25  Aug 1993  GCT
   Changed the -C (array bound checking) compiler option in the MAKEFILE
   to -O (optimize). This ran 3.4 times faster to produce identical results.

GFIT  Version 4.5.4    24  Aug 1993  GCT
   Implemented an intensity offset subtraction currently hardwired to 1% of
   the local continuum for MkIV InSb spectra and 0% for everything else.

GFIT  Version 4.5.3    21  Aug 1993  GCT
   Now limit the step size to dx/sqrt(1+dx**2) to prevent really large steps.
   Also, included the logical variable DEBUG which, when true, prints out the
   diagnostics each iteration.

GFIT  Version 4.5.2    20  Aug 1993  GCT
   ABSCOF now warns the user whenever a line is found whose width is less than
   that of the primative grid.

GFIT  Version 4.5.1    20  Aug 1993  GCT
   Moved the  IF(nsvac.gt.nsmax)STOP  statement outside the spectrum loop (77)
   so that if several spectra will have slit functions exceeding NSMAX, it
   will only report the largest, and not stop at the first exception (which
   may not be the largest).
 
GFIT  Version 4.5.0    19  Aug 1993  GCT
   Replaced subroutine PROFWL with PROFXL. The latter does the convolution
   of the SINC and the RECT in real (frequency) space rather than Fourier
   (displacement) space, thus avoiding all the FFT routines. Whereas previously
   the SLIT array had to be larger than the actual slit function width in
   order to accomodate padding with zeros to the next power of 2, it now need
   be no larger than the silt operator (2*NK+1), which means that PROFXL does
   not need to know the externally declared dimension of SLIT. It also allows
   NSMAX to be reduced in size from 4098 to 2048 for the same job.

GFIT  Version 4.4.51   16  Aug 1993  SEN
   call to readmod subroutine now checks for value of eqrad (=6378.0 km.)
   this allows ggg to inform user of inappropriate data format in the
   models file before computational error, improper abort, or programme
   "hangup" occurs. 

GFIT  Version 4.4.5    16  Aug 1993  GCT
   Improved the error estimation by taking into account the linear
   dependence of neighboring spectral points by scaling the variance by
      CORRLD = sqrt( rect**2 + ((1.+0.4*APO)*resn)**2 )/gint
   Previously, the variance had been scaled by just INTERP, which had
   assumed that all the points in the original raw spectrum were
   independent (resn=gint and rect=0) and that no apodization was applied.
   In all cases version 4.4.5 will produce larger error estimates than
   previously. This will be especially true at the high wavenumber ends
   of each detector where the width of the RECT approaches that of the
   SINC, and in 30 cm runs where the interferogram size is only 80% of
   the FFT size.

GFIT  Version 4.4.4    13  Aug 1993  GCT
   Improved function height so that it now takes account of temperature
   gradients between the model levels that it is interpolating between.
   As expected, this made no noticable difference to the benchmark, but
   for models with >> 1 km spacing it will provide a more marked improvement.
   Function height is now a seperate file.
 
GFIT  Version 4.4.3    10  Aug 1993  GCT
   Discovered bug in profwl.f which caused the peak of the sin(x)/x
   to miss the center of the SLIT array by one grid point. Since the
   apodization of the slit function was correctly centered on the array,
   the resulting ILS was slightly assymetrical, even when OFFSET=0 .
   With this corrected, the ifudge=1 can be removed from GETINFO.

GFIT  Version 4.4.2     5  Aug 1993  GCT
   We now limit the size of changes to retrieved quantities by the 
   expression  cx = cx + dx/sqrt(1+abs(dx))
   For small dx this has little effect, but for dx > 1 it becomes
   appreciable. Note that it limits both +ve and -ve changes. Without
   this improvement, large (>20) changes in gas amounts was observed
   in nearly blacked out windows when the continuum was close to zero.

GFIT  Version 4.4.11    5  Aug 1993  SEN
   changed a write statement to include the tangent height as a part of
   the first data line in the sptfiles. this allows the idl programme to
   to print both zobs and tang as part of the plot title.

GFIT  Version 4.4.1     4  Aug 1993  GCT
   changed the convergence criterion to  IF(abs(var-varwas).lt.1.e-10)
   This allows large increases or decreases in the rms fit, but ends
   the iteration if the changes become very small. For HF it was found
   unavoidable that VAR would occasionally increase, and we did not want
   this to end the iteration.
  
   Also, removed the statement fr=1.-1/jit/jit which had been intended
   to limit the step size early in the interation. It was not effective
   in preventing increases in VAR.

   We now limit the size of -ve changes in SCALE by using EXP(dx)-1
   like we have always done for the target gases. 

GFIT  Version 4.4.0    29 July 1993  GCT
   Fixed an indexing error which caused the non-target VACs to be
   multiplied by the continuum level i.e. cx(nt+1), in loop 56.
   In most cases this had little effect. Only when the continuum
   is very different from unity AND strong non-target absorptions
   were present was the error appreciable. It manifested itself by
   all of the calculated spectral values being substantially lower
   than the measured ones. Since the RMS was enormous little weight
   was attached to the retrieved burden. Occasionally, in severe
   cases positive feedback caused the continuum value to run away.

GFIT  Version 4.3.4    11 July 1993  GCT
   Changed READSET so that the molecule names at the top of the vmrset
   are now deciphered using the function MOLNUM.F. The code was further
   simplified by using the integer function FNBC.F (First Non-Blank Char)

GFIT  Version 4.3.3     5 July 1993  GCT
   Two changes to the .col output file: (i) The name of the file
   containing the fitting levels (LEVFILE) is now included in the
   .col output file. (ii) The number of header lines is now written
   at the top, so that programs which automatically read the data
   know immediately how many lines to skip.

GFIT  Version 4.3.2     3 July 1993  GCT
   Modified subroutine READSET so that only one logical unit need be
   open at any one time. The number of this LUN is now passed to
   READSET in the parameter list. Previously two logical units had been
   opened simultaneously inside READSET; one for reading the actual vmr
   profiles and one for reading MOLPAR.DAT.

GFIT  Version 4.3.1    29 May 1993   GCT
   The name of the file of fitting levels e.g. '/ggg/levels/levels.orb'
   is now included in the .ggg file, instead of being hard-wired.

GFIT  Version 4.3.0    29 May 1993   GCT
   Removed parameters APO and INTERP from param.inc and included
   them in the .ggg file. They are now hard-wired inside MAKGGG but
   the user may change them simply by editing the .ggg file, without
   any modification or recompilation of GGG.

GFIT  Version 4.2.1    25 May 1993   GCT
   Replaced the line in the vmr sets that used to say 'km vmr vmr vmr...'
   with the quantity VSHIFT, the vertical shift in kilometres. VSHIFT is
   added to the altitudes when the vmrs are read in by READSET. It is
   alot easier to change one value (VSHIFT) than all of the altitudes.
   VSHIFT=0.0 should give identical answers as previously.

GFIT  Version 4.2.0    24 May 1993   GCT
   Replaced the HYDADD subroutine by READMOD and READSET. This allows
   more flexibilty in choosing the fitting levels, model levels and
   vmr levels. These quantities are now completely independent.

GFIT  Version 4.1.5    23 May 1993   GCT
   Multiplied a priori covariances (RAE) by INTERP, after it failed to
   converge on some HF lines with INTERP=2, which it had sucessfully
   fitted with INTERP=1.

GFIT  Version 4.1.4    22 May 1993   GCT
   Fixed a bug in GETSPE whereby whenever VSET was called with a -ve
   increment with NELE GT 1, an array bound error was caused. This was
   fixed simply by keeping the increment +ve. This bug was only discovered
   when I tried to run GGG with INTERP > 1.

GFIT  Version 4.1.3    21 May 1993   GCT
   Changed the file '/ggg/src/molpar.dat' to allow multiple entries
   for gases having different names e.g. ClNO3 & CLONO2. This will now
   permit either form to be used. Consequently, subroutine VIBPAR in
   'abscof.f' had to be changed to make multiple read attempts.

GFIT  Version 4.1.2    20 May 1993   GCT
   Substituted NGAS for NG throughout GGG and ABSCOF. Previously, with
   NG=46 NGAS=50, the VMR(NGAS*NLMAX) array had been treated as (NG,NL),
   which had the effect of using it contiguously, but with no saving in
   overall storage. Now it is treated as (NGMAX,NL). The variable NG is
   now only used in HYDADD to help read the lines of vmrs.

GFIT  Version 4.1.1    19 May 1993    GCT
   Changed HYDADD to read read the physical model from the xxx.mod  files
   instead of the xxx.mdl. The former are in the format (P,T,Z,W) instead
   of (Z,T,W). This change is a stepping stone towards having models in the
   format (P,T) with a seperate file containing (Z,W).

GFIT  Version 4.1.0
   Changed the definition of TILT such that the continuum is given by
   (scale+tilt*(j-c))  rather than scale*(1+tilt*(j-c)) as previously.
   I hope that will prevent very large tilts being retrieved when SCALE
   becomes very small. This change also simplifies the PDs for the 
   continuum, tilt, shift, and the gases. In fact, it allowed the DO 57
   loop to be replaced entirely by vector calls, which made the code
   more concise.

GFIT  Version 4.0.1
   Increased the a priori covariance of the TILT from 0.0 to 0.2. This
   had two advantages in the case of strong blacked-out lines: (i) it
   prevented very large tilts being retrieved in order to try to fit -ve
   observed values, and (ii) it prevented temporary increases in VAR
   which would terminate the iteration loop.

GFIT  Version 4.0.0
   Changed the convergence criterion so that convergence is now achieved
   whenever the variance of the residuals increases. Previously, when
   the changes to the VFACTs was used, it would not converge at all when
   very weak or very strong absorbers were retrieved because small changes
   to the absorber amount would have no effect on the calculated spectrum.


 GETSPE HISTORY LOG

GFIT  Version 2.7.0   GCT   14 Apr 93
   Implemented direct-access FORTRAN reads of the spectral header/runlog
   information in subroutine GETINFO, instead of calling GETHED and/or
   reading the IHEDR. This eliminates the need to equivalence the
   header/runlog variables to the IHEDR array which caused misalignment
   problens on the MIPS. It also removes the need for the GETHED subroutine
   and the C library routines READFH. Thus, the entire GGG package is now
   entirely FORTRAN and is completely independent of any libraries.
   As a further bonus, GETINFO now positions in the Atmos runlog without
   using the key, with no loss of efficiency (provided it is sorted). This
   avoids the confusion which occurs when the key contradicts the actual runlog

GFIT  Version 2.6.0   GCT   10 Mar 93
   To make the unformatted direct-access read work on the MIPS, where the
   miminum record length is 4 bytes, I now read the spectra into the R*4
   array RAW instead of the I*2 array IRAW. This halves the total number
   of reads required which recovers alot of the speed lost by dumping the
   C routines in the previous revision, but makes the code more complicated
   to cater for cases when an odd number of points must be skipped or read.

GFIT  Version 2.5.0   GCT   30 Jan 1993
   To make the code more portable I now read the spectra using Fortran
   direct-access read, instead of the C routines OPENFH, READFH, POSNFH
   CLOSFH. This is slower: my HCl benchmark now takes 104s instead of
   100 s, but it does considerably simplify the code (GETRAW has been
   completely eliminated) and makes compiling & linking easier.

GFIT  Version 2.4.0   GCT    9-MAR-92
   All the sections of code which deal with accessing and reading
   the spectral disk file have been gathered together and placed in a
   subroutine called GETRAW.F
   The raw spectral values are now saved in an internal array RAW so that
   whenever just INTERP, APO, or OFF are changed, the measured spectrum may
   be recomputed whenever without re-reading the disk. The disadvantage of
   this is that the amount of raw data may exceed ITERP, the dimension of RAW.
   
GFIT  Version 2.3.0   GCT   26-DEC-91
   Changed the code so that I*2 data are converted to R*4 in place
   immediately after they are read in. All subsequent arithmetic is R*4,
   which means that the precision of KP spectra is not degraded by conversion
   to I*2 like it used to be.
   This change also avoids having to have special VMOV and DOTPR subroutines
   to operate on the I*2 variables; the VECLIB versions can now be used.

GFIT  Version 2.2.2   GCT    3-DEC-91
   Put the code which accesses the spectrum header/runlog into a seperate
   subroutine called GETINFO, which is called from GETSPE.
   Also, considerably simplified the subroutine PROFWL.

GFIT  Version 2.1.2   GCT,   29-NOV-91
   Included the capability to read KP and JJ data in R*4 binary format.

GFIT  Version 2.0.1   GCT,   2-NOV-91
   This is a major revision of GETSPE in which the code has undergone
   complete restructuring, correction of bugs, expansion to access MkIV spectra
   with attached headers, and a more thorough implementation of status flags.
   Specifically:
   - GETSPE now checks whether the requested spectral data can be acquired,
     informing the user via the status flag if and why it cannot. If something
     does go wrong, GETSPE exits cleanly with as much data as it can grab.
   - Branching, which made APO=1, INTERP=0 a special case, has been removed;
     all cases now go through the same code.
   - Arbitrary, empirical indexing fudges (e.g. M1=N1+3.5) were eliminated
   - All the functions relating to the vacuum-to-air correction, which were
     previously strewn throughout the code, have all been gathered in a
     function called RIAIR.
   - The R*4 array PRIM, into which the scaled spectral values were stored
     prior to convolution, has been eliminated. Scaling is now performed
     during convolution (and will be marginally slower for INTERP>1) 
   - The Doppler shift DOPP is now passed to GETSPE, allowing the requested
     spectral interval to be adjusted without having to reinitialize NUS & NUE.
   - The subroutine PROFWL is a simplified version of PROFIL. The parameter
     list is simplified as are some of their definitions. The name was changed
     to prevent the two from ever accidentally being mistaken.
   - The following bugs were also fixed:
     1) A typographic error in the value of pi (3.141526..) in PROFIL;
     2) When INTERP>1 the slit function returned by PROFIL was not
        independently normalized for each subset, resulting in the
        multiplication of the spectra by a saw-tooth of 1 part in 10000;
     3) The laser semi-frequency (7899.0015 cm-1) was used in the air-to-
        vacuum correction, instead of the true laser frequency. This produces
        a spurious frequency shift (0.01 @ 3000 cm-1) in air filled instruments
     4) The previous GETSPE returned points from beyond the requested interval.
     5) The previous GETSPE failed to return interpolated points which lay
        between the edge of the requested interval and the first/last real
        data point. 
     6) Array bound error in PROFIL when IDECIM=8 (NCAR spectra) caused
        first element of slit function to be trashed.
     None of these bugs have a serious impact for ATMOS SL3.

   Usage.
   The user specifies the name of a spectrum and a spectral interval
   and the routine will figure out which points it has to read from
   the disk file in order to fulfil the request. If apodization
   or interpolation is to be performed, the raw spectrum has to be
   convolved with an operator, returned by the subroutine PROFWL.
   In this case, an extra portion of raw spectrum must be read on each
   side of the requested interval, to accomodate the width of the operator,

   GETSPE has to be able to calculate the exact wavenumber of any point
   in the disk file. This requires knowing the FFT size, the sampling
   interval, and the number of points by which the disk file was truncated.
   Additionally, the various frequency corrections (finite field of view,
   gas inside instrument, Doppler effect, etc) must be performed. All of
   this instrumental information is stored in a binary runlog in the case
   of ATMOS, in an attached binary header in the case of MkIV spectra,....

   GETSPE uses an internal buffer (dimension IPMAX=2048) for temporary
   storage of raw data. With a point spacing of 0.007533 cm-1 it will
   hold 15 cm-1 of data.  If more than this is needed, GETSPE will
   automatically perform multiple reads, apodizing, interpolating and
   scaling the data (with the convolution operator returned by PROFWL)
   after each read, before sending the final data into the user-supplied
   buffer YOBS. Although it would have simplified the code to make IPMAX
   larger than any conceivable read, this would have wasted memory on the
   numerous occasions when only a narrow spectral interval was requested.
